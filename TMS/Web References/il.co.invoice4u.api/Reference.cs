//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace TMS.il.co.invoice4u.api {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ApiService", Namespace="Invoice")]
    public partial class BasicHttpBinding_ApiService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VerifyLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyLoginRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAuthenticatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBranchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDocumentRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentByApiIdentifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentByApiIdentifierRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeDocumentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentByNumberRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerParamsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByOrgIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByOrgIdRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByClientCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByGuidInnerSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByClientCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByExternalNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssociatedEmailsByClientOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCatalogItemByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCatalogItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClearingAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDocumentByMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStandingOrderSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessClearingDocOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertToLogFullParamsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessApiRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessApiRequestFullContentsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProccessApiRequestClearingLogInsertRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback TokenAddForClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStandingOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClearingProductOrdersByTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClearingProductOrdersByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessRequestFullContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessRequestFullContentsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserRegistrationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpBinding_ApiService() {
            this.Url = global::TMS.Properties.Settings.Default.TMS_il_co_invoice4u_api_ApiService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VerifyLoginCompletedEventHandler VerifyLoginCompleted;
        
        /// <remarks/>
        public event VerifyLoginRESTCompletedEventHandler VerifyLoginRESTCompleted;
        
        /// <remarks/>
        public event IsAuthenticatedCompletedEventHandler IsAuthenticatedCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event GetBranchesCompletedEventHandler GetBranchesCompleted;
        
        /// <remarks/>
        public event CreateDocumentCompletedEventHandler CreateDocumentCompleted;
        
        /// <remarks/>
        public event CreateDocumentRESTCompletedEventHandler CreateDocumentRESTCompleted;
        
        /// <remarks/>
        public event GetDocumentByApiIdentifierCompletedEventHandler GetDocumentByApiIdentifierCompleted;
        
        /// <remarks/>
        public event GetDocumentByApiIdentifierRESTCompletedEventHandler GetDocumentByApiIdentifierRESTCompleted;
        
        /// <remarks/>
        public event GetDocumentsCompletedEventHandler GetDocumentsCompleted;
        
        /// <remarks/>
        public event GetDocumentsRESTCompletedEventHandler GetDocumentsRESTCompleted;
        
        /// <remarks/>
        public event InitDocumentCompletedEventHandler InitDocumentCompleted;
        
        /// <remarks/>
        public event ChangeDocumentStatusCompletedEventHandler ChangeDocumentStatusCompleted;
        
        /// <remarks/>
        public event GetDocumentCompletedEventHandler GetDocumentCompleted;
        
        /// <remarks/>
        public event GetDocumentByNumberCompletedEventHandler GetDocumentByNumberCompleted;
        
        /// <remarks/>
        public event GetCustomerReportCompletedEventHandler GetCustomerReportCompleted;
        
        /// <remarks/>
        public event GetDocumentByNumberRESTCompletedEventHandler GetDocumentByNumberRESTCompleted;
        
        /// <remarks/>
        public event CreateCreditCardCompletedEventHandler CreateCreditCardCompleted;
        
        /// <remarks/>
        public event GetListCompletedEventHandler GetListCompleted;
        
        /// <remarks/>
        public event CreateCustomerCompletedEventHandler CreateCustomerCompleted;
        
        /// <remarks/>
        public event CreateCustomerRESTCompletedEventHandler CreateCustomerRESTCompleted;
        
        /// <remarks/>
        public event CreateCustomerParamsRESTCompletedEventHandler CreateCustomerParamsRESTCompleted;
        
        /// <remarks/>
        public event UpdateCustomerCompletedEventHandler UpdateCustomerCompleted;
        
        /// <remarks/>
        public event GetFullCustomerCompletedEventHandler GetFullCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomersByOrgIdCompletedEventHandler GetCustomersByOrgIdCompleted;
        
        /// <remarks/>
        public event GetCustomersByOrgIdRESTCompletedEventHandler GetCustomersByOrgIdRESTCompleted;
        
        /// <remarks/>
        public event GetCustomersCompletedEventHandler GetCustomersCompleted;
        
        /// <remarks/>
        public event GetCustomersRESTCompletedEventHandler GetCustomersRESTCompleted;
        
        /// <remarks/>
        public event GetCustomerByNameCompletedEventHandler GetCustomerByNameCompleted;
        
        /// <remarks/>
        public event GetCustomerByClientCodeCompletedEventHandler GetCustomerByClientCodeCompleted;
        
        /// <remarks/>
        public event GetCustomerByGuidCompletedEventHandler GetCustomerByGuidCompleted;
        
        /// <remarks/>
        public event GetCustomerByGuidInnerSearchCompletedEventHandler GetCustomerByGuidInnerSearchCompleted;
        
        /// <remarks/>
        public event GetByClientCodeCompletedEventHandler GetByClientCodeCompleted;
        
        /// <remarks/>
        public event GetCustomerByExternalNumberCompletedEventHandler GetCustomerByExternalNumberCompleted;
        
        /// <remarks/>
        public event GetAssociatedEmailsByClientOnlyCompletedEventHandler GetAssociatedEmailsByClientOnlyCompleted;
        
        /// <remarks/>
        public event GetCatalogItemByCodeCompletedEventHandler GetCatalogItemByCodeCompleted;
        
        /// <remarks/>
        public event GetCatalogItemsCompletedEventHandler GetCatalogItemsCompleted;
        
        /// <remarks/>
        public event GetUserClearingAccountCompletedEventHandler GetUserClearingAccountCompleted;
        
        /// <remarks/>
        public event SendDocumentByMailCompletedEventHandler SendDocumentByMailCompleted;
        
        /// <remarks/>
        public event SendStandingOrderSummaryCompletedEventHandler SendStandingOrderSummaryCompleted;
        
        /// <remarks/>
        public event ProcessCardCompletedEventHandler ProcessCardCompleted;
        
        /// <remarks/>
        public event ProcessClearingDocOnlyCompletedEventHandler ProcessClearingDocOnlyCompleted;
        
        /// <remarks/>
        public event InsertToLogFullParamsRESTCompletedEventHandler InsertToLogFullParamsRESTCompleted;
        
        /// <remarks/>
        public event ProcessApiRequestCompletedEventHandler ProcessApiRequestCompleted;
        
        /// <remarks/>
        public event ProcessApiRequestFullContentsRESTCompletedEventHandler ProcessApiRequestFullContentsRESTCompleted;
        
        /// <remarks/>
        public event ProccessApiRequestClearingLogInsertRESTCompletedEventHandler ProccessApiRequestClearingLogInsertRESTCompleted;
        
        /// <remarks/>
        public event TokenAddForClientCompletedEventHandler TokenAddForClientCompleted;
        
        /// <remarks/>
        public event AddStandingOrderCompletedEventHandler AddStandingOrderCompleted;
        
        /// <remarks/>
        public event GetProductsCompletedEventHandler GetProductsCompleted;
        
        /// <remarks/>
        public event GetProductByIdCompletedEventHandler GetProductByIdCompleted;
        
        /// <remarks/>
        public event GetClearingProductOrdersByTokenCompletedEventHandler GetClearingProductOrdersByTokenCompleted;
        
        /// <remarks/>
        public event GetClearingProductOrdersByProductIdCompletedEventHandler GetClearingProductOrdersByProductIdCompleted;
        
        /// <remarks/>
        public event ProcessRequestFullContentsCompletedEventHandler ProcessRequestFullContentsCompleted;
        
        /// <remarks/>
        public event ProcessRequestFullContentsRESTCompletedEventHandler ProcessRequestFullContentsRESTCompleted;
        
        /// <remarks/>
        public event UserRegistrationCompletedEventHandler UserRegistrationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/VerifyLogin", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VerifyLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("VerifyLogin", new object[] {
                        email,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyLoginAsync(string email, string password) {
            this.VerifyLoginAsync(email, password, null);
        }
        
        /// <remarks/>
        public void VerifyLoginAsync(string email, string password, object userState) {
            if ((this.VerifyLoginOperationCompleted == null)) {
                this.VerifyLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyLoginOperationCompleted);
            }
            this.InvokeAsync("VerifyLogin", new object[] {
                        email,
                        password}, this.VerifyLoginOperationCompleted, userState);
        }
        
        private void OnVerifyLoginOperationCompleted(object arg) {
            if ((this.VerifyLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyLoginCompleted(this, new VerifyLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/VerifyLoginREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VerifyLoginREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("VerifyLoginREST", new object[] {
                        email,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyLoginRESTAsync(string email, string password) {
            this.VerifyLoginRESTAsync(email, password, null);
        }
        
        /// <remarks/>
        public void VerifyLoginRESTAsync(string email, string password, object userState) {
            if ((this.VerifyLoginRESTOperationCompleted == null)) {
                this.VerifyLoginRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyLoginRESTOperationCompleted);
            }
            this.InvokeAsync("VerifyLoginREST", new object[] {
                        email,
                        password}, this.VerifyLoginRESTOperationCompleted, userState);
        }
        
        private void OnVerifyLoginRESTOperationCompleted(object arg) {
            if ((this.VerifyLoginRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyLoginRESTCompleted(this, new VerifyLoginRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/IsAuthenticated", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public User IsAuthenticated([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("IsAuthenticated", new object[] {
                        token});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void IsAuthenticatedAsync(string token) {
            this.IsAuthenticatedAsync(token, null);
        }
        
        /// <remarks/>
        public void IsAuthenticatedAsync(string token, object userState) {
            if ((this.IsAuthenticatedOperationCompleted == null)) {
                this.IsAuthenticatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAuthenticatedOperationCompleted);
            }
            this.InvokeAsync("IsAuthenticated", new object[] {
                        token}, this.IsAuthenticatedOperationCompleted, userState);
        }
        
        private void OnIsAuthenticatedOperationCompleted(object arg) {
            if ((this.IsAuthenticatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAuthenticatedCompleted(this, new IsAuthenticatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/Logout", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout() {
            this.Invoke("Logout", new object[0]);
        }
        
        /// <remarks/>
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        /// <remarks/>
        public void LogoutAsync(object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetBranches", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
        public Branch[] GetBranches([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetBranches", new object[] {
                        token});
            return ((Branch[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchesAsync(string token) {
            this.GetBranchesAsync(token, null);
        }
        
        /// <remarks/>
        public void GetBranchesAsync(string token, object userState) {
            if ((this.GetBranchesOperationCompleted == null)) {
                this.GetBranchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchesOperationCompleted);
            }
            this.InvokeAsync("GetBranches", new object[] {
                        token}, this.GetBranchesOperationCompleted, userState);
        }
        
        private void OnGetBranchesOperationCompleted(object arg) {
            if ((this.GetBranchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchesCompleted(this, new GetBranchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateDocument", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document CreateDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Document doc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("CreateDocument", new object[] {
                        doc,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(Document doc, string token) {
            this.CreateDocumentAsync(doc, token, null);
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(Document doc, string token, object userState) {
            if ((this.CreateDocumentOperationCompleted == null)) {
                this.CreateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDocumentOperationCompleted);
            }
            this.InvokeAsync("CreateDocument", new object[] {
                        doc,
                        token}, this.CreateDocumentOperationCompleted, userState);
        }
        
        private void OnCreateDocumentOperationCompleted(object arg) {
            if ((this.CreateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDocumentCompleted(this, new CreateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateDocumentREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document CreateDocumentREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Document doc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("CreateDocumentREST", new object[] {
                        doc,
                        email,
                        password});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDocumentRESTAsync(Document doc, string email, string password) {
            this.CreateDocumentRESTAsync(doc, email, password, null);
        }
        
        /// <remarks/>
        public void CreateDocumentRESTAsync(Document doc, string email, string password, object userState) {
            if ((this.CreateDocumentRESTOperationCompleted == null)) {
                this.CreateDocumentRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDocumentRESTOperationCompleted);
            }
            this.InvokeAsync("CreateDocumentREST", new object[] {
                        doc,
                        email,
                        password}, this.CreateDocumentRESTOperationCompleted, userState);
        }
        
        private void OnCreateDocumentRESTOperationCompleted(object arg) {
            if ((this.CreateDocumentRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDocumentRESTCompleted(this, new CreateDocumentRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentByApiIdentifier", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocumentByApiIdentifier([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiIdentifier, int docType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocumentByApiIdentifier", new object[] {
                        apiIdentifier,
                        docType,
                        docTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentByApiIdentifierAsync(string apiIdentifier, int docType, bool docTypeSpecified, string token) {
            this.GetDocumentByApiIdentifierAsync(apiIdentifier, docType, docTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentByApiIdentifierAsync(string apiIdentifier, int docType, bool docTypeSpecified, string token, object userState) {
            if ((this.GetDocumentByApiIdentifierOperationCompleted == null)) {
                this.GetDocumentByApiIdentifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentByApiIdentifierOperationCompleted);
            }
            this.InvokeAsync("GetDocumentByApiIdentifier", new object[] {
                        apiIdentifier,
                        docType,
                        docTypeSpecified,
                        token}, this.GetDocumentByApiIdentifierOperationCompleted, userState);
        }
        
        private void OnGetDocumentByApiIdentifierOperationCompleted(object arg) {
            if ((this.GetDocumentByApiIdentifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentByApiIdentifierCompleted(this, new GetDocumentByApiIdentifierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentByApiIdentifierREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocumentByApiIdentifierREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiIdentifier, int docType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocumentByApiIdentifierREST", new object[] {
                        apiIdentifier,
                        docType,
                        docTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentByApiIdentifierRESTAsync(string apiIdentifier, int docType, bool docTypeSpecified, string token) {
            this.GetDocumentByApiIdentifierRESTAsync(apiIdentifier, docType, docTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentByApiIdentifierRESTAsync(string apiIdentifier, int docType, bool docTypeSpecified, string token, object userState) {
            if ((this.GetDocumentByApiIdentifierRESTOperationCompleted == null)) {
                this.GetDocumentByApiIdentifierRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentByApiIdentifierRESTOperationCompleted);
            }
            this.InvokeAsync("GetDocumentByApiIdentifierREST", new object[] {
                        apiIdentifier,
                        docType,
                        docTypeSpecified,
                        token}, this.GetDocumentByApiIdentifierRESTOperationCompleted, userState);
        }
        
        private void OnGetDocumentByApiIdentifierRESTOperationCompleted(object arg) {
            if ((this.GetDocumentByApiIdentifierRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentByApiIdentifierRESTCompleted(this, new GetDocumentByApiIdentifierRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocuments", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfDocumentJHiVxprS GetDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentsRequest dr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocuments", new object[] {
                        dr,
                        token});
            return ((CommonCollectionOfArrayOfDocumentJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentsAsync(DocumentsRequest dr, string token) {
            this.GetDocumentsAsync(dr, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentsAsync(DocumentsRequest dr, string token, object userState) {
            if ((this.GetDocumentsOperationCompleted == null)) {
                this.GetDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetDocuments", new object[] {
                        dr,
                        token}, this.GetDocumentsOperationCompleted, userState);
        }
        
        private void OnGetDocumentsOperationCompleted(object arg) {
            if ((this.GetDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentsCompleted(this, new GetDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfDocumentJHiVxprS GetDocumentsREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentsRequest dr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("GetDocumentsREST", new object[] {
                        dr,
                        email,
                        password});
            return ((CommonCollectionOfArrayOfDocumentJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentsRESTAsync(DocumentsRequest dr, string email, string password) {
            this.GetDocumentsRESTAsync(dr, email, password, null);
        }
        
        /// <remarks/>
        public void GetDocumentsRESTAsync(DocumentsRequest dr, string email, string password, object userState) {
            if ((this.GetDocumentsRESTOperationCompleted == null)) {
                this.GetDocumentsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentsRESTOperationCompleted);
            }
            this.InvokeAsync("GetDocumentsREST", new object[] {
                        dr,
                        email,
                        password}, this.GetDocumentsRESTOperationCompleted, userState);
        }
        
        private void OnGetDocumentsRESTOperationCompleted(object arg) {
            if ((this.GetDocumentsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentsRESTCompleted(this, new GetDocumentsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/InitDocument", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document InitDocument(int docType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("InitDocument", new object[] {
                        docType,
                        docTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void InitDocumentAsync(int docType, bool docTypeSpecified, string token) {
            this.InitDocumentAsync(docType, docTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void InitDocumentAsync(int docType, bool docTypeSpecified, string token, object userState) {
            if ((this.InitDocumentOperationCompleted == null)) {
                this.InitDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitDocumentOperationCompleted);
            }
            this.InvokeAsync("InitDocument", new object[] {
                        docType,
                        docTypeSpecified,
                        token}, this.InitDocumentOperationCompleted, userState);
        }
        
        private void OnInitDocumentOperationCompleted(object arg) {
            if ((this.InitDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitDocumentCompleted(this, new InitDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ChangeDocumentStatus", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonObject ChangeDocumentStatus([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")] Document[] docs, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("ChangeDocumentStatus", new object[] {
                        docs,
                        token});
            return ((CommonObject)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeDocumentStatusAsync(Document[] docs, string token) {
            this.ChangeDocumentStatusAsync(docs, token, null);
        }
        
        /// <remarks/>
        public void ChangeDocumentStatusAsync(Document[] docs, string token, object userState) {
            if ((this.ChangeDocumentStatusOperationCompleted == null)) {
                this.ChangeDocumentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeDocumentStatusOperationCompleted);
            }
            this.InvokeAsync("ChangeDocumentStatus", new object[] {
                        docs,
                        token}, this.ChangeDocumentStatusOperationCompleted, userState);
        }
        
        private void OnChangeDocumentStatusOperationCompleted(object arg) {
            if ((this.ChangeDocumentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeDocumentStatusCompleted(this, new ChangeDocumentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocument", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocument", new object[] {
                        docId,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAsync(string docId, string token) {
            this.GetDocumentAsync(docId, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentAsync(string docId, string token, object userState) {
            if ((this.GetDocumentOperationCompleted == null)) {
                this.GetDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentOperationCompleted);
            }
            this.InvokeAsync("GetDocument", new object[] {
                        docId,
                        token}, this.GetDocumentOperationCompleted, userState);
        }
        
        private void OnGetDocumentOperationCompleted(object arg) {
            if ((this.GetDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCompleted(this, new GetDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentByNumber", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocumentByNumber(int docNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docNumberSpecified, int documentType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool documentTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocumentByNumber", new object[] {
                        docNumber,
                        docNumberSpecified,
                        documentType,
                        documentTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentByNumberAsync(int docNumber, bool docNumberSpecified, int documentType, bool documentTypeSpecified, string token) {
            this.GetDocumentByNumberAsync(docNumber, docNumberSpecified, documentType, documentTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentByNumberAsync(int docNumber, bool docNumberSpecified, int documentType, bool documentTypeSpecified, string token, object userState) {
            if ((this.GetDocumentByNumberOperationCompleted == null)) {
                this.GetDocumentByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentByNumberOperationCompleted);
            }
            this.InvokeAsync("GetDocumentByNumber", new object[] {
                        docNumber,
                        docNumberSpecified,
                        documentType,
                        documentTypeSpecified,
                        token}, this.GetDocumentByNumberOperationCompleted, userState);
        }
        
        private void OnGetDocumentByNumberOperationCompleted(object arg) {
            if ((this.GetDocumentByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentByNumberCompleted(this, new GetDocumentByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerReport", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfDocumentJHiVxprS GetCustomerReport([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentsRequest dr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerReport", new object[] {
                        dr,
                        token});
            return ((CommonCollectionOfArrayOfDocumentJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerReportAsync(DocumentsRequest dr, string token) {
            this.GetCustomerReportAsync(dr, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerReportAsync(DocumentsRequest dr, string token, object userState) {
            if ((this.GetCustomerReportOperationCompleted == null)) {
                this.GetCustomerReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerReportOperationCompleted);
            }
            this.InvokeAsync("GetCustomerReport", new object[] {
                        dr,
                        token}, this.GetCustomerReportOperationCompleted, userState);
        }
        
        private void OnGetCustomerReportOperationCompleted(object arg) {
            if ((this.GetCustomerReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerReportCompleted(this, new GetCustomerReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentByNumberREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocumentByNumberREST(int docNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docNumberSpecified, int documentType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool documentTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocumentByNumberREST", new object[] {
                        docNumber,
                        docNumberSpecified,
                        documentType,
                        documentTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentByNumberRESTAsync(int docNumber, bool docNumberSpecified, int documentType, bool documentTypeSpecified, string token) {
            this.GetDocumentByNumberRESTAsync(docNumber, docNumberSpecified, documentType, documentTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentByNumberRESTAsync(int docNumber, bool docNumberSpecified, int documentType, bool documentTypeSpecified, string token, object userState) {
            if ((this.GetDocumentByNumberRESTOperationCompleted == null)) {
                this.GetDocumentByNumberRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentByNumberRESTOperationCompleted);
            }
            this.InvokeAsync("GetDocumentByNumberREST", new object[] {
                        docNumber,
                        docNumberSpecified,
                        documentType,
                        documentTypeSpecified,
                        token}, this.GetDocumentByNumberRESTOperationCompleted, userState);
        }
        
        private void OnGetDocumentByNumberRESTOperationCompleted(object arg) {
            if ((this.GetDocumentByNumberRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentByNumberRESTCompleted(this, new GetDocumentByNumberRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateCreditCard", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreditCompany CreateCreditCard([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreditCompany credit, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("CreateCreditCard", new object[] {
                        credit,
                        token});
            return ((CreditCompany)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCreditCardAsync(CreditCompany credit, string token) {
            this.CreateCreditCardAsync(credit, token, null);
        }
        
        /// <remarks/>
        public void CreateCreditCardAsync(CreditCompany credit, string token, object userState) {
            if ((this.CreateCreditCardOperationCompleted == null)) {
                this.CreateCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCreditCardOperationCompleted);
            }
            this.InvokeAsync("CreateCreditCard", new object[] {
                        credit,
                        token}, this.CreateCreditCardOperationCompleted, userState);
        }
        
        private void OnCreateCreditCardOperationCompleted(object arg) {
            if ((this.CreateCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCreditCardCompleted(this, new CreateCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetList", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCurrencyJHiVxprS GetList() {
            object[] results = this.Invoke("GetList", new object[0]);
            return ((CommonCollectionOfArrayOfCurrencyJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetListAsync() {
            this.GetListAsync(null);
        }
        
        /// <remarks/>
        public void GetListAsync(object userState) {
            if ((this.GetListOperationCompleted == null)) {
                this.GetListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOperationCompleted);
            }
            this.InvokeAsync("GetList", new object[0], this.GetListOperationCompleted, userState);
        }
        
        private void OnGetListOperationCompleted(object arg) {
            if ((this.GetListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCompleted(this, new GetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateCustomer", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer CreateCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cu, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("CreateCustomer", new object[] {
                        cu,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(Customer cu, string token) {
            this.CreateCustomerAsync(cu, token, null);
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(Customer cu, string token, object userState) {
            if ((this.CreateCustomerOperationCompleted == null)) {
                this.CreateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateCustomer", new object[] {
                        cu,
                        token}, this.CreateCustomerOperationCompleted, userState);
        }
        
        private void OnCreateCustomerOperationCompleted(object arg) {
            if ((this.CreateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerCompleted(this, new CreateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateCustomerREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer CreateCustomerREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cu, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("CreateCustomerREST", new object[] {
                        cu,
                        email,
                        password});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerRESTAsync(Customer cu, string email, string password) {
            this.CreateCustomerRESTAsync(cu, email, password, null);
        }
        
        /// <remarks/>
        public void CreateCustomerRESTAsync(Customer cu, string email, string password, object userState) {
            if ((this.CreateCustomerRESTOperationCompleted == null)) {
                this.CreateCustomerRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerRESTOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerREST", new object[] {
                        cu,
                        email,
                        password}, this.CreateCustomerRESTOperationCompleted, userState);
        }
        
        private void OnCreateCustomerRESTOperationCompleted(object arg) {
            if ((this.CreateCustomerRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerRESTCompleted(this, new CreateCustomerRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateCustomerParamsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer CreateCustomerParamsREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string i4uEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string i4uPassword, int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string customerEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string uniqueId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cell, long externalNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool externalNumberSpecified) {
            object[] results = this.Invoke("CreateCustomerParamsREST", new object[] {
                        i4uEmail,
                        i4uPassword,
                        id,
                        idSpecified,
                        name,
                        customerEmail,
                        uniqueId,
                        phone,
                        cell,
                        externalNumber,
                        externalNumberSpecified});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerParamsRESTAsync(string i4uEmail, string i4uPassword, int id, bool idSpecified, string name, string customerEmail, string uniqueId, string phone, string cell, long externalNumber, bool externalNumberSpecified) {
            this.CreateCustomerParamsRESTAsync(i4uEmail, i4uPassword, id, idSpecified, name, customerEmail, uniqueId, phone, cell, externalNumber, externalNumberSpecified, null);
        }
        
        /// <remarks/>
        public void CreateCustomerParamsRESTAsync(string i4uEmail, string i4uPassword, int id, bool idSpecified, string name, string customerEmail, string uniqueId, string phone, string cell, long externalNumber, bool externalNumberSpecified, object userState) {
            if ((this.CreateCustomerParamsRESTOperationCompleted == null)) {
                this.CreateCustomerParamsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerParamsRESTOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerParamsREST", new object[] {
                        i4uEmail,
                        i4uPassword,
                        id,
                        idSpecified,
                        name,
                        customerEmail,
                        uniqueId,
                        phone,
                        cell,
                        externalNumber,
                        externalNumberSpecified}, this.CreateCustomerParamsRESTOperationCompleted, userState);
        }
        
        private void OnCreateCustomerParamsRESTOperationCompleted(object arg) {
            if ((this.CreateCustomerParamsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerParamsRESTCompleted(this, new CreateCustomerParamsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/UpdateCustomer", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer UpdateCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cu, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("UpdateCustomer", new object[] {
                        cu,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(Customer cu, string token) {
            this.UpdateCustomerAsync(cu, token, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(Customer cu, string token, object userState) {
            if ((this.UpdateCustomerOperationCompleted == null)) {
                this.UpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomer", new object[] {
                        cu,
                        token}, this.UpdateCustomerOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerOperationCompleted(object arg) {
            if ((this.UpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerCompleted(this, new UpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetFullCustomer", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetFullCustomer(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, int orgID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orgIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetFullCustomer", new object[] {
                        id,
                        idSpecified,
                        orgID,
                        orgIDSpecified,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullCustomerAsync(int id, bool idSpecified, int orgID, bool orgIDSpecified, string token) {
            this.GetFullCustomerAsync(id, idSpecified, orgID, orgIDSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetFullCustomerAsync(int id, bool idSpecified, int orgID, bool orgIDSpecified, string token, object userState) {
            if ((this.GetFullCustomerOperationCompleted == null)) {
                this.GetFullCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullCustomerOperationCompleted);
            }
            this.InvokeAsync("GetFullCustomer", new object[] {
                        id,
                        idSpecified,
                        orgID,
                        orgIDSpecified,
                        token}, this.GetFullCustomerOperationCompleted, userState);
        }
        
        private void OnGetFullCustomerOperationCompleted(object arg) {
            if ((this.GetFullCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullCustomerCompleted(this, new GetFullCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomersByOrgId", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCustomerJHiVxprS GetCustomersByOrgId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomersByOrgId", new object[] {
                        token});
            return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByOrgIdAsync(string token) {
            this.GetCustomersByOrgIdAsync(token, null);
        }
        
        /// <remarks/>
        public void GetCustomersByOrgIdAsync(string token, object userState) {
            if ((this.GetCustomersByOrgIdOperationCompleted == null)) {
                this.GetCustomersByOrgIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByOrgIdOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByOrgId", new object[] {
                        token}, this.GetCustomersByOrgIdOperationCompleted, userState);
        }
        
        private void OnGetCustomersByOrgIdOperationCompleted(object arg) {
            if ((this.GetCustomersByOrgIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByOrgIdCompleted(this, new GetCustomersByOrgIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomersByOrgIdREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCustomerJHiVxprS GetCustomersByOrgIdREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("GetCustomersByOrgIdREST", new object[] {
                        email,
                        password});
            return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByOrgIdRESTAsync(string email, string password) {
            this.GetCustomersByOrgIdRESTAsync(email, password, null);
        }
        
        /// <remarks/>
        public void GetCustomersByOrgIdRESTAsync(string email, string password, object userState) {
            if ((this.GetCustomersByOrgIdRESTOperationCompleted == null)) {
                this.GetCustomersByOrgIdRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByOrgIdRESTOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByOrgIdREST", new object[] {
                        email,
                        password}, this.GetCustomersByOrgIdRESTOperationCompleted, userState);
        }
        
        private void OnGetCustomersByOrgIdRESTOperationCompleted(object arg) {
            if ((this.GetCustomersByOrgIdRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByOrgIdRESTCompleted(this, new GetCustomersByOrgIdRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomers", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCustomerJHiVxprS GetCustomers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cust, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomers", new object[] {
                        cust,
                        token});
            return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersAsync(Customer cust, string token) {
            this.GetCustomersAsync(cust, token, null);
        }
        
        /// <remarks/>
        public void GetCustomersAsync(Customer cust, string token, object userState) {
            if ((this.GetCustomersOperationCompleted == null)) {
                this.GetCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersOperationCompleted);
            }
            this.InvokeAsync("GetCustomers", new object[] {
                        cust,
                        token}, this.GetCustomersOperationCompleted, userState);
        }
        
        private void OnGetCustomersOperationCompleted(object arg) {
            if ((this.GetCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersCompleted(this, new GetCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomersREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCustomerJHiVxprS GetCustomersREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cust, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("GetCustomersREST", new object[] {
                        cust,
                        email,
                        password});
            return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersRESTAsync(Customer cust, string email, string password) {
            this.GetCustomersRESTAsync(cust, email, password, null);
        }
        
        /// <remarks/>
        public void GetCustomersRESTAsync(Customer cust, string email, string password, object userState) {
            if ((this.GetCustomersRESTOperationCompleted == null)) {
                this.GetCustomersRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersRESTOperationCompleted);
            }
            this.InvokeAsync("GetCustomersREST", new object[] {
                        cust,
                        email,
                        password}, this.GetCustomersRESTOperationCompleted, userState);
        }
        
        private void OnGetCustomersRESTOperationCompleted(object arg) {
            if ((this.GetCustomersRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersRESTCompleted(this, new GetCustomersRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByName", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByName", new object[] {
                        name,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByNameAsync(string name, string token) {
            this.GetCustomerByNameAsync(name, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByNameAsync(string name, string token, object userState) {
            if ((this.GetCustomerByNameOperationCompleted == null)) {
                this.GetCustomerByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByNameOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByName", new object[] {
                        name,
                        token}, this.GetCustomerByNameOperationCompleted, userState);
        }
        
        private void OnGetCustomerByNameOperationCompleted(object arg) {
            if ((this.GetCustomerByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByNameCompleted(this, new GetCustomerByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByClientCode", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByClientCode(int clientCode, [System.Xml.Serialization.XmlIgnoreAttribute()] bool clientCodeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByClientCode", new object[] {
                        clientCode,
                        clientCodeSpecified,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByClientCodeAsync(int clientCode, bool clientCodeSpecified, string token) {
            this.GetCustomerByClientCodeAsync(clientCode, clientCodeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByClientCodeAsync(int clientCode, bool clientCodeSpecified, string token, object userState) {
            if ((this.GetCustomerByClientCodeOperationCompleted == null)) {
                this.GetCustomerByClientCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByClientCodeOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByClientCode", new object[] {
                        clientCode,
                        clientCodeSpecified,
                        token}, this.GetCustomerByClientCodeOperationCompleted, userState);
        }
        
        private void OnGetCustomerByClientCodeOperationCompleted(object arg) {
            if ((this.GetCustomerByClientCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByClientCodeCompleted(this, new GetCustomerByClientCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByGuid", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByGuid([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByGuid", new object[] {
                        guid,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByGuidAsync(string guid, string token) {
            this.GetCustomerByGuidAsync(guid, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByGuidAsync(string guid, string token, object userState) {
            if ((this.GetCustomerByGuidOperationCompleted == null)) {
                this.GetCustomerByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByGuidOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByGuid", new object[] {
                        guid,
                        token}, this.GetCustomerByGuidOperationCompleted, userState);
        }
        
        private void OnGetCustomerByGuidOperationCompleted(object arg) {
            if ((this.GetCustomerByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByGuidCompleted(this, new GetCustomerByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByGuidInnerSearch", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByGuidInnerSearch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByGuidInnerSearch", new object[] {
                        guid,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByGuidInnerSearchAsync(string guid, string token) {
            this.GetCustomerByGuidInnerSearchAsync(guid, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByGuidInnerSearchAsync(string guid, string token, object userState) {
            if ((this.GetCustomerByGuidInnerSearchOperationCompleted == null)) {
                this.GetCustomerByGuidInnerSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByGuidInnerSearchOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByGuidInnerSearch", new object[] {
                        guid,
                        token}, this.GetCustomerByGuidInnerSearchOperationCompleted, userState);
        }
        
        private void OnGetCustomerByGuidInnerSearchOperationCompleted(object arg) {
            if ((this.GetCustomerByGuidInnerSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByGuidInnerSearchCompleted(this, new GetCustomerByGuidInnerSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetByClientCode", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetByClientCode(int clientCode, [System.Xml.Serialization.XmlIgnoreAttribute()] bool clientCodeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetByClientCode", new object[] {
                        clientCode,
                        clientCodeSpecified,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetByClientCodeAsync(int clientCode, bool clientCodeSpecified, string token) {
            this.GetByClientCodeAsync(clientCode, clientCodeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetByClientCodeAsync(int clientCode, bool clientCodeSpecified, string token, object userState) {
            if ((this.GetByClientCodeOperationCompleted == null)) {
                this.GetByClientCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByClientCodeOperationCompleted);
            }
            this.InvokeAsync("GetByClientCode", new object[] {
                        clientCode,
                        clientCodeSpecified,
                        token}, this.GetByClientCodeOperationCompleted, userState);
        }
        
        private void OnGetByClientCodeOperationCompleted(object arg) {
            if ((this.GetByClientCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByClientCodeCompleted(this, new GetByClientCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByExternalNumber", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByExternalNumber(long number, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numberSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByExternalNumber", new object[] {
                        number,
                        numberSpecified,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByExternalNumberAsync(long number, bool numberSpecified, string token) {
            this.GetCustomerByExternalNumberAsync(number, numberSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByExternalNumberAsync(long number, bool numberSpecified, string token, object userState) {
            if ((this.GetCustomerByExternalNumberOperationCompleted == null)) {
                this.GetCustomerByExternalNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByExternalNumberOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByExternalNumber", new object[] {
                        number,
                        numberSpecified,
                        token}, this.GetCustomerByExternalNumberOperationCompleted, userState);
        }
        
        private void OnGetCustomerByExternalNumberOperationCompleted(object arg) {
            if ((this.GetCustomerByExternalNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByExternalNumberCompleted(this, new GetCustomerByExternalNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetAssociatedEmailsByClientOnly", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
        public AssociatedEmail[] GetAssociatedEmailsByClientOnly([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> clientid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool clientidSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetAssociatedEmailsByClientOnly", new object[] {
                        clientid,
                        clientidSpecified,
                        token});
            return ((AssociatedEmail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssociatedEmailsByClientOnlyAsync(System.Nullable<int> clientid, bool clientidSpecified, string token) {
            this.GetAssociatedEmailsByClientOnlyAsync(clientid, clientidSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetAssociatedEmailsByClientOnlyAsync(System.Nullable<int> clientid, bool clientidSpecified, string token, object userState) {
            if ((this.GetAssociatedEmailsByClientOnlyOperationCompleted == null)) {
                this.GetAssociatedEmailsByClientOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssociatedEmailsByClientOnlyOperationCompleted);
            }
            this.InvokeAsync("GetAssociatedEmailsByClientOnly", new object[] {
                        clientid,
                        clientidSpecified,
                        token}, this.GetAssociatedEmailsByClientOnlyOperationCompleted, userState);
        }
        
        private void OnGetAssociatedEmailsByClientOnlyOperationCompleted(object arg) {
            if ((this.GetAssociatedEmailsByClientOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssociatedEmailsByClientOnlyCompleted(this, new GetAssociatedEmailsByClientOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCatalogItemByCode", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CatalogItem GetCatalogItemByCode([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCatalogItemByCode", new object[] {
                        code,
                        token});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetCatalogItemByCodeAsync(string code, string token) {
            this.GetCatalogItemByCodeAsync(code, token, null);
        }
        
        /// <remarks/>
        public void GetCatalogItemByCodeAsync(string code, string token, object userState) {
            if ((this.GetCatalogItemByCodeOperationCompleted == null)) {
                this.GetCatalogItemByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatalogItemByCodeOperationCompleted);
            }
            this.InvokeAsync("GetCatalogItemByCode", new object[] {
                        code,
                        token}, this.GetCatalogItemByCodeOperationCompleted, userState);
        }
        
        private void OnGetCatalogItemByCodeOperationCompleted(object arg) {
            if ((this.GetCatalogItemByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatalogItemByCodeCompleted(this, new GetCatalogItemByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCatalogItems", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCatalogItemJHiVxprS GetCatalogItems(bool GetAll, [System.Xml.Serialization.XmlIgnoreAttribute()] bool GetAllSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCatalogItems", new object[] {
                        GetAll,
                        GetAllSpecified,
                        token});
            return ((CommonCollectionOfArrayOfCatalogItemJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCatalogItemsAsync(bool GetAll, bool GetAllSpecified, string token) {
            this.GetCatalogItemsAsync(GetAll, GetAllSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetCatalogItemsAsync(bool GetAll, bool GetAllSpecified, string token, object userState) {
            if ((this.GetCatalogItemsOperationCompleted == null)) {
                this.GetCatalogItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatalogItemsOperationCompleted);
            }
            this.InvokeAsync("GetCatalogItems", new object[] {
                        GetAll,
                        GetAllSpecified,
                        token}, this.GetCatalogItemsOperationCompleted, userState);
        }
        
        private void OnGetCatalogItemsOperationCompleted(object arg) {
            if ((this.GetCatalogItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatalogItemsCompleted(this, new GetCatalogItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetUserClearingAccount", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClearingAccount GetUserClearingAccount(int orgId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orgIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetUserClearingAccount", new object[] {
                        orgId,
                        orgIdSpecified,
                        token});
            return ((ClearingAccount)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClearingAccountAsync(int orgId, bool orgIdSpecified, string token) {
            this.GetUserClearingAccountAsync(orgId, orgIdSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetUserClearingAccountAsync(int orgId, bool orgIdSpecified, string token, object userState) {
            if ((this.GetUserClearingAccountOperationCompleted == null)) {
                this.GetUserClearingAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClearingAccountOperationCompleted);
            }
            this.InvokeAsync("GetUserClearingAccount", new object[] {
                        orgId,
                        orgIdSpecified,
                        token}, this.GetUserClearingAccountOperationCompleted, userState);
        }
        
        private void OnGetUserClearingAccountOperationCompleted(object arg) {
            if ((this.GetUserClearingAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClearingAccountCompleted(this, new GetUserClearingAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/SendDocumentByMail", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonObject SendDocumentByMail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Document doc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("SendDocumentByMail", new object[] {
                        doc,
                        token});
            return ((CommonObject)(results[0]));
        }
        
        /// <remarks/>
        public void SendDocumentByMailAsync(Document doc, string token) {
            this.SendDocumentByMailAsync(doc, token, null);
        }
        
        /// <remarks/>
        public void SendDocumentByMailAsync(Document doc, string token, object userState) {
            if ((this.SendDocumentByMailOperationCompleted == null)) {
                this.SendDocumentByMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDocumentByMailOperationCompleted);
            }
            this.InvokeAsync("SendDocumentByMail", new object[] {
                        doc,
                        token}, this.SendDocumentByMailOperationCompleted, userState);
        }
        
        private void OnSendDocumentByMailOperationCompleted(object arg) {
            if ((this.SendDocumentByMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDocumentByMailCompleted(this, new SendDocumentByMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/SendStandingOrderSummary", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendStandingOrderSummary([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")] ClientsStandingOrderLog[] csoLogs, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string headline, out bool SendStandingOrderSummaryResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SendStandingOrderSummaryResultSpecified) {
            object[] results = this.Invoke("SendStandingOrderSummary", new object[] {
                        csoLogs,
                        email,
                        headline});
            SendStandingOrderSummaryResult = ((bool)(results[0]));
            SendStandingOrderSummaryResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void SendStandingOrderSummaryAsync(ClientsStandingOrderLog[] csoLogs, string email, string headline) {
            this.SendStandingOrderSummaryAsync(csoLogs, email, headline, null);
        }
        
        /// <remarks/>
        public void SendStandingOrderSummaryAsync(ClientsStandingOrderLog[] csoLogs, string email, string headline, object userState) {
            if ((this.SendStandingOrderSummaryOperationCompleted == null)) {
                this.SendStandingOrderSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStandingOrderSummaryOperationCompleted);
            }
            this.InvokeAsync("SendStandingOrderSummary", new object[] {
                        csoLogs,
                        email,
                        headline}, this.SendStandingOrderSummaryOperationCompleted, userState);
        }
        
        private void OnSendStandingOrderSummaryOperationCompleted(object arg) {
            if ((this.SendStandingOrderSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStandingOrderSummaryCompleted(this, new SendStandingOrderSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessCard", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DocumentCsv ProcessCard([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentCsv payment, bool creatInvoiceReceipt, [System.Xml.Serialization.XmlIgnoreAttribute()] bool creatInvoiceReceiptSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("ProcessCard", new object[] {
                        payment,
                        creatInvoiceReceipt,
                        creatInvoiceReceiptSpecified,
                        token});
            return ((DocumentCsv)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessCardAsync(DocumentCsv payment, bool creatInvoiceReceipt, bool creatInvoiceReceiptSpecified, string token) {
            this.ProcessCardAsync(payment, creatInvoiceReceipt, creatInvoiceReceiptSpecified, token, null);
        }
        
        /// <remarks/>
        public void ProcessCardAsync(DocumentCsv payment, bool creatInvoiceReceipt, bool creatInvoiceReceiptSpecified, string token, object userState) {
            if ((this.ProcessCardOperationCompleted == null)) {
                this.ProcessCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessCardOperationCompleted);
            }
            this.InvokeAsync("ProcessCard", new object[] {
                        payment,
                        creatInvoiceReceipt,
                        creatInvoiceReceiptSpecified,
                        token}, this.ProcessCardOperationCompleted, userState);
        }
        
        private void OnProcessCardOperationCompleted(object arg) {
            if ((this.ProcessCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessCardCompleted(this, new ProcessCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessClearingDocOnly", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DocumentCsv ProcessClearingDocOnly([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentCsv payment, bool isNotifyOnly, [System.Xml.Serialization.XmlIgnoreAttribute()] bool isNotifyOnlySpecified, bool isCreateDoc, [System.Xml.Serialization.XmlIgnoreAttribute()] bool isCreateDocSpecified) {
            object[] results = this.Invoke("ProcessClearingDocOnly", new object[] {
                        payment,
                        isNotifyOnly,
                        isNotifyOnlySpecified,
                        isCreateDoc,
                        isCreateDocSpecified});
            return ((DocumentCsv)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessClearingDocOnlyAsync(DocumentCsv payment, bool isNotifyOnly, bool isNotifyOnlySpecified, bool isCreateDoc, bool isCreateDocSpecified) {
            this.ProcessClearingDocOnlyAsync(payment, isNotifyOnly, isNotifyOnlySpecified, isCreateDoc, isCreateDocSpecified, null);
        }
        
        /// <remarks/>
        public void ProcessClearingDocOnlyAsync(DocumentCsv payment, bool isNotifyOnly, bool isNotifyOnlySpecified, bool isCreateDoc, bool isCreateDocSpecified, object userState) {
            if ((this.ProcessClearingDocOnlyOperationCompleted == null)) {
                this.ProcessClearingDocOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessClearingDocOnlyOperationCompleted);
            }
            this.InvokeAsync("ProcessClearingDocOnly", new object[] {
                        payment,
                        isNotifyOnly,
                        isNotifyOnlySpecified,
                        isCreateDoc,
                        isCreateDocSpecified}, this.ProcessClearingDocOnlyOperationCompleted, userState);
        }
        
        private void OnProcessClearingDocOnlyOperationCompleted(object arg) {
            if ((this.ProcessClearingDocOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessClearingDocOnlyCompleted(this, new ProcessClearingDocOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/InsertToLogFullParamsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertToLogFullParamsREST(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientName, 
                    double amount, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                    int paymentNumber, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentNumberSpecified, 
                    int currency, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool currencySpecified, 
                    int creditType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool creditTypeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string creditNumber, 
                    int clearingCompany, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool clearingCompanySpecified, 
                    bool isSuccess, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool isSuccessSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string errorMessage, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clearingConfirmationNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token, 
                    out int InsertToLogFullParamsRESTResult, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] out bool InsertToLogFullParamsRESTResultSpecified) {
            object[] results = this.Invoke("InsertToLogFullParamsREST", new object[] {
                        clientName,
                        amount,
                        amountSpecified,
                        paymentNumber,
                        paymentNumberSpecified,
                        currency,
                        currencySpecified,
                        creditType,
                        creditTypeSpecified,
                        creditNumber,
                        clearingCompany,
                        clearingCompanySpecified,
                        isSuccess,
                        isSuccessSpecified,
                        errorMessage,
                        clearingConfirmationNumber,
                        token});
            InsertToLogFullParamsRESTResult = ((int)(results[0]));
            InsertToLogFullParamsRESTResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void InsertToLogFullParamsRESTAsync(
                    string clientName, 
                    double amount, 
                    bool amountSpecified, 
                    int paymentNumber, 
                    bool paymentNumberSpecified, 
                    int currency, 
                    bool currencySpecified, 
                    int creditType, 
                    bool creditTypeSpecified, 
                    string creditNumber, 
                    int clearingCompany, 
                    bool clearingCompanySpecified, 
                    bool isSuccess, 
                    bool isSuccessSpecified, 
                    string errorMessage, 
                    string clearingConfirmationNumber, 
                    string token) {
            this.InsertToLogFullParamsRESTAsync(clientName, amount, amountSpecified, paymentNumber, paymentNumberSpecified, currency, currencySpecified, creditType, creditTypeSpecified, creditNumber, clearingCompany, clearingCompanySpecified, isSuccess, isSuccessSpecified, errorMessage, clearingConfirmationNumber, token, null);
        }
        
        /// <remarks/>
        public void InsertToLogFullParamsRESTAsync(
                    string clientName, 
                    double amount, 
                    bool amountSpecified, 
                    int paymentNumber, 
                    bool paymentNumberSpecified, 
                    int currency, 
                    bool currencySpecified, 
                    int creditType, 
                    bool creditTypeSpecified, 
                    string creditNumber, 
                    int clearingCompany, 
                    bool clearingCompanySpecified, 
                    bool isSuccess, 
                    bool isSuccessSpecified, 
                    string errorMessage, 
                    string clearingConfirmationNumber, 
                    string token, 
                    object userState) {
            if ((this.InsertToLogFullParamsRESTOperationCompleted == null)) {
                this.InsertToLogFullParamsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertToLogFullParamsRESTOperationCompleted);
            }
            this.InvokeAsync("InsertToLogFullParamsREST", new object[] {
                        clientName,
                        amount,
                        amountSpecified,
                        paymentNumber,
                        paymentNumberSpecified,
                        currency,
                        currencySpecified,
                        creditType,
                        creditTypeSpecified,
                        creditNumber,
                        clearingCompany,
                        clearingCompanySpecified,
                        isSuccess,
                        isSuccessSpecified,
                        errorMessage,
                        clearingConfirmationNumber,
                        token}, this.InsertToLogFullParamsRESTOperationCompleted, userState);
        }
        
        private void OnInsertToLogFullParamsRESTOperationCompleted(object arg) {
            if ((this.InsertToLogFullParamsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertToLogFullParamsRESTCompleted(this, new InsertToLogFullParamsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessApiRequest", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ApiClearingRequest ProcessApiRequest([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ApiClearingRequest request) {
            object[] results = this.Invoke("ProcessApiRequest", new object[] {
                        request});
            return ((ApiClearingRequest)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessApiRequestAsync(ApiClearingRequest request) {
            this.ProcessApiRequestAsync(request, null);
        }
        
        /// <remarks/>
        public void ProcessApiRequestAsync(ApiClearingRequest request, object userState) {
            if ((this.ProcessApiRequestOperationCompleted == null)) {
                this.ProcessApiRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessApiRequestOperationCompleted);
            }
            this.InvokeAsync("ProcessApiRequest", new object[] {
                        request}, this.ProcessApiRequestOperationCompleted, userState);
        }
        
        private void OnProcessApiRequestOperationCompleted(object arg) {
            if ((this.ProcessApiRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessApiRequestCompleted(this, new ProcessApiRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessApiRequestFullContentsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ApiClearingRequest ProcessApiRequestFullContentsREST(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string invoice4uUserEmail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string invoice4uUserPassword, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientFullName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientPhone, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientEmail, 
                    double sum, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool sumSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currency, 
                    int type, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, 
                    int paymentsNum, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentsNumSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string returnUrl, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string callBackUrl, 
                    bool isQaMode, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool isQaModeSpecified) {
            object[] results = this.Invoke("ProcessApiRequestFullContentsREST", new object[] {
                        invoice4uUserEmail,
                        invoice4uUserPassword,
                        clientFullName,
                        clientPhone,
                        clientEmail,
                        sum,
                        sumSpecified,
                        description,
                        currency,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        returnUrl,
                        callBackUrl,
                        isQaMode,
                        isQaModeSpecified});
            return ((ApiClearingRequest)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessApiRequestFullContentsRESTAsync(
                    string invoice4uUserEmail, 
                    string invoice4uUserPassword, 
                    string clientFullName, 
                    string clientPhone, 
                    string clientEmail, 
                    double sum, 
                    bool sumSpecified, 
                    string description, 
                    string currency, 
                    int type, 
                    bool typeSpecified, 
                    int paymentsNum, 
                    bool paymentsNumSpecified, 
                    string returnUrl, 
                    string callBackUrl, 
                    bool isQaMode, 
                    bool isQaModeSpecified) {
            this.ProcessApiRequestFullContentsRESTAsync(invoice4uUserEmail, invoice4uUserPassword, clientFullName, clientPhone, clientEmail, sum, sumSpecified, description, currency, type, typeSpecified, paymentsNum, paymentsNumSpecified, returnUrl, callBackUrl, isQaMode, isQaModeSpecified, null);
        }
        
        /// <remarks/>
        public void ProcessApiRequestFullContentsRESTAsync(
                    string invoice4uUserEmail, 
                    string invoice4uUserPassword, 
                    string clientFullName, 
                    string clientPhone, 
                    string clientEmail, 
                    double sum, 
                    bool sumSpecified, 
                    string description, 
                    string currency, 
                    int type, 
                    bool typeSpecified, 
                    int paymentsNum, 
                    bool paymentsNumSpecified, 
                    string returnUrl, 
                    string callBackUrl, 
                    bool isQaMode, 
                    bool isQaModeSpecified, 
                    object userState) {
            if ((this.ProcessApiRequestFullContentsRESTOperationCompleted == null)) {
                this.ProcessApiRequestFullContentsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessApiRequestFullContentsRESTOperationCompleted);
            }
            this.InvokeAsync("ProcessApiRequestFullContentsREST", new object[] {
                        invoice4uUserEmail,
                        invoice4uUserPassword,
                        clientFullName,
                        clientPhone,
                        clientEmail,
                        sum,
                        sumSpecified,
                        description,
                        currency,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        returnUrl,
                        callBackUrl,
                        isQaMode,
                        isQaModeSpecified}, this.ProcessApiRequestFullContentsRESTOperationCompleted, userState);
        }
        
        private void OnProcessApiRequestFullContentsRESTOperationCompleted(object arg) {
            if ((this.ProcessApiRequestFullContentsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessApiRequestFullContentsRESTCompleted(this, new ProcessApiRequestFullContentsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProccessApiRequestClearingLogInsertREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClearingLog ProccessApiRequestClearingLogInsertREST(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string invoice4uUserEmail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string invoice4uUserPassword, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientName, 
                    double amount, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                    int paymentNumber, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentNumberSpecified, 
                    int currency, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool currencySpecified, 
                    int creditType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool creditTypeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string creditNumber, 
                    bool isSuccess, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool isSuccessSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string errorMessage, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clearingConfirmationNumber) {
            object[] results = this.Invoke("ProccessApiRequestClearingLogInsertREST", new object[] {
                        invoice4uUserEmail,
                        invoice4uUserPassword,
                        clientName,
                        amount,
                        amountSpecified,
                        paymentNumber,
                        paymentNumberSpecified,
                        currency,
                        currencySpecified,
                        creditType,
                        creditTypeSpecified,
                        creditNumber,
                        isSuccess,
                        isSuccessSpecified,
                        errorMessage,
                        clearingConfirmationNumber});
            return ((ClearingLog)(results[0]));
        }
        
        /// <remarks/>
        public void ProccessApiRequestClearingLogInsertRESTAsync(
                    string invoice4uUserEmail, 
                    string invoice4uUserPassword, 
                    string clientName, 
                    double amount, 
                    bool amountSpecified, 
                    int paymentNumber, 
                    bool paymentNumberSpecified, 
                    int currency, 
                    bool currencySpecified, 
                    int creditType, 
                    bool creditTypeSpecified, 
                    string creditNumber, 
                    bool isSuccess, 
                    bool isSuccessSpecified, 
                    string errorMessage, 
                    string clearingConfirmationNumber) {
            this.ProccessApiRequestClearingLogInsertRESTAsync(invoice4uUserEmail, invoice4uUserPassword, clientName, amount, amountSpecified, paymentNumber, paymentNumberSpecified, currency, currencySpecified, creditType, creditTypeSpecified, creditNumber, isSuccess, isSuccessSpecified, errorMessage, clearingConfirmationNumber, null);
        }
        
        /// <remarks/>
        public void ProccessApiRequestClearingLogInsertRESTAsync(
                    string invoice4uUserEmail, 
                    string invoice4uUserPassword, 
                    string clientName, 
                    double amount, 
                    bool amountSpecified, 
                    int paymentNumber, 
                    bool paymentNumberSpecified, 
                    int currency, 
                    bool currencySpecified, 
                    int creditType, 
                    bool creditTypeSpecified, 
                    string creditNumber, 
                    bool isSuccess, 
                    bool isSuccessSpecified, 
                    string errorMessage, 
                    string clearingConfirmationNumber, 
                    object userState) {
            if ((this.ProccessApiRequestClearingLogInsertRESTOperationCompleted == null)) {
                this.ProccessApiRequestClearingLogInsertRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProccessApiRequestClearingLogInsertRESTOperationCompleted);
            }
            this.InvokeAsync("ProccessApiRequestClearingLogInsertREST", new object[] {
                        invoice4uUserEmail,
                        invoice4uUserPassword,
                        clientName,
                        amount,
                        amountSpecified,
                        paymentNumber,
                        paymentNumberSpecified,
                        currency,
                        currencySpecified,
                        creditType,
                        creditTypeSpecified,
                        creditNumber,
                        isSuccess,
                        isSuccessSpecified,
                        errorMessage,
                        clearingConfirmationNumber}, this.ProccessApiRequestClearingLogInsertRESTOperationCompleted, userState);
        }
        
        private void OnProccessApiRequestClearingLogInsertRESTOperationCompleted(object arg) {
            if ((this.ProccessApiRequestClearingLogInsertRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProccessApiRequestClearingLogInsertRESTCompleted(this, new ProccessApiRequestClearingLogInsertRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/TokenAddForClient", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OrganizationTokenDetails TokenAddForClient([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OrganizationTokenDetails otd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("TokenAddForClient", new object[] {
                        otd,
                        token});
            return ((OrganizationTokenDetails)(results[0]));
        }
        
        /// <remarks/>
        public void TokenAddForClientAsync(OrganizationTokenDetails otd, string token) {
            this.TokenAddForClientAsync(otd, token, null);
        }
        
        /// <remarks/>
        public void TokenAddForClientAsync(OrganizationTokenDetails otd, string token, object userState) {
            if ((this.TokenAddForClientOperationCompleted == null)) {
                this.TokenAddForClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTokenAddForClientOperationCompleted);
            }
            this.InvokeAsync("TokenAddForClient", new object[] {
                        otd,
                        token}, this.TokenAddForClientOperationCompleted, userState);
        }
        
        private void OnTokenAddForClientOperationCompleted(object arg) {
            if ((this.TokenAddForClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TokenAddForClientCompleted(this, new TokenAddForClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/AddStandingOrder", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClientsStandingOrder AddStandingOrder([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ClientsStandingOrder cso, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("AddStandingOrder", new object[] {
                        cso,
                        token});
            return ((ClientsStandingOrder)(results[0]));
        }
        
        /// <remarks/>
        public void AddStandingOrderAsync(ClientsStandingOrder cso, string token) {
            this.AddStandingOrderAsync(cso, token, null);
        }
        
        /// <remarks/>
        public void AddStandingOrderAsync(ClientsStandingOrder cso, string token, object userState) {
            if ((this.AddStandingOrderOperationCompleted == null)) {
                this.AddStandingOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStandingOrderOperationCompleted);
            }
            this.InvokeAsync("AddStandingOrder", new object[] {
                        cso,
                        token}, this.AddStandingOrderOperationCompleted, userState);
        }
        
        private void OnAddStandingOrderOperationCompleted(object arg) {
            if ((this.AddStandingOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStandingOrderCompleted(this, new AddStandingOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetProducts", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfClearingProductsJHiVxprS GetProducts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetProducts", new object[] {
                        token});
            return ((CommonCollectionOfArrayOfClearingProductsJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsAsync(string token) {
            this.GetProductsAsync(token, null);
        }
        
        /// <remarks/>
        public void GetProductsAsync(string token, object userState) {
            if ((this.GetProductsOperationCompleted == null)) {
                this.GetProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsOperationCompleted);
            }
            this.InvokeAsync("GetProducts", new object[] {
                        token}, this.GetProductsOperationCompleted, userState);
        }
        
        private void OnGetProductsOperationCompleted(object arg) {
            if ((this.GetProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetProductById", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClearingProducts GetProductById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetProductById", new object[] {
                        id,
                        idSpecified,
                        token});
            return ((ClearingProducts)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByIdAsync(int id, bool idSpecified, string token) {
            this.GetProductByIdAsync(id, idSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetProductByIdAsync(int id, bool idSpecified, string token, object userState) {
            if ((this.GetProductByIdOperationCompleted == null)) {
                this.GetProductByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByIdOperationCompleted);
            }
            this.InvokeAsync("GetProductById", new object[] {
                        id,
                        idSpecified,
                        token}, this.GetProductByIdOperationCompleted, userState);
        }
        
        private void OnGetProductByIdOperationCompleted(object arg) {
            if ((this.GetProductByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByIdCompleted(this, new GetProductByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetClearingProductOrdersByToken", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS GetClearingProductOrdersByToken([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetClearingProductOrdersByToken", new object[] {
                        token});
            return ((CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetClearingProductOrdersByTokenAsync(string token) {
            this.GetClearingProductOrdersByTokenAsync(token, null);
        }
        
        /// <remarks/>
        public void GetClearingProductOrdersByTokenAsync(string token, object userState) {
            if ((this.GetClearingProductOrdersByTokenOperationCompleted == null)) {
                this.GetClearingProductOrdersByTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClearingProductOrdersByTokenOperationCompleted);
            }
            this.InvokeAsync("GetClearingProductOrdersByToken", new object[] {
                        token}, this.GetClearingProductOrdersByTokenOperationCompleted, userState);
        }
        
        private void OnGetClearingProductOrdersByTokenOperationCompleted(object arg) {
            if ((this.GetClearingProductOrdersByTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClearingProductOrdersByTokenCompleted(this, new GetClearingProductOrdersByTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetClearingProductOrdersByProductId", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS GetClearingProductOrdersByProductId(int productId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetClearingProductOrdersByProductId", new object[] {
                        productId,
                        productIdSpecified,
                        token});
            return ((CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetClearingProductOrdersByProductIdAsync(int productId, bool productIdSpecified, string token) {
            this.GetClearingProductOrdersByProductIdAsync(productId, productIdSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetClearingProductOrdersByProductIdAsync(int productId, bool productIdSpecified, string token, object userState) {
            if ((this.GetClearingProductOrdersByProductIdOperationCompleted == null)) {
                this.GetClearingProductOrdersByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClearingProductOrdersByProductIdOperationCompleted);
            }
            this.InvokeAsync("GetClearingProductOrdersByProductId", new object[] {
                        productId,
                        productIdSpecified,
                        token}, this.GetClearingProductOrdersByProductIdOperationCompleted, userState);
        }
        
        private void OnGetClearingProductOrdersByProductIdOperationCompleted(object arg) {
            if ((this.GetClearingProductOrdersByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClearingProductOrdersByProductIdCompleted(this, new GetClearingProductOrdersByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessRequestFullContents", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public MeshulamClearingApi ProcessRequestFullContents([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fullName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, double sum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool sumSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, int type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, int paymentsNum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentsNumSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string returnUrl) {
            object[] results = this.Invoke("ProcessRequestFullContents", new object[] {
                        fullName,
                        phone,
                        email,
                        sum,
                        sumSpecified,
                        description,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        userEmail,
                        userPassword,
                        returnUrl});
            return ((MeshulamClearingApi)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessRequestFullContentsAsync(string fullName, string phone, string email, double sum, bool sumSpecified, string description, int type, bool typeSpecified, int paymentsNum, bool paymentsNumSpecified, string userEmail, string userPassword, string returnUrl) {
            this.ProcessRequestFullContentsAsync(fullName, phone, email, sum, sumSpecified, description, type, typeSpecified, paymentsNum, paymentsNumSpecified, userEmail, userPassword, returnUrl, null);
        }
        
        /// <remarks/>
        public void ProcessRequestFullContentsAsync(string fullName, string phone, string email, double sum, bool sumSpecified, string description, int type, bool typeSpecified, int paymentsNum, bool paymentsNumSpecified, string userEmail, string userPassword, string returnUrl, object userState) {
            if ((this.ProcessRequestFullContentsOperationCompleted == null)) {
                this.ProcessRequestFullContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessRequestFullContentsOperationCompleted);
            }
            this.InvokeAsync("ProcessRequestFullContents", new object[] {
                        fullName,
                        phone,
                        email,
                        sum,
                        sumSpecified,
                        description,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        userEmail,
                        userPassword,
                        returnUrl}, this.ProcessRequestFullContentsOperationCompleted, userState);
        }
        
        private void OnProcessRequestFullContentsOperationCompleted(object arg) {
            if ((this.ProcessRequestFullContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessRequestFullContentsCompleted(this, new ProcessRequestFullContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessRequestFullContentsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public MeshulamClearingApi ProcessRequestFullContentsREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fullName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, double sum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool sumSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, int type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, int paymentsNum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentsNumSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string returnUrl) {
            object[] results = this.Invoke("ProcessRequestFullContentsREST", new object[] {
                        fullName,
                        phone,
                        email,
                        sum,
                        sumSpecified,
                        description,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        userEmail,
                        userPassword,
                        returnUrl});
            return ((MeshulamClearingApi)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessRequestFullContentsRESTAsync(string fullName, string phone, string email, double sum, bool sumSpecified, string description, int type, bool typeSpecified, int paymentsNum, bool paymentsNumSpecified, string userEmail, string userPassword, string returnUrl) {
            this.ProcessRequestFullContentsRESTAsync(fullName, phone, email, sum, sumSpecified, description, type, typeSpecified, paymentsNum, paymentsNumSpecified, userEmail, userPassword, returnUrl, null);
        }
        
        /// <remarks/>
        public void ProcessRequestFullContentsRESTAsync(string fullName, string phone, string email, double sum, bool sumSpecified, string description, int type, bool typeSpecified, int paymentsNum, bool paymentsNumSpecified, string userEmail, string userPassword, string returnUrl, object userState) {
            if ((this.ProcessRequestFullContentsRESTOperationCompleted == null)) {
                this.ProcessRequestFullContentsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessRequestFullContentsRESTOperationCompleted);
            }
            this.InvokeAsync("ProcessRequestFullContentsREST", new object[] {
                        fullName,
                        phone,
                        email,
                        sum,
                        sumSpecified,
                        description,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        userEmail,
                        userPassword,
                        returnUrl}, this.ProcessRequestFullContentsRESTOperationCompleted, userState);
        }
        
        private void OnProcessRequestFullContentsRESTOperationCompleted(object arg) {
            if ((this.ProcessRequestFullContentsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessRequestFullContentsRESTCompleted(this, new ProcessRequestFullContentsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/UserRegistration", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonObject UserRegistration([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] User user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string isracardToken) {
            object[] results = this.Invoke("UserRegistration", new object[] {
                        user,
                        token,
                        isracardToken});
            return ((CommonObject)(results[0]));
        }
        
        /// <remarks/>
        public void UserRegistrationAsync(User user, string token, string isracardToken) {
            this.UserRegistrationAsync(user, token, isracardToken, null);
        }
        
        /// <remarks/>
        public void UserRegistrationAsync(User user, string token, string isracardToken, object userState) {
            if ((this.UserRegistrationOperationCompleted == null)) {
                this.UserRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserRegistrationOperationCompleted);
            }
            this.InvokeAsync("UserRegistration", new object[] {
                        user,
                        token,
                        isracardToken}, this.UserRegistrationOperationCompleted, userState);
        }
        
        private void OnUserRegistrationOperationCompleted(object arg) {
            if ((this.UserRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserRegistrationCompleted(this, new UserRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_ApiService1", Namespace="Invoice")]
    public partial class BasicHttpBinding_ApiService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback VerifyLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback VerifyLoginRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsAuthenticatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBranchesOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateDocumentRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentByApiIdentifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentByApiIdentifierRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeDocumentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentByNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentByNumberRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCreditCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerParamsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByOrgIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersByOrgIdRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByClientCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByGuidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByGuidInnerSearchOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetByClientCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerByExternalNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssociatedEmailsByClientOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCatalogItemByCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCatalogItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserClearingAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDocumentByMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendStandingOrderSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessCardOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessClearingDocOnlyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertToLogFullParamsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessApiRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessApiRequestFullContentsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProccessApiRequestClearingLogInsertRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback TokenAddForClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddStandingOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProductByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClearingProductOrdersByTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClearingProductOrdersByProductIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessRequestFullContentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ProcessRequestFullContentsRESTOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserRegistrationOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpBinding_ApiService1() {
            this.Url = "https://api.invoice4u.co.il/Services/ApiService.svc/Soap";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event VerifyLoginCompletedEventHandler VerifyLoginCompleted;
        
        /// <remarks/>
        public event VerifyLoginRESTCompletedEventHandler VerifyLoginRESTCompleted;
        
        /// <remarks/>
        public event IsAuthenticatedCompletedEventHandler IsAuthenticatedCompleted;
        
        /// <remarks/>
        public event LogoutCompletedEventHandler LogoutCompleted;
        
        /// <remarks/>
        public event GetBranchesCompletedEventHandler GetBranchesCompleted;
        
        /// <remarks/>
        public event CreateDocumentCompletedEventHandler CreateDocumentCompleted;
        
        /// <remarks/>
        public event CreateDocumentRESTCompletedEventHandler CreateDocumentRESTCompleted;
        
        /// <remarks/>
        public event GetDocumentByApiIdentifierCompletedEventHandler GetDocumentByApiIdentifierCompleted;
        
        /// <remarks/>
        public event GetDocumentByApiIdentifierRESTCompletedEventHandler GetDocumentByApiIdentifierRESTCompleted;
        
        /// <remarks/>
        public event GetDocumentsCompletedEventHandler GetDocumentsCompleted;
        
        /// <remarks/>
        public event GetDocumentsRESTCompletedEventHandler GetDocumentsRESTCompleted;
        
        /// <remarks/>
        public event InitDocumentCompletedEventHandler InitDocumentCompleted;
        
        /// <remarks/>
        public event ChangeDocumentStatusCompletedEventHandler ChangeDocumentStatusCompleted;
        
        /// <remarks/>
        public event GetDocumentCompletedEventHandler GetDocumentCompleted;
        
        /// <remarks/>
        public event GetDocumentByNumberCompletedEventHandler GetDocumentByNumberCompleted;
        
        /// <remarks/>
        public event GetCustomerReportCompletedEventHandler GetCustomerReportCompleted;
        
        /// <remarks/>
        public event GetDocumentByNumberRESTCompletedEventHandler GetDocumentByNumberRESTCompleted;
        
        /// <remarks/>
        public event CreateCreditCardCompletedEventHandler CreateCreditCardCompleted;
        
        /// <remarks/>
        public event GetListCompletedEventHandler GetListCompleted;
        
        /// <remarks/>
        public event CreateCustomerCompletedEventHandler CreateCustomerCompleted;
        
        /// <remarks/>
        public event CreateCustomerRESTCompletedEventHandler CreateCustomerRESTCompleted;
        
        /// <remarks/>
        public event CreateCustomerParamsRESTCompletedEventHandler CreateCustomerParamsRESTCompleted;
        
        /// <remarks/>
        public event UpdateCustomerCompletedEventHandler UpdateCustomerCompleted;
        
        /// <remarks/>
        public event GetFullCustomerCompletedEventHandler GetFullCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomersByOrgIdCompletedEventHandler GetCustomersByOrgIdCompleted;
        
        /// <remarks/>
        public event GetCustomersByOrgIdRESTCompletedEventHandler GetCustomersByOrgIdRESTCompleted;
        
        /// <remarks/>
        public event GetCustomersCompletedEventHandler GetCustomersCompleted;
        
        /// <remarks/>
        public event GetCustomersRESTCompletedEventHandler GetCustomersRESTCompleted;
        
        /// <remarks/>
        public event GetCustomerByNameCompletedEventHandler GetCustomerByNameCompleted;
        
        /// <remarks/>
        public event GetCustomerByClientCodeCompletedEventHandler GetCustomerByClientCodeCompleted;
        
        /// <remarks/>
        public event GetCustomerByGuidCompletedEventHandler GetCustomerByGuidCompleted;
        
        /// <remarks/>
        public event GetCustomerByGuidInnerSearchCompletedEventHandler GetCustomerByGuidInnerSearchCompleted;
        
        /// <remarks/>
        public event GetByClientCodeCompletedEventHandler GetByClientCodeCompleted;
        
        /// <remarks/>
        public event GetCustomerByExternalNumberCompletedEventHandler GetCustomerByExternalNumberCompleted;
        
        /// <remarks/>
        public event GetAssociatedEmailsByClientOnlyCompletedEventHandler GetAssociatedEmailsByClientOnlyCompleted;
        
        /// <remarks/>
        public event GetCatalogItemByCodeCompletedEventHandler GetCatalogItemByCodeCompleted;
        
        /// <remarks/>
        public event GetCatalogItemsCompletedEventHandler GetCatalogItemsCompleted;
        
        /// <remarks/>
        public event GetUserClearingAccountCompletedEventHandler GetUserClearingAccountCompleted;
        
        /// <remarks/>
        public event SendDocumentByMailCompletedEventHandler SendDocumentByMailCompleted;
        
        /// <remarks/>
        public event SendStandingOrderSummaryCompletedEventHandler SendStandingOrderSummaryCompleted;
        
        /// <remarks/>
        public event ProcessCardCompletedEventHandler ProcessCardCompleted;
        
        /// <remarks/>
        public event ProcessClearingDocOnlyCompletedEventHandler ProcessClearingDocOnlyCompleted;
        
        /// <remarks/>
        public event InsertToLogFullParamsRESTCompletedEventHandler InsertToLogFullParamsRESTCompleted;
        
        /// <remarks/>
        public event ProcessApiRequestCompletedEventHandler ProcessApiRequestCompleted;
        
        /// <remarks/>
        public event ProcessApiRequestFullContentsRESTCompletedEventHandler ProcessApiRequestFullContentsRESTCompleted;
        
        /// <remarks/>
        public event ProccessApiRequestClearingLogInsertRESTCompletedEventHandler ProccessApiRequestClearingLogInsertRESTCompleted;
        
        /// <remarks/>
        public event TokenAddForClientCompletedEventHandler TokenAddForClientCompleted;
        
        /// <remarks/>
        public event AddStandingOrderCompletedEventHandler AddStandingOrderCompleted;
        
        /// <remarks/>
        public event GetProductsCompletedEventHandler GetProductsCompleted;
        
        /// <remarks/>
        public event GetProductByIdCompletedEventHandler GetProductByIdCompleted;
        
        /// <remarks/>
        public event GetClearingProductOrdersByTokenCompletedEventHandler GetClearingProductOrdersByTokenCompleted;
        
        /// <remarks/>
        public event GetClearingProductOrdersByProductIdCompletedEventHandler GetClearingProductOrdersByProductIdCompleted;
        
        /// <remarks/>
        public event ProcessRequestFullContentsCompletedEventHandler ProcessRequestFullContentsCompleted;
        
        /// <remarks/>
        public event ProcessRequestFullContentsRESTCompletedEventHandler ProcessRequestFullContentsRESTCompleted;
        
        /// <remarks/>
        public event UserRegistrationCompletedEventHandler UserRegistrationCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/VerifyLogin", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VerifyLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("VerifyLogin", new object[] {
                        email,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyLoginAsync(string email, string password) {
            this.VerifyLoginAsync(email, password, null);
        }
        
        /// <remarks/>
        public void VerifyLoginAsync(string email, string password, object userState) {
            if ((this.VerifyLoginOperationCompleted == null)) {
                this.VerifyLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyLoginOperationCompleted);
            }
            this.InvokeAsync("VerifyLogin", new object[] {
                        email,
                        password}, this.VerifyLoginOperationCompleted, userState);
        }
        
        private void OnVerifyLoginOperationCompleted(object arg) {
            if ((this.VerifyLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyLoginCompleted(this, new VerifyLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/VerifyLoginREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string VerifyLoginREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("VerifyLoginREST", new object[] {
                        email,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void VerifyLoginRESTAsync(string email, string password) {
            this.VerifyLoginRESTAsync(email, password, null);
        }
        
        /// <remarks/>
        public void VerifyLoginRESTAsync(string email, string password, object userState) {
            if ((this.VerifyLoginRESTOperationCompleted == null)) {
                this.VerifyLoginRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnVerifyLoginRESTOperationCompleted);
            }
            this.InvokeAsync("VerifyLoginREST", new object[] {
                        email,
                        password}, this.VerifyLoginRESTOperationCompleted, userState);
        }
        
        private void OnVerifyLoginRESTOperationCompleted(object arg) {
            if ((this.VerifyLoginRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.VerifyLoginRESTCompleted(this, new VerifyLoginRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/IsAuthenticated", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public User IsAuthenticated([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("IsAuthenticated", new object[] {
                        token});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void IsAuthenticatedAsync(string token) {
            this.IsAuthenticatedAsync(token, null);
        }
        
        /// <remarks/>
        public void IsAuthenticatedAsync(string token, object userState) {
            if ((this.IsAuthenticatedOperationCompleted == null)) {
                this.IsAuthenticatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsAuthenticatedOperationCompleted);
            }
            this.InvokeAsync("IsAuthenticated", new object[] {
                        token}, this.IsAuthenticatedOperationCompleted, userState);
        }
        
        private void OnIsAuthenticatedOperationCompleted(object arg) {
            if ((this.IsAuthenticatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsAuthenticatedCompleted(this, new IsAuthenticatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/Logout", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Logout() {
            this.Invoke("Logout", new object[0]);
        }
        
        /// <remarks/>
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        /// <remarks/>
        public void LogoutAsync(object userState) {
            if ((this.LogoutOperationCompleted == null)) {
                this.LogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutOperationCompleted);
            }
            this.InvokeAsync("Logout", new object[0], this.LogoutOperationCompleted, userState);
        }
        
        private void OnLogoutOperationCompleted(object arg) {
            if ((this.LogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetBranches", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
        public Branch[] GetBranches([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetBranches", new object[] {
                        token});
            return ((Branch[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBranchesAsync(string token) {
            this.GetBranchesAsync(token, null);
        }
        
        /// <remarks/>
        public void GetBranchesAsync(string token, object userState) {
            if ((this.GetBranchesOperationCompleted == null)) {
                this.GetBranchesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchesOperationCompleted);
            }
            this.InvokeAsync("GetBranches", new object[] {
                        token}, this.GetBranchesOperationCompleted, userState);
        }
        
        private void OnGetBranchesOperationCompleted(object arg) {
            if ((this.GetBranchesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchesCompleted(this, new GetBranchesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateDocument", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document CreateDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Document doc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("CreateDocument", new object[] {
                        doc,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(Document doc, string token) {
            this.CreateDocumentAsync(doc, token, null);
        }
        
        /// <remarks/>
        public void CreateDocumentAsync(Document doc, string token, object userState) {
            if ((this.CreateDocumentOperationCompleted == null)) {
                this.CreateDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDocumentOperationCompleted);
            }
            this.InvokeAsync("CreateDocument", new object[] {
                        doc,
                        token}, this.CreateDocumentOperationCompleted, userState);
        }
        
        private void OnCreateDocumentOperationCompleted(object arg) {
            if ((this.CreateDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDocumentCompleted(this, new CreateDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateDocumentREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document CreateDocumentREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Document doc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("CreateDocumentREST", new object[] {
                        doc,
                        email,
                        password});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void CreateDocumentRESTAsync(Document doc, string email, string password) {
            this.CreateDocumentRESTAsync(doc, email, password, null);
        }
        
        /// <remarks/>
        public void CreateDocumentRESTAsync(Document doc, string email, string password, object userState) {
            if ((this.CreateDocumentRESTOperationCompleted == null)) {
                this.CreateDocumentRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateDocumentRESTOperationCompleted);
            }
            this.InvokeAsync("CreateDocumentREST", new object[] {
                        doc,
                        email,
                        password}, this.CreateDocumentRESTOperationCompleted, userState);
        }
        
        private void OnCreateDocumentRESTOperationCompleted(object arg) {
            if ((this.CreateDocumentRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateDocumentRESTCompleted(this, new CreateDocumentRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentByApiIdentifier", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocumentByApiIdentifier([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiIdentifier, int docType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocumentByApiIdentifier", new object[] {
                        apiIdentifier,
                        docType,
                        docTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentByApiIdentifierAsync(string apiIdentifier, int docType, bool docTypeSpecified, string token) {
            this.GetDocumentByApiIdentifierAsync(apiIdentifier, docType, docTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentByApiIdentifierAsync(string apiIdentifier, int docType, bool docTypeSpecified, string token, object userState) {
            if ((this.GetDocumentByApiIdentifierOperationCompleted == null)) {
                this.GetDocumentByApiIdentifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentByApiIdentifierOperationCompleted);
            }
            this.InvokeAsync("GetDocumentByApiIdentifier", new object[] {
                        apiIdentifier,
                        docType,
                        docTypeSpecified,
                        token}, this.GetDocumentByApiIdentifierOperationCompleted, userState);
        }
        
        private void OnGetDocumentByApiIdentifierOperationCompleted(object arg) {
            if ((this.GetDocumentByApiIdentifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentByApiIdentifierCompleted(this, new GetDocumentByApiIdentifierCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentByApiIdentifierREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocumentByApiIdentifierREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string apiIdentifier, int docType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocumentByApiIdentifierREST", new object[] {
                        apiIdentifier,
                        docType,
                        docTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentByApiIdentifierRESTAsync(string apiIdentifier, int docType, bool docTypeSpecified, string token) {
            this.GetDocumentByApiIdentifierRESTAsync(apiIdentifier, docType, docTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentByApiIdentifierRESTAsync(string apiIdentifier, int docType, bool docTypeSpecified, string token, object userState) {
            if ((this.GetDocumentByApiIdentifierRESTOperationCompleted == null)) {
                this.GetDocumentByApiIdentifierRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentByApiIdentifierRESTOperationCompleted);
            }
            this.InvokeAsync("GetDocumentByApiIdentifierREST", new object[] {
                        apiIdentifier,
                        docType,
                        docTypeSpecified,
                        token}, this.GetDocumentByApiIdentifierRESTOperationCompleted, userState);
        }
        
        private void OnGetDocumentByApiIdentifierRESTOperationCompleted(object arg) {
            if ((this.GetDocumentByApiIdentifierRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentByApiIdentifierRESTCompleted(this, new GetDocumentByApiIdentifierRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocuments", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfDocumentJHiVxprS GetDocuments([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentsRequest dr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocuments", new object[] {
                        dr,
                        token});
            return ((CommonCollectionOfArrayOfDocumentJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentsAsync(DocumentsRequest dr, string token) {
            this.GetDocumentsAsync(dr, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentsAsync(DocumentsRequest dr, string token, object userState) {
            if ((this.GetDocumentsOperationCompleted == null)) {
                this.GetDocumentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentsOperationCompleted);
            }
            this.InvokeAsync("GetDocuments", new object[] {
                        dr,
                        token}, this.GetDocumentsOperationCompleted, userState);
        }
        
        private void OnGetDocumentsOperationCompleted(object arg) {
            if ((this.GetDocumentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentsCompleted(this, new GetDocumentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfDocumentJHiVxprS GetDocumentsREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentsRequest dr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("GetDocumentsREST", new object[] {
                        dr,
                        email,
                        password});
            return ((CommonCollectionOfArrayOfDocumentJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentsRESTAsync(DocumentsRequest dr, string email, string password) {
            this.GetDocumentsRESTAsync(dr, email, password, null);
        }
        
        /// <remarks/>
        public void GetDocumentsRESTAsync(DocumentsRequest dr, string email, string password, object userState) {
            if ((this.GetDocumentsRESTOperationCompleted == null)) {
                this.GetDocumentsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentsRESTOperationCompleted);
            }
            this.InvokeAsync("GetDocumentsREST", new object[] {
                        dr,
                        email,
                        password}, this.GetDocumentsRESTOperationCompleted, userState);
        }
        
        private void OnGetDocumentsRESTOperationCompleted(object arg) {
            if ((this.GetDocumentsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentsRESTCompleted(this, new GetDocumentsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/InitDocument", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document InitDocument(int docType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("InitDocument", new object[] {
                        docType,
                        docTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void InitDocumentAsync(int docType, bool docTypeSpecified, string token) {
            this.InitDocumentAsync(docType, docTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void InitDocumentAsync(int docType, bool docTypeSpecified, string token, object userState) {
            if ((this.InitDocumentOperationCompleted == null)) {
                this.InitDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitDocumentOperationCompleted);
            }
            this.InvokeAsync("InitDocument", new object[] {
                        docType,
                        docTypeSpecified,
                        token}, this.InitDocumentOperationCompleted, userState);
        }
        
        private void OnInitDocumentOperationCompleted(object arg) {
            if ((this.InitDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitDocumentCompleted(this, new InitDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ChangeDocumentStatus", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonObject ChangeDocumentStatus([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")] Document[] docs, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("ChangeDocumentStatus", new object[] {
                        docs,
                        token});
            return ((CommonObject)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeDocumentStatusAsync(Document[] docs, string token) {
            this.ChangeDocumentStatusAsync(docs, token, null);
        }
        
        /// <remarks/>
        public void ChangeDocumentStatusAsync(Document[] docs, string token, object userState) {
            if ((this.ChangeDocumentStatusOperationCompleted == null)) {
                this.ChangeDocumentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeDocumentStatusOperationCompleted);
            }
            this.InvokeAsync("ChangeDocumentStatus", new object[] {
                        docs,
                        token}, this.ChangeDocumentStatusOperationCompleted, userState);
        }
        
        private void OnChangeDocumentStatusOperationCompleted(object arg) {
            if ((this.ChangeDocumentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeDocumentStatusCompleted(this, new ChangeDocumentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocument", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocument([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string docId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocument", new object[] {
                        docId,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentAsync(string docId, string token) {
            this.GetDocumentAsync(docId, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentAsync(string docId, string token, object userState) {
            if ((this.GetDocumentOperationCompleted == null)) {
                this.GetDocumentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentOperationCompleted);
            }
            this.InvokeAsync("GetDocument", new object[] {
                        docId,
                        token}, this.GetDocumentOperationCompleted, userState);
        }
        
        private void OnGetDocumentOperationCompleted(object arg) {
            if ((this.GetDocumentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentCompleted(this, new GetDocumentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentByNumber", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocumentByNumber(int docNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docNumberSpecified, int documentType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool documentTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocumentByNumber", new object[] {
                        docNumber,
                        docNumberSpecified,
                        documentType,
                        documentTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentByNumberAsync(int docNumber, bool docNumberSpecified, int documentType, bool documentTypeSpecified, string token) {
            this.GetDocumentByNumberAsync(docNumber, docNumberSpecified, documentType, documentTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentByNumberAsync(int docNumber, bool docNumberSpecified, int documentType, bool documentTypeSpecified, string token, object userState) {
            if ((this.GetDocumentByNumberOperationCompleted == null)) {
                this.GetDocumentByNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentByNumberOperationCompleted);
            }
            this.InvokeAsync("GetDocumentByNumber", new object[] {
                        docNumber,
                        docNumberSpecified,
                        documentType,
                        documentTypeSpecified,
                        token}, this.GetDocumentByNumberOperationCompleted, userState);
        }
        
        private void OnGetDocumentByNumberOperationCompleted(object arg) {
            if ((this.GetDocumentByNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentByNumberCompleted(this, new GetDocumentByNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerReport", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfDocumentJHiVxprS GetCustomerReport([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentsRequest dr, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerReport", new object[] {
                        dr,
                        token});
            return ((CommonCollectionOfArrayOfDocumentJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerReportAsync(DocumentsRequest dr, string token) {
            this.GetCustomerReportAsync(dr, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerReportAsync(DocumentsRequest dr, string token, object userState) {
            if ((this.GetCustomerReportOperationCompleted == null)) {
                this.GetCustomerReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerReportOperationCompleted);
            }
            this.InvokeAsync("GetCustomerReport", new object[] {
                        dr,
                        token}, this.GetCustomerReportOperationCompleted, userState);
        }
        
        private void OnGetCustomerReportOperationCompleted(object arg) {
            if ((this.GetCustomerReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerReportCompleted(this, new GetCustomerReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetDocumentByNumberREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document GetDocumentByNumberREST(int docNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool docNumberSpecified, int documentType, [System.Xml.Serialization.XmlIgnoreAttribute()] bool documentTypeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetDocumentByNumberREST", new object[] {
                        docNumber,
                        docNumberSpecified,
                        documentType,
                        documentTypeSpecified,
                        token});
            return ((Document)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentByNumberRESTAsync(int docNumber, bool docNumberSpecified, int documentType, bool documentTypeSpecified, string token) {
            this.GetDocumentByNumberRESTAsync(docNumber, docNumberSpecified, documentType, documentTypeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetDocumentByNumberRESTAsync(int docNumber, bool docNumberSpecified, int documentType, bool documentTypeSpecified, string token, object userState) {
            if ((this.GetDocumentByNumberRESTOperationCompleted == null)) {
                this.GetDocumentByNumberRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentByNumberRESTOperationCompleted);
            }
            this.InvokeAsync("GetDocumentByNumberREST", new object[] {
                        docNumber,
                        docNumberSpecified,
                        documentType,
                        documentTypeSpecified,
                        token}, this.GetDocumentByNumberRESTOperationCompleted, userState);
        }
        
        private void OnGetDocumentByNumberRESTOperationCompleted(object arg) {
            if ((this.GetDocumentByNumberRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentByNumberRESTCompleted(this, new GetDocumentByNumberRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateCreditCard", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CreditCompany CreateCreditCard([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] CreditCompany credit, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("CreateCreditCard", new object[] {
                        credit,
                        token});
            return ((CreditCompany)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCreditCardAsync(CreditCompany credit, string token) {
            this.CreateCreditCardAsync(credit, token, null);
        }
        
        /// <remarks/>
        public void CreateCreditCardAsync(CreditCompany credit, string token, object userState) {
            if ((this.CreateCreditCardOperationCompleted == null)) {
                this.CreateCreditCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCreditCardOperationCompleted);
            }
            this.InvokeAsync("CreateCreditCard", new object[] {
                        credit,
                        token}, this.CreateCreditCardOperationCompleted, userState);
        }
        
        private void OnCreateCreditCardOperationCompleted(object arg) {
            if ((this.CreateCreditCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCreditCardCompleted(this, new CreateCreditCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetList", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCurrencyJHiVxprS GetList() {
            object[] results = this.Invoke("GetList", new object[0]);
            return ((CommonCollectionOfArrayOfCurrencyJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetListAsync() {
            this.GetListAsync(null);
        }
        
        /// <remarks/>
        public void GetListAsync(object userState) {
            if ((this.GetListOperationCompleted == null)) {
                this.GetListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOperationCompleted);
            }
            this.InvokeAsync("GetList", new object[0], this.GetListOperationCompleted, userState);
        }
        
        private void OnGetListOperationCompleted(object arg) {
            if ((this.GetListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListCompleted(this, new GetListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateCustomer", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer CreateCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cu, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("CreateCustomer", new object[] {
                        cu,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(Customer cu, string token) {
            this.CreateCustomerAsync(cu, token, null);
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(Customer cu, string token, object userState) {
            if ((this.CreateCustomerOperationCompleted == null)) {
                this.CreateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateCustomer", new object[] {
                        cu,
                        token}, this.CreateCustomerOperationCompleted, userState);
        }
        
        private void OnCreateCustomerOperationCompleted(object arg) {
            if ((this.CreateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerCompleted(this, new CreateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateCustomerREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer CreateCustomerREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cu, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("CreateCustomerREST", new object[] {
                        cu,
                        email,
                        password});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerRESTAsync(Customer cu, string email, string password) {
            this.CreateCustomerRESTAsync(cu, email, password, null);
        }
        
        /// <remarks/>
        public void CreateCustomerRESTAsync(Customer cu, string email, string password, object userState) {
            if ((this.CreateCustomerRESTOperationCompleted == null)) {
                this.CreateCustomerRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerRESTOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerREST", new object[] {
                        cu,
                        email,
                        password}, this.CreateCustomerRESTOperationCompleted, userState);
        }
        
        private void OnCreateCustomerRESTOperationCompleted(object arg) {
            if ((this.CreateCustomerRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerRESTCompleted(this, new CreateCustomerRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/CreateCustomerParamsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer CreateCustomerParamsREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string i4uEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string i4uPassword, int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string customerEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string uniqueId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string cell, long externalNumber, [System.Xml.Serialization.XmlIgnoreAttribute()] bool externalNumberSpecified) {
            object[] results = this.Invoke("CreateCustomerParamsREST", new object[] {
                        i4uEmail,
                        i4uPassword,
                        id,
                        idSpecified,
                        name,
                        customerEmail,
                        uniqueId,
                        phone,
                        cell,
                        externalNumber,
                        externalNumberSpecified});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerParamsRESTAsync(string i4uEmail, string i4uPassword, int id, bool idSpecified, string name, string customerEmail, string uniqueId, string phone, string cell, long externalNumber, bool externalNumberSpecified) {
            this.CreateCustomerParamsRESTAsync(i4uEmail, i4uPassword, id, idSpecified, name, customerEmail, uniqueId, phone, cell, externalNumber, externalNumberSpecified, null);
        }
        
        /// <remarks/>
        public void CreateCustomerParamsRESTAsync(string i4uEmail, string i4uPassword, int id, bool idSpecified, string name, string customerEmail, string uniqueId, string phone, string cell, long externalNumber, bool externalNumberSpecified, object userState) {
            if ((this.CreateCustomerParamsRESTOperationCompleted == null)) {
                this.CreateCustomerParamsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerParamsRESTOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerParamsREST", new object[] {
                        i4uEmail,
                        i4uPassword,
                        id,
                        idSpecified,
                        name,
                        customerEmail,
                        uniqueId,
                        phone,
                        cell,
                        externalNumber,
                        externalNumberSpecified}, this.CreateCustomerParamsRESTOperationCompleted, userState);
        }
        
        private void OnCreateCustomerParamsRESTOperationCompleted(object arg) {
            if ((this.CreateCustomerParamsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerParamsRESTCompleted(this, new CreateCustomerParamsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/UpdateCustomer", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer UpdateCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cu, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("UpdateCustomer", new object[] {
                        cu,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(Customer cu, string token) {
            this.UpdateCustomerAsync(cu, token, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(Customer cu, string token, object userState) {
            if ((this.UpdateCustomerOperationCompleted == null)) {
                this.UpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomer", new object[] {
                        cu,
                        token}, this.UpdateCustomerOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerOperationCompleted(object arg) {
            if ((this.UpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerCompleted(this, new UpdateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetFullCustomer", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetFullCustomer(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, int orgID, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orgIDSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetFullCustomer", new object[] {
                        id,
                        idSpecified,
                        orgID,
                        orgIDSpecified,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullCustomerAsync(int id, bool idSpecified, int orgID, bool orgIDSpecified, string token) {
            this.GetFullCustomerAsync(id, idSpecified, orgID, orgIDSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetFullCustomerAsync(int id, bool idSpecified, int orgID, bool orgIDSpecified, string token, object userState) {
            if ((this.GetFullCustomerOperationCompleted == null)) {
                this.GetFullCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullCustomerOperationCompleted);
            }
            this.InvokeAsync("GetFullCustomer", new object[] {
                        id,
                        idSpecified,
                        orgID,
                        orgIDSpecified,
                        token}, this.GetFullCustomerOperationCompleted, userState);
        }
        
        private void OnGetFullCustomerOperationCompleted(object arg) {
            if ((this.GetFullCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullCustomerCompleted(this, new GetFullCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomersByOrgId", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCustomerJHiVxprS GetCustomersByOrgId([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomersByOrgId", new object[] {
                        token});
            return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByOrgIdAsync(string token) {
            this.GetCustomersByOrgIdAsync(token, null);
        }
        
        /// <remarks/>
        public void GetCustomersByOrgIdAsync(string token, object userState) {
            if ((this.GetCustomersByOrgIdOperationCompleted == null)) {
                this.GetCustomersByOrgIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByOrgIdOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByOrgId", new object[] {
                        token}, this.GetCustomersByOrgIdOperationCompleted, userState);
        }
        
        private void OnGetCustomersByOrgIdOperationCompleted(object arg) {
            if ((this.GetCustomersByOrgIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByOrgIdCompleted(this, new GetCustomersByOrgIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomersByOrgIdREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCustomerJHiVxprS GetCustomersByOrgIdREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("GetCustomersByOrgIdREST", new object[] {
                        email,
                        password});
            return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersByOrgIdRESTAsync(string email, string password) {
            this.GetCustomersByOrgIdRESTAsync(email, password, null);
        }
        
        /// <remarks/>
        public void GetCustomersByOrgIdRESTAsync(string email, string password, object userState) {
            if ((this.GetCustomersByOrgIdRESTOperationCompleted == null)) {
                this.GetCustomersByOrgIdRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersByOrgIdRESTOperationCompleted);
            }
            this.InvokeAsync("GetCustomersByOrgIdREST", new object[] {
                        email,
                        password}, this.GetCustomersByOrgIdRESTOperationCompleted, userState);
        }
        
        private void OnGetCustomersByOrgIdRESTOperationCompleted(object arg) {
            if ((this.GetCustomersByOrgIdRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersByOrgIdRESTCompleted(this, new GetCustomersByOrgIdRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomers", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCustomerJHiVxprS GetCustomers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cust, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomers", new object[] {
                        cust,
                        token});
            return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersAsync(Customer cust, string token) {
            this.GetCustomersAsync(cust, token, null);
        }
        
        /// <remarks/>
        public void GetCustomersAsync(Customer cust, string token, object userState) {
            if ((this.GetCustomersOperationCompleted == null)) {
                this.GetCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersOperationCompleted);
            }
            this.InvokeAsync("GetCustomers", new object[] {
                        cust,
                        token}, this.GetCustomersOperationCompleted, userState);
        }
        
        private void OnGetCustomersOperationCompleted(object arg) {
            if ((this.GetCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersCompleted(this, new GetCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomersREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCustomerJHiVxprS GetCustomersREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer cust, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("GetCustomersREST", new object[] {
                        cust,
                        email,
                        password});
            return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersRESTAsync(Customer cust, string email, string password) {
            this.GetCustomersRESTAsync(cust, email, password, null);
        }
        
        /// <remarks/>
        public void GetCustomersRESTAsync(Customer cust, string email, string password, object userState) {
            if ((this.GetCustomersRESTOperationCompleted == null)) {
                this.GetCustomersRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersRESTOperationCompleted);
            }
            this.InvokeAsync("GetCustomersREST", new object[] {
                        cust,
                        email,
                        password}, this.GetCustomersRESTOperationCompleted, userState);
        }
        
        private void OnGetCustomersRESTOperationCompleted(object arg) {
            if ((this.GetCustomersRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersRESTCompleted(this, new GetCustomersRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByName", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByName([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByName", new object[] {
                        name,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByNameAsync(string name, string token) {
            this.GetCustomerByNameAsync(name, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByNameAsync(string name, string token, object userState) {
            if ((this.GetCustomerByNameOperationCompleted == null)) {
                this.GetCustomerByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByNameOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByName", new object[] {
                        name,
                        token}, this.GetCustomerByNameOperationCompleted, userState);
        }
        
        private void OnGetCustomerByNameOperationCompleted(object arg) {
            if ((this.GetCustomerByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByNameCompleted(this, new GetCustomerByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByClientCode", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByClientCode(int clientCode, [System.Xml.Serialization.XmlIgnoreAttribute()] bool clientCodeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByClientCode", new object[] {
                        clientCode,
                        clientCodeSpecified,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByClientCodeAsync(int clientCode, bool clientCodeSpecified, string token) {
            this.GetCustomerByClientCodeAsync(clientCode, clientCodeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByClientCodeAsync(int clientCode, bool clientCodeSpecified, string token, object userState) {
            if ((this.GetCustomerByClientCodeOperationCompleted == null)) {
                this.GetCustomerByClientCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByClientCodeOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByClientCode", new object[] {
                        clientCode,
                        clientCodeSpecified,
                        token}, this.GetCustomerByClientCodeOperationCompleted, userState);
        }
        
        private void OnGetCustomerByClientCodeOperationCompleted(object arg) {
            if ((this.GetCustomerByClientCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByClientCodeCompleted(this, new GetCustomerByClientCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByGuid", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByGuid([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByGuid", new object[] {
                        guid,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByGuidAsync(string guid, string token) {
            this.GetCustomerByGuidAsync(guid, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByGuidAsync(string guid, string token, object userState) {
            if ((this.GetCustomerByGuidOperationCompleted == null)) {
                this.GetCustomerByGuidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByGuidOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByGuid", new object[] {
                        guid,
                        token}, this.GetCustomerByGuidOperationCompleted, userState);
        }
        
        private void OnGetCustomerByGuidOperationCompleted(object arg) {
            if ((this.GetCustomerByGuidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByGuidCompleted(this, new GetCustomerByGuidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByGuidInnerSearch", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByGuidInnerSearch([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string guid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByGuidInnerSearch", new object[] {
                        guid,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByGuidInnerSearchAsync(string guid, string token) {
            this.GetCustomerByGuidInnerSearchAsync(guid, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByGuidInnerSearchAsync(string guid, string token, object userState) {
            if ((this.GetCustomerByGuidInnerSearchOperationCompleted == null)) {
                this.GetCustomerByGuidInnerSearchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByGuidInnerSearchOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByGuidInnerSearch", new object[] {
                        guid,
                        token}, this.GetCustomerByGuidInnerSearchOperationCompleted, userState);
        }
        
        private void OnGetCustomerByGuidInnerSearchOperationCompleted(object arg) {
            if ((this.GetCustomerByGuidInnerSearchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByGuidInnerSearchCompleted(this, new GetCustomerByGuidInnerSearchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetByClientCode", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetByClientCode(int clientCode, [System.Xml.Serialization.XmlIgnoreAttribute()] bool clientCodeSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetByClientCode", new object[] {
                        clientCode,
                        clientCodeSpecified,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetByClientCodeAsync(int clientCode, bool clientCodeSpecified, string token) {
            this.GetByClientCodeAsync(clientCode, clientCodeSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetByClientCodeAsync(int clientCode, bool clientCodeSpecified, string token, object userState) {
            if ((this.GetByClientCodeOperationCompleted == null)) {
                this.GetByClientCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetByClientCodeOperationCompleted);
            }
            this.InvokeAsync("GetByClientCode", new object[] {
                        clientCode,
                        clientCodeSpecified,
                        token}, this.GetByClientCodeOperationCompleted, userState);
        }
        
        private void OnGetByClientCodeOperationCompleted(object arg) {
            if ((this.GetByClientCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetByClientCodeCompleted(this, new GetByClientCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCustomerByExternalNumber", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Customer GetCustomerByExternalNumber(long number, [System.Xml.Serialization.XmlIgnoreAttribute()] bool numberSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCustomerByExternalNumber", new object[] {
                        number,
                        numberSpecified,
                        token});
            return ((Customer)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerByExternalNumberAsync(long number, bool numberSpecified, string token) {
            this.GetCustomerByExternalNumberAsync(number, numberSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetCustomerByExternalNumberAsync(long number, bool numberSpecified, string token, object userState) {
            if ((this.GetCustomerByExternalNumberOperationCompleted == null)) {
                this.GetCustomerByExternalNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerByExternalNumberOperationCompleted);
            }
            this.InvokeAsync("GetCustomerByExternalNumber", new object[] {
                        number,
                        numberSpecified,
                        token}, this.GetCustomerByExternalNumberOperationCompleted, userState);
        }
        
        private void OnGetCustomerByExternalNumberOperationCompleted(object arg) {
            if ((this.GetCustomerByExternalNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerByExternalNumberCompleted(this, new GetCustomerByExternalNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetAssociatedEmailsByClientOnly", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
        public AssociatedEmail[] GetAssociatedEmailsByClientOnly([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> clientid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool clientidSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetAssociatedEmailsByClientOnly", new object[] {
                        clientid,
                        clientidSpecified,
                        token});
            return ((AssociatedEmail[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssociatedEmailsByClientOnlyAsync(System.Nullable<int> clientid, bool clientidSpecified, string token) {
            this.GetAssociatedEmailsByClientOnlyAsync(clientid, clientidSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetAssociatedEmailsByClientOnlyAsync(System.Nullable<int> clientid, bool clientidSpecified, string token, object userState) {
            if ((this.GetAssociatedEmailsByClientOnlyOperationCompleted == null)) {
                this.GetAssociatedEmailsByClientOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssociatedEmailsByClientOnlyOperationCompleted);
            }
            this.InvokeAsync("GetAssociatedEmailsByClientOnly", new object[] {
                        clientid,
                        clientidSpecified,
                        token}, this.GetAssociatedEmailsByClientOnlyOperationCompleted, userState);
        }
        
        private void OnGetAssociatedEmailsByClientOnlyOperationCompleted(object arg) {
            if ((this.GetAssociatedEmailsByClientOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssociatedEmailsByClientOnlyCompleted(this, new GetAssociatedEmailsByClientOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCatalogItemByCode", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CatalogItem GetCatalogItemByCode([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string code, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCatalogItemByCode", new object[] {
                        code,
                        token});
            return ((CatalogItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetCatalogItemByCodeAsync(string code, string token) {
            this.GetCatalogItemByCodeAsync(code, token, null);
        }
        
        /// <remarks/>
        public void GetCatalogItemByCodeAsync(string code, string token, object userState) {
            if ((this.GetCatalogItemByCodeOperationCompleted == null)) {
                this.GetCatalogItemByCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatalogItemByCodeOperationCompleted);
            }
            this.InvokeAsync("GetCatalogItemByCode", new object[] {
                        code,
                        token}, this.GetCatalogItemByCodeOperationCompleted, userState);
        }
        
        private void OnGetCatalogItemByCodeOperationCompleted(object arg) {
            if ((this.GetCatalogItemByCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatalogItemByCodeCompleted(this, new GetCatalogItemByCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetCatalogItems", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfCatalogItemJHiVxprS GetCatalogItems(bool GetAll, [System.Xml.Serialization.XmlIgnoreAttribute()] bool GetAllSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetCatalogItems", new object[] {
                        GetAll,
                        GetAllSpecified,
                        token});
            return ((CommonCollectionOfArrayOfCatalogItemJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetCatalogItemsAsync(bool GetAll, bool GetAllSpecified, string token) {
            this.GetCatalogItemsAsync(GetAll, GetAllSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetCatalogItemsAsync(bool GetAll, bool GetAllSpecified, string token, object userState) {
            if ((this.GetCatalogItemsOperationCompleted == null)) {
                this.GetCatalogItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCatalogItemsOperationCompleted);
            }
            this.InvokeAsync("GetCatalogItems", new object[] {
                        GetAll,
                        GetAllSpecified,
                        token}, this.GetCatalogItemsOperationCompleted, userState);
        }
        
        private void OnGetCatalogItemsOperationCompleted(object arg) {
            if ((this.GetCatalogItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCatalogItemsCompleted(this, new GetCatalogItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetUserClearingAccount", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClearingAccount GetUserClearingAccount(int orgId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool orgIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetUserClearingAccount", new object[] {
                        orgId,
                        orgIdSpecified,
                        token});
            return ((ClearingAccount)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserClearingAccountAsync(int orgId, bool orgIdSpecified, string token) {
            this.GetUserClearingAccountAsync(orgId, orgIdSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetUserClearingAccountAsync(int orgId, bool orgIdSpecified, string token, object userState) {
            if ((this.GetUserClearingAccountOperationCompleted == null)) {
                this.GetUserClearingAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserClearingAccountOperationCompleted);
            }
            this.InvokeAsync("GetUserClearingAccount", new object[] {
                        orgId,
                        orgIdSpecified,
                        token}, this.GetUserClearingAccountOperationCompleted, userState);
        }
        
        private void OnGetUserClearingAccountOperationCompleted(object arg) {
            if ((this.GetUserClearingAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserClearingAccountCompleted(this, new GetUserClearingAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/SendDocumentByMail", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonObject SendDocumentByMail([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Document doc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("SendDocumentByMail", new object[] {
                        doc,
                        token});
            return ((CommonObject)(results[0]));
        }
        
        /// <remarks/>
        public void SendDocumentByMailAsync(Document doc, string token) {
            this.SendDocumentByMailAsync(doc, token, null);
        }
        
        /// <remarks/>
        public void SendDocumentByMailAsync(Document doc, string token, object userState) {
            if ((this.SendDocumentByMailOperationCompleted == null)) {
                this.SendDocumentByMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDocumentByMailOperationCompleted);
            }
            this.InvokeAsync("SendDocumentByMail", new object[] {
                        doc,
                        token}, this.SendDocumentByMailOperationCompleted, userState);
        }
        
        private void OnSendDocumentByMailOperationCompleted(object arg) {
            if ((this.SendDocumentByMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDocumentByMailCompleted(this, new SendDocumentByMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/SendStandingOrderSummary", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendStandingOrderSummary([System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)] [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")] ClientsStandingOrderLog[] csoLogs, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string headline, out bool SendStandingOrderSummaryResult, [System.Xml.Serialization.XmlIgnoreAttribute()] out bool SendStandingOrderSummaryResultSpecified) {
            object[] results = this.Invoke("SendStandingOrderSummary", new object[] {
                        csoLogs,
                        email,
                        headline});
            SendStandingOrderSummaryResult = ((bool)(results[0]));
            SendStandingOrderSummaryResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void SendStandingOrderSummaryAsync(ClientsStandingOrderLog[] csoLogs, string email, string headline) {
            this.SendStandingOrderSummaryAsync(csoLogs, email, headline, null);
        }
        
        /// <remarks/>
        public void SendStandingOrderSummaryAsync(ClientsStandingOrderLog[] csoLogs, string email, string headline, object userState) {
            if ((this.SendStandingOrderSummaryOperationCompleted == null)) {
                this.SendStandingOrderSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendStandingOrderSummaryOperationCompleted);
            }
            this.InvokeAsync("SendStandingOrderSummary", new object[] {
                        csoLogs,
                        email,
                        headline}, this.SendStandingOrderSummaryOperationCompleted, userState);
        }
        
        private void OnSendStandingOrderSummaryOperationCompleted(object arg) {
            if ((this.SendStandingOrderSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendStandingOrderSummaryCompleted(this, new SendStandingOrderSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessCard", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DocumentCsv ProcessCard([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentCsv payment, bool creatInvoiceReceipt, [System.Xml.Serialization.XmlIgnoreAttribute()] bool creatInvoiceReceiptSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("ProcessCard", new object[] {
                        payment,
                        creatInvoiceReceipt,
                        creatInvoiceReceiptSpecified,
                        token});
            return ((DocumentCsv)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessCardAsync(DocumentCsv payment, bool creatInvoiceReceipt, bool creatInvoiceReceiptSpecified, string token) {
            this.ProcessCardAsync(payment, creatInvoiceReceipt, creatInvoiceReceiptSpecified, token, null);
        }
        
        /// <remarks/>
        public void ProcessCardAsync(DocumentCsv payment, bool creatInvoiceReceipt, bool creatInvoiceReceiptSpecified, string token, object userState) {
            if ((this.ProcessCardOperationCompleted == null)) {
                this.ProcessCardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessCardOperationCompleted);
            }
            this.InvokeAsync("ProcessCard", new object[] {
                        payment,
                        creatInvoiceReceipt,
                        creatInvoiceReceiptSpecified,
                        token}, this.ProcessCardOperationCompleted, userState);
        }
        
        private void OnProcessCardOperationCompleted(object arg) {
            if ((this.ProcessCardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessCardCompleted(this, new ProcessCardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessClearingDocOnly", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public DocumentCsv ProcessClearingDocOnly([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] DocumentCsv payment, bool isNotifyOnly, [System.Xml.Serialization.XmlIgnoreAttribute()] bool isNotifyOnlySpecified, bool isCreateDoc, [System.Xml.Serialization.XmlIgnoreAttribute()] bool isCreateDocSpecified) {
            object[] results = this.Invoke("ProcessClearingDocOnly", new object[] {
                        payment,
                        isNotifyOnly,
                        isNotifyOnlySpecified,
                        isCreateDoc,
                        isCreateDocSpecified});
            return ((DocumentCsv)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessClearingDocOnlyAsync(DocumentCsv payment, bool isNotifyOnly, bool isNotifyOnlySpecified, bool isCreateDoc, bool isCreateDocSpecified) {
            this.ProcessClearingDocOnlyAsync(payment, isNotifyOnly, isNotifyOnlySpecified, isCreateDoc, isCreateDocSpecified, null);
        }
        
        /// <remarks/>
        public void ProcessClearingDocOnlyAsync(DocumentCsv payment, bool isNotifyOnly, bool isNotifyOnlySpecified, bool isCreateDoc, bool isCreateDocSpecified, object userState) {
            if ((this.ProcessClearingDocOnlyOperationCompleted == null)) {
                this.ProcessClearingDocOnlyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessClearingDocOnlyOperationCompleted);
            }
            this.InvokeAsync("ProcessClearingDocOnly", new object[] {
                        payment,
                        isNotifyOnly,
                        isNotifyOnlySpecified,
                        isCreateDoc,
                        isCreateDocSpecified}, this.ProcessClearingDocOnlyOperationCompleted, userState);
        }
        
        private void OnProcessClearingDocOnlyOperationCompleted(object arg) {
            if ((this.ProcessClearingDocOnlyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessClearingDocOnlyCompleted(this, new ProcessClearingDocOnlyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/InsertToLogFullParamsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void InsertToLogFullParamsREST(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientName, 
                    double amount, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                    int paymentNumber, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentNumberSpecified, 
                    int currency, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool currencySpecified, 
                    int creditType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool creditTypeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string creditNumber, 
                    int clearingCompany, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool clearingCompanySpecified, 
                    bool isSuccess, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool isSuccessSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string errorMessage, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clearingConfirmationNumber, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token, 
                    out int InsertToLogFullParamsRESTResult, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] out bool InsertToLogFullParamsRESTResultSpecified) {
            object[] results = this.Invoke("InsertToLogFullParamsREST", new object[] {
                        clientName,
                        amount,
                        amountSpecified,
                        paymentNumber,
                        paymentNumberSpecified,
                        currency,
                        currencySpecified,
                        creditType,
                        creditTypeSpecified,
                        creditNumber,
                        clearingCompany,
                        clearingCompanySpecified,
                        isSuccess,
                        isSuccessSpecified,
                        errorMessage,
                        clearingConfirmationNumber,
                        token});
            InsertToLogFullParamsRESTResult = ((int)(results[0]));
            InsertToLogFullParamsRESTResultSpecified = ((bool)(results[1]));
        }
        
        /// <remarks/>
        public void InsertToLogFullParamsRESTAsync(
                    string clientName, 
                    double amount, 
                    bool amountSpecified, 
                    int paymentNumber, 
                    bool paymentNumberSpecified, 
                    int currency, 
                    bool currencySpecified, 
                    int creditType, 
                    bool creditTypeSpecified, 
                    string creditNumber, 
                    int clearingCompany, 
                    bool clearingCompanySpecified, 
                    bool isSuccess, 
                    bool isSuccessSpecified, 
                    string errorMessage, 
                    string clearingConfirmationNumber, 
                    string token) {
            this.InsertToLogFullParamsRESTAsync(clientName, amount, amountSpecified, paymentNumber, paymentNumberSpecified, currency, currencySpecified, creditType, creditTypeSpecified, creditNumber, clearingCompany, clearingCompanySpecified, isSuccess, isSuccessSpecified, errorMessage, clearingConfirmationNumber, token, null);
        }
        
        /// <remarks/>
        public void InsertToLogFullParamsRESTAsync(
                    string clientName, 
                    double amount, 
                    bool amountSpecified, 
                    int paymentNumber, 
                    bool paymentNumberSpecified, 
                    int currency, 
                    bool currencySpecified, 
                    int creditType, 
                    bool creditTypeSpecified, 
                    string creditNumber, 
                    int clearingCompany, 
                    bool clearingCompanySpecified, 
                    bool isSuccess, 
                    bool isSuccessSpecified, 
                    string errorMessage, 
                    string clearingConfirmationNumber, 
                    string token, 
                    object userState) {
            if ((this.InsertToLogFullParamsRESTOperationCompleted == null)) {
                this.InsertToLogFullParamsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertToLogFullParamsRESTOperationCompleted);
            }
            this.InvokeAsync("InsertToLogFullParamsREST", new object[] {
                        clientName,
                        amount,
                        amountSpecified,
                        paymentNumber,
                        paymentNumberSpecified,
                        currency,
                        currencySpecified,
                        creditType,
                        creditTypeSpecified,
                        creditNumber,
                        clearingCompany,
                        clearingCompanySpecified,
                        isSuccess,
                        isSuccessSpecified,
                        errorMessage,
                        clearingConfirmationNumber,
                        token}, this.InsertToLogFullParamsRESTOperationCompleted, userState);
        }
        
        private void OnInsertToLogFullParamsRESTOperationCompleted(object arg) {
            if ((this.InsertToLogFullParamsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertToLogFullParamsRESTCompleted(this, new InsertToLogFullParamsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessApiRequest", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ApiClearingRequest ProcessApiRequest([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ApiClearingRequest request) {
            object[] results = this.Invoke("ProcessApiRequest", new object[] {
                        request});
            return ((ApiClearingRequest)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessApiRequestAsync(ApiClearingRequest request) {
            this.ProcessApiRequestAsync(request, null);
        }
        
        /// <remarks/>
        public void ProcessApiRequestAsync(ApiClearingRequest request, object userState) {
            if ((this.ProcessApiRequestOperationCompleted == null)) {
                this.ProcessApiRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessApiRequestOperationCompleted);
            }
            this.InvokeAsync("ProcessApiRequest", new object[] {
                        request}, this.ProcessApiRequestOperationCompleted, userState);
        }
        
        private void OnProcessApiRequestOperationCompleted(object arg) {
            if ((this.ProcessApiRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessApiRequestCompleted(this, new ProcessApiRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessApiRequestFullContentsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ApiClearingRequest ProcessApiRequestFullContentsREST(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string invoice4uUserEmail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string invoice4uUserPassword, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientFullName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientPhone, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientEmail, 
                    double sum, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool sumSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string currency, 
                    int type, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, 
                    int paymentsNum, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentsNumSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string returnUrl, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string callBackUrl, 
                    bool isQaMode, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool isQaModeSpecified) {
            object[] results = this.Invoke("ProcessApiRequestFullContentsREST", new object[] {
                        invoice4uUserEmail,
                        invoice4uUserPassword,
                        clientFullName,
                        clientPhone,
                        clientEmail,
                        sum,
                        sumSpecified,
                        description,
                        currency,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        returnUrl,
                        callBackUrl,
                        isQaMode,
                        isQaModeSpecified});
            return ((ApiClearingRequest)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessApiRequestFullContentsRESTAsync(
                    string invoice4uUserEmail, 
                    string invoice4uUserPassword, 
                    string clientFullName, 
                    string clientPhone, 
                    string clientEmail, 
                    double sum, 
                    bool sumSpecified, 
                    string description, 
                    string currency, 
                    int type, 
                    bool typeSpecified, 
                    int paymentsNum, 
                    bool paymentsNumSpecified, 
                    string returnUrl, 
                    string callBackUrl, 
                    bool isQaMode, 
                    bool isQaModeSpecified) {
            this.ProcessApiRequestFullContentsRESTAsync(invoice4uUserEmail, invoice4uUserPassword, clientFullName, clientPhone, clientEmail, sum, sumSpecified, description, currency, type, typeSpecified, paymentsNum, paymentsNumSpecified, returnUrl, callBackUrl, isQaMode, isQaModeSpecified, null);
        }
        
        /// <remarks/>
        public void ProcessApiRequestFullContentsRESTAsync(
                    string invoice4uUserEmail, 
                    string invoice4uUserPassword, 
                    string clientFullName, 
                    string clientPhone, 
                    string clientEmail, 
                    double sum, 
                    bool sumSpecified, 
                    string description, 
                    string currency, 
                    int type, 
                    bool typeSpecified, 
                    int paymentsNum, 
                    bool paymentsNumSpecified, 
                    string returnUrl, 
                    string callBackUrl, 
                    bool isQaMode, 
                    bool isQaModeSpecified, 
                    object userState) {
            if ((this.ProcessApiRequestFullContentsRESTOperationCompleted == null)) {
                this.ProcessApiRequestFullContentsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessApiRequestFullContentsRESTOperationCompleted);
            }
            this.InvokeAsync("ProcessApiRequestFullContentsREST", new object[] {
                        invoice4uUserEmail,
                        invoice4uUserPassword,
                        clientFullName,
                        clientPhone,
                        clientEmail,
                        sum,
                        sumSpecified,
                        description,
                        currency,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        returnUrl,
                        callBackUrl,
                        isQaMode,
                        isQaModeSpecified}, this.ProcessApiRequestFullContentsRESTOperationCompleted, userState);
        }
        
        private void OnProcessApiRequestFullContentsRESTOperationCompleted(object arg) {
            if ((this.ProcessApiRequestFullContentsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessApiRequestFullContentsRESTCompleted(this, new ProcessApiRequestFullContentsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProccessApiRequestClearingLogInsertREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClearingLog ProccessApiRequestClearingLogInsertREST(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string invoice4uUserEmail, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string invoice4uUserPassword, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clientName, 
                    double amount, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool amountSpecified, 
                    int paymentNumber, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentNumberSpecified, 
                    int currency, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool currencySpecified, 
                    int creditType, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool creditTypeSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string creditNumber, 
                    bool isSuccess, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool isSuccessSpecified, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string errorMessage, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string clearingConfirmationNumber) {
            object[] results = this.Invoke("ProccessApiRequestClearingLogInsertREST", new object[] {
                        invoice4uUserEmail,
                        invoice4uUserPassword,
                        clientName,
                        amount,
                        amountSpecified,
                        paymentNumber,
                        paymentNumberSpecified,
                        currency,
                        currencySpecified,
                        creditType,
                        creditTypeSpecified,
                        creditNumber,
                        isSuccess,
                        isSuccessSpecified,
                        errorMessage,
                        clearingConfirmationNumber});
            return ((ClearingLog)(results[0]));
        }
        
        /// <remarks/>
        public void ProccessApiRequestClearingLogInsertRESTAsync(
                    string invoice4uUserEmail, 
                    string invoice4uUserPassword, 
                    string clientName, 
                    double amount, 
                    bool amountSpecified, 
                    int paymentNumber, 
                    bool paymentNumberSpecified, 
                    int currency, 
                    bool currencySpecified, 
                    int creditType, 
                    bool creditTypeSpecified, 
                    string creditNumber, 
                    bool isSuccess, 
                    bool isSuccessSpecified, 
                    string errorMessage, 
                    string clearingConfirmationNumber) {
            this.ProccessApiRequestClearingLogInsertRESTAsync(invoice4uUserEmail, invoice4uUserPassword, clientName, amount, amountSpecified, paymentNumber, paymentNumberSpecified, currency, currencySpecified, creditType, creditTypeSpecified, creditNumber, isSuccess, isSuccessSpecified, errorMessage, clearingConfirmationNumber, null);
        }
        
        /// <remarks/>
        public void ProccessApiRequestClearingLogInsertRESTAsync(
                    string invoice4uUserEmail, 
                    string invoice4uUserPassword, 
                    string clientName, 
                    double amount, 
                    bool amountSpecified, 
                    int paymentNumber, 
                    bool paymentNumberSpecified, 
                    int currency, 
                    bool currencySpecified, 
                    int creditType, 
                    bool creditTypeSpecified, 
                    string creditNumber, 
                    bool isSuccess, 
                    bool isSuccessSpecified, 
                    string errorMessage, 
                    string clearingConfirmationNumber, 
                    object userState) {
            if ((this.ProccessApiRequestClearingLogInsertRESTOperationCompleted == null)) {
                this.ProccessApiRequestClearingLogInsertRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProccessApiRequestClearingLogInsertRESTOperationCompleted);
            }
            this.InvokeAsync("ProccessApiRequestClearingLogInsertREST", new object[] {
                        invoice4uUserEmail,
                        invoice4uUserPassword,
                        clientName,
                        amount,
                        amountSpecified,
                        paymentNumber,
                        paymentNumberSpecified,
                        currency,
                        currencySpecified,
                        creditType,
                        creditTypeSpecified,
                        creditNumber,
                        isSuccess,
                        isSuccessSpecified,
                        errorMessage,
                        clearingConfirmationNumber}, this.ProccessApiRequestClearingLogInsertRESTOperationCompleted, userState);
        }
        
        private void OnProccessApiRequestClearingLogInsertRESTOperationCompleted(object arg) {
            if ((this.ProccessApiRequestClearingLogInsertRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProccessApiRequestClearingLogInsertRESTCompleted(this, new ProccessApiRequestClearingLogInsertRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/TokenAddForClient", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public OrganizationTokenDetails TokenAddForClient([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] OrganizationTokenDetails otd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("TokenAddForClient", new object[] {
                        otd,
                        token});
            return ((OrganizationTokenDetails)(results[0]));
        }
        
        /// <remarks/>
        public void TokenAddForClientAsync(OrganizationTokenDetails otd, string token) {
            this.TokenAddForClientAsync(otd, token, null);
        }
        
        /// <remarks/>
        public void TokenAddForClientAsync(OrganizationTokenDetails otd, string token, object userState) {
            if ((this.TokenAddForClientOperationCompleted == null)) {
                this.TokenAddForClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTokenAddForClientOperationCompleted);
            }
            this.InvokeAsync("TokenAddForClient", new object[] {
                        otd,
                        token}, this.TokenAddForClientOperationCompleted, userState);
        }
        
        private void OnTokenAddForClientOperationCompleted(object arg) {
            if ((this.TokenAddForClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TokenAddForClientCompleted(this, new TokenAddForClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/AddStandingOrder", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClientsStandingOrder AddStandingOrder([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] ClientsStandingOrder cso, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("AddStandingOrder", new object[] {
                        cso,
                        token});
            return ((ClientsStandingOrder)(results[0]));
        }
        
        /// <remarks/>
        public void AddStandingOrderAsync(ClientsStandingOrder cso, string token) {
            this.AddStandingOrderAsync(cso, token, null);
        }
        
        /// <remarks/>
        public void AddStandingOrderAsync(ClientsStandingOrder cso, string token, object userState) {
            if ((this.AddStandingOrderOperationCompleted == null)) {
                this.AddStandingOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddStandingOrderOperationCompleted);
            }
            this.InvokeAsync("AddStandingOrder", new object[] {
                        cso,
                        token}, this.AddStandingOrderOperationCompleted, userState);
        }
        
        private void OnAddStandingOrderOperationCompleted(object arg) {
            if ((this.AddStandingOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddStandingOrderCompleted(this, new AddStandingOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetProducts", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfClearingProductsJHiVxprS GetProducts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetProducts", new object[] {
                        token});
            return ((CommonCollectionOfArrayOfClearingProductsJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductsAsync(string token) {
            this.GetProductsAsync(token, null);
        }
        
        /// <remarks/>
        public void GetProductsAsync(string token, object userState) {
            if ((this.GetProductsOperationCompleted == null)) {
                this.GetProductsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductsOperationCompleted);
            }
            this.InvokeAsync("GetProducts", new object[] {
                        token}, this.GetProductsOperationCompleted, userState);
        }
        
        private void OnGetProductsOperationCompleted(object arg) {
            if ((this.GetProductsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetProductById", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClearingProducts GetProductById(int id, [System.Xml.Serialization.XmlIgnoreAttribute()] bool idSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetProductById", new object[] {
                        id,
                        idSpecified,
                        token});
            return ((ClearingProducts)(results[0]));
        }
        
        /// <remarks/>
        public void GetProductByIdAsync(int id, bool idSpecified, string token) {
            this.GetProductByIdAsync(id, idSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetProductByIdAsync(int id, bool idSpecified, string token, object userState) {
            if ((this.GetProductByIdOperationCompleted == null)) {
                this.GetProductByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProductByIdOperationCompleted);
            }
            this.InvokeAsync("GetProductById", new object[] {
                        id,
                        idSpecified,
                        token}, this.GetProductByIdOperationCompleted, userState);
        }
        
        private void OnGetProductByIdOperationCompleted(object arg) {
            if ((this.GetProductByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProductByIdCompleted(this, new GetProductByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetClearingProductOrdersByToken", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS GetClearingProductOrdersByToken([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetClearingProductOrdersByToken", new object[] {
                        token});
            return ((CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetClearingProductOrdersByTokenAsync(string token) {
            this.GetClearingProductOrdersByTokenAsync(token, null);
        }
        
        /// <remarks/>
        public void GetClearingProductOrdersByTokenAsync(string token, object userState) {
            if ((this.GetClearingProductOrdersByTokenOperationCompleted == null)) {
                this.GetClearingProductOrdersByTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClearingProductOrdersByTokenOperationCompleted);
            }
            this.InvokeAsync("GetClearingProductOrdersByToken", new object[] {
                        token}, this.GetClearingProductOrdersByTokenOperationCompleted, userState);
        }
        
        private void OnGetClearingProductOrdersByTokenOperationCompleted(object arg) {
            if ((this.GetClearingProductOrdersByTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClearingProductOrdersByTokenCompleted(this, new GetClearingProductOrdersByTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/GetClearingProductOrdersByProductId", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS GetClearingProductOrdersByProductId(int productId, [System.Xml.Serialization.XmlIgnoreAttribute()] bool productIdSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token) {
            object[] results = this.Invoke("GetClearingProductOrdersByProductId", new object[] {
                        productId,
                        productIdSpecified,
                        token});
            return ((CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS)(results[0]));
        }
        
        /// <remarks/>
        public void GetClearingProductOrdersByProductIdAsync(int productId, bool productIdSpecified, string token) {
            this.GetClearingProductOrdersByProductIdAsync(productId, productIdSpecified, token, null);
        }
        
        /// <remarks/>
        public void GetClearingProductOrdersByProductIdAsync(int productId, bool productIdSpecified, string token, object userState) {
            if ((this.GetClearingProductOrdersByProductIdOperationCompleted == null)) {
                this.GetClearingProductOrdersByProductIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClearingProductOrdersByProductIdOperationCompleted);
            }
            this.InvokeAsync("GetClearingProductOrdersByProductId", new object[] {
                        productId,
                        productIdSpecified,
                        token}, this.GetClearingProductOrdersByProductIdOperationCompleted, userState);
        }
        
        private void OnGetClearingProductOrdersByProductIdOperationCompleted(object arg) {
            if ((this.GetClearingProductOrdersByProductIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClearingProductOrdersByProductIdCompleted(this, new GetClearingProductOrdersByProductIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessRequestFullContents", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public MeshulamClearingApi ProcessRequestFullContents([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fullName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, double sum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool sumSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, int type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, int paymentsNum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentsNumSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string returnUrl) {
            object[] results = this.Invoke("ProcessRequestFullContents", new object[] {
                        fullName,
                        phone,
                        email,
                        sum,
                        sumSpecified,
                        description,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        userEmail,
                        userPassword,
                        returnUrl});
            return ((MeshulamClearingApi)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessRequestFullContentsAsync(string fullName, string phone, string email, double sum, bool sumSpecified, string description, int type, bool typeSpecified, int paymentsNum, bool paymentsNumSpecified, string userEmail, string userPassword, string returnUrl) {
            this.ProcessRequestFullContentsAsync(fullName, phone, email, sum, sumSpecified, description, type, typeSpecified, paymentsNum, paymentsNumSpecified, userEmail, userPassword, returnUrl, null);
        }
        
        /// <remarks/>
        public void ProcessRequestFullContentsAsync(string fullName, string phone, string email, double sum, bool sumSpecified, string description, int type, bool typeSpecified, int paymentsNum, bool paymentsNumSpecified, string userEmail, string userPassword, string returnUrl, object userState) {
            if ((this.ProcessRequestFullContentsOperationCompleted == null)) {
                this.ProcessRequestFullContentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessRequestFullContentsOperationCompleted);
            }
            this.InvokeAsync("ProcessRequestFullContents", new object[] {
                        fullName,
                        phone,
                        email,
                        sum,
                        sumSpecified,
                        description,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        userEmail,
                        userPassword,
                        returnUrl}, this.ProcessRequestFullContentsOperationCompleted, userState);
        }
        
        private void OnProcessRequestFullContentsOperationCompleted(object arg) {
            if ((this.ProcessRequestFullContentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessRequestFullContentsCompleted(this, new ProcessRequestFullContentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/ProcessRequestFullContentsREST", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public MeshulamClearingApi ProcessRequestFullContentsREST([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fullName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, double sum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool sumSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string description, int type, [System.Xml.Serialization.XmlIgnoreAttribute()] bool typeSpecified, int paymentsNum, [System.Xml.Serialization.XmlIgnoreAttribute()] bool paymentsNumSpecified, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userEmail, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userPassword, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string returnUrl) {
            object[] results = this.Invoke("ProcessRequestFullContentsREST", new object[] {
                        fullName,
                        phone,
                        email,
                        sum,
                        sumSpecified,
                        description,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        userEmail,
                        userPassword,
                        returnUrl});
            return ((MeshulamClearingApi)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessRequestFullContentsRESTAsync(string fullName, string phone, string email, double sum, bool sumSpecified, string description, int type, bool typeSpecified, int paymentsNum, bool paymentsNumSpecified, string userEmail, string userPassword, string returnUrl) {
            this.ProcessRequestFullContentsRESTAsync(fullName, phone, email, sum, sumSpecified, description, type, typeSpecified, paymentsNum, paymentsNumSpecified, userEmail, userPassword, returnUrl, null);
        }
        
        /// <remarks/>
        public void ProcessRequestFullContentsRESTAsync(string fullName, string phone, string email, double sum, bool sumSpecified, string description, int type, bool typeSpecified, int paymentsNum, bool paymentsNumSpecified, string userEmail, string userPassword, string returnUrl, object userState) {
            if ((this.ProcessRequestFullContentsRESTOperationCompleted == null)) {
                this.ProcessRequestFullContentsRESTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessRequestFullContentsRESTOperationCompleted);
            }
            this.InvokeAsync("ProcessRequestFullContentsREST", new object[] {
                        fullName,
                        phone,
                        email,
                        sum,
                        sumSpecified,
                        description,
                        type,
                        typeSpecified,
                        paymentsNum,
                        paymentsNumSpecified,
                        userEmail,
                        userPassword,
                        returnUrl}, this.ProcessRequestFullContentsRESTOperationCompleted, userState);
        }
        
        private void OnProcessRequestFullContentsRESTOperationCompleted(object arg) {
            if ((this.ProcessRequestFullContentsRESTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessRequestFullContentsRESTCompleted(this, new ProcessRequestFullContentsRESTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("Invoice/ApiService/UserRegistration", RequestNamespace="Invoice", ResponseNamespace="Invoice", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CommonObject UserRegistration([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] User user, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string token, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string isracardToken) {
            object[] results = this.Invoke("UserRegistration", new object[] {
                        user,
                        token,
                        isracardToken});
            return ((CommonObject)(results[0]));
        }
        
        /// <remarks/>
        public void UserRegistrationAsync(User user, string token, string isracardToken) {
            this.UserRegistrationAsync(user, token, isracardToken, null);
        }
        
        /// <remarks/>
        public void UserRegistrationAsync(User user, string token, string isracardToken, object userState) {
            if ((this.UserRegistrationOperationCompleted == null)) {
                this.UserRegistrationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserRegistrationOperationCompleted);
            }
            this.InvokeAsync("UserRegistration", new object[] {
                        user,
                        token,
                        isracardToken}, this.UserRegistrationOperationCompleted, userState);
        }
        
        private void OnUserRegistrationOperationCompleted(object arg) {
            if ((this.UserRegistrationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserRegistrationCompleted(this, new UserRegistrationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class User : CommonObject {
        
        private int accountingMethodField;
        
        private bool accountingMethodFieldSpecified;
        
        private bool apiActiveField;
        
        private bool apiActiveFieldSpecified;
        
        private string areaCodeField;
        
        private bool autoPaymentField;
        
        private bool autoPaymentFieldSpecified;
        
        private int bundleIDField;
        
        private bool bundleIDFieldSpecified;
        
        private int bundleQuotaField;
        
        private bool bundleQuotaFieldSpecified;
        
        private string businessTypeField;
        
        private string companyNameField;
        
        private string countryCodeField;
        
        private int creditCountField;
        
        private bool creditCountFieldSpecified;
        
        private int creditsField;
        
        private bool creditsFieldSpecified;
        
        private System.Nullable<System.DateTime> crmExpirationDateField;
        
        private bool crmExpirationDateFieldSpecified;
        
        private int crmLeadsCountField;
        
        private bool crmLeadsCountFieldSpecified;
        
        private int crmUsersCountField;
        
        private bool crmUsersCountFieldSpecified;
        
        private int defaultPaymentTypeField;
        
        private bool defaultPaymentTypeFieldSpecified;
        
        private System.Nullable<int> documentUsageField;
        
        private bool documentUsageFieldSpecified;
        
        private string emailField;
        
        private string emailAndPasswordEncodedField;
        
        private System.Nullable<System.DateTime> expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private string firstNameField;
        
        private int foreverClosePopupField;
        
        private bool foreverClosePopupFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private System.Nullable<int> integratedCompanyIdField;
        
        private bool integratedCompanyIdFieldSpecified;
        
        private bool isAdminField;
        
        private bool isAdminFieldSpecified;
        
        private bool isAutomaicInvoicesField;
        
        private bool isAutomaicInvoicesFieldSpecified;
        
        private bool isClearingUserField;
        
        private bool isClearingUserFieldSpecified;
        
        private bool isCrmAutoPaymentField;
        
        private bool isCrmAutoPaymentFieldSpecified;
        
        private System.Nullable<bool> isCrmExtraLeadsPaymentField;
        
        private bool isCrmExtraLeadsPaymentFieldSpecified;
        
        private bool isCrmSystemUsageField;
        
        private bool isCrmSystemUsageFieldSpecified;
        
        private int isDefaultDateDocField;
        
        private bool isDefaultDateDocFieldSpecified;
        
        private bool isDefaultPaymentButtonField;
        
        private bool isDefaultPaymentButtonFieldSpecified;
        
        private int isDefaultRoundAmountField;
        
        private bool isDefaultRoundAmountFieldSpecified;
        
        private int isDefaultSendPaymentButtonField;
        
        private bool isDefaultSendPaymentButtonFieldSpecified;
        
        private bool isFinishRegistrationField;
        
        private bool isFinishRegistrationFieldSpecified;
        
        private bool isHideClearingField;
        
        private bool isHideClearingFieldSpecified;
        
        private System.Nullable<bool> isInvomailAutoPaymentField;
        
        private bool isInvomailAutoPaymentFieldSpecified;
        
        private System.Nullable<bool> isInvomailLinkedField;
        
        private bool isInvomailLinkedFieldSpecified;
        
        private bool isOldInvoiceSyncField;
        
        private bool isOldInvoiceSyncFieldSpecified;
        
        private bool isSeparateVatIncomeReportField;
        
        private bool isSeparateVatIncomeReportFieldSpecified;
        
        private System.Nullable<bool> isStandingOrderUserField;
        
        private bool isStandingOrderUserFieldSpecified;
        
        private bool isSubOrganizationField;
        
        private bool isSubOrganizationFieldSpecified;
        
        private System.Nullable<bool> isTokenUserField;
        
        private bool isTokenUserFieldSpecified;
        
        private bool isWelcomePageVisitedField;
        
        private bool isWelcomePageVisitedFieldSpecified;
        
        private string lastNameField;
        
        private int limitField;
        
        private bool limitFieldSpecified;
        
        private string mobileField;
        
        private string mobileAcField;
        
        private int monthlyClosePopupField;
        
        private bool monthlyClosePopupFieldSpecified;
        
        private int monthlyClosePopupUnPressedField;
        
        private bool monthlyClosePopupUnPressedFieldSpecified;
        
        private int monthlyDocUsageField;
        
        private bool monthlyDocUsageFieldSpecified;
        
        private int occupationTypeIDField;
        
        private bool occupationTypeIDFieldSpecified;
        
        private int oldInvoiceIDField;
        
        private bool oldInvoiceIDFieldSpecified;
        
        private System.Nullable<bool> org2SignActiveField;
        
        private bool org2SignActiveFieldSpecified;
        
        private System.Nullable<int> org2SignBundleIdField;
        
        private bool org2SignBundleIdFieldSpecified;
        
        private System.Nullable<System.DateTime> org2SignExpirationDateField;
        
        private bool org2SignExpirationDateFieldSpecified;
        
        private string org2SignPasswordField;
        
        private string org2SignUsernameField;
        
        private string organizationCurrencyField;
        
        private int organizationIDField;
        
        private bool organizationIDFieldSpecified;
        
        private string organizationNameField;
        
        private string organizationUniqueIdField;
        
        private string phoneField;
        
        private System.Nullable<System.DateTime> registrationDateField;
        
        private bool registrationDateFieldSpecified;
        
        private User rootOrganizationField;
        
        private int rootOrganizationIdField;
        
        private bool rootOrganizationIdFieldSpecified;
        
        private int sMSCodeField;
        
        private bool sMSCodeFieldSpecified;
        
        private System.Nullable<System.DateTime> sOExpirationDateField;
        
        private bool sOExpirationDateFieldSpecified;
        
        private string shortCreatedDateField;
        
        private string shortCrmExpirationDateField;
        
        private string shortExpirationDateField;
        
        private string shortOrg2SignExpirationDateField;
        
        private bool showOldInvoiceLinkField;
        
        private bool showOldInvoiceLinkFieldSpecified;
        
        private double taxRateField;
        
        private bool taxRateFieldSpecified;
        
        private System.Nullable<System.DateTime> tokensExpirationDateField;
        
        private bool tokensExpirationDateFieldSpecified;
        
        private bool trialPeriodField;
        
        private bool trialPeriodFieldSpecified;
        
        private bool ucan2ActiveField;
        
        private bool ucan2ActiveFieldSpecified;
        
        private int userLanguageField;
        
        private bool userLanguageFieldSpecified;
        
        private string userPasswordField;
        
        private System.Nullable<System.DateTime> viewDateField;
        
        private bool viewDateFieldSpecified;
        
        /// <remarks/>
        public int AccountingMethod {
            get {
                return this.accountingMethodField;
            }
            set {
                this.accountingMethodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AccountingMethodSpecified {
            get {
                return this.accountingMethodFieldSpecified;
            }
            set {
                this.accountingMethodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ApiActive {
            get {
                return this.apiActiveField;
            }
            set {
                this.apiActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApiActiveSpecified {
            get {
                return this.apiActiveFieldSpecified;
            }
            set {
                this.apiActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AreaCode {
            get {
                return this.areaCodeField;
            }
            set {
                this.areaCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool AutoPayment {
            get {
                return this.autoPaymentField;
            }
            set {
                this.autoPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AutoPaymentSpecified {
            get {
                return this.autoPaymentFieldSpecified;
            }
            set {
                this.autoPaymentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int BundleID {
            get {
                return this.bundleIDField;
            }
            set {
                this.bundleIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BundleIDSpecified {
            get {
                return this.bundleIDFieldSpecified;
            }
            set {
                this.bundleIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int BundleQuota {
            get {
                return this.bundleQuotaField;
            }
            set {
                this.bundleQuotaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BundleQuotaSpecified {
            get {
                return this.bundleQuotaFieldSpecified;
            }
            set {
                this.bundleQuotaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BusinessType {
            get {
                return this.businessTypeField;
            }
            set {
                this.businessTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CountryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        public int CreditCount {
            get {
                return this.creditCountField;
            }
            set {
                this.creditCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCountSpecified {
            get {
                return this.creditCountFieldSpecified;
            }
            set {
                this.creditCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Credits {
            get {
                return this.creditsField;
            }
            set {
                this.creditsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditsSpecified {
            get {
                return this.creditsFieldSpecified;
            }
            set {
                this.creditsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CrmExpirationDate {
            get {
                return this.crmExpirationDateField;
            }
            set {
                this.crmExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CrmExpirationDateSpecified {
            get {
                return this.crmExpirationDateFieldSpecified;
            }
            set {
                this.crmExpirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CrmLeadsCount {
            get {
                return this.crmLeadsCountField;
            }
            set {
                this.crmLeadsCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CrmLeadsCountSpecified {
            get {
                return this.crmLeadsCountFieldSpecified;
            }
            set {
                this.crmLeadsCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CrmUsersCount {
            get {
                return this.crmUsersCountField;
            }
            set {
                this.crmUsersCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CrmUsersCountSpecified {
            get {
                return this.crmUsersCountFieldSpecified;
            }
            set {
                this.crmUsersCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DefaultPaymentType {
            get {
                return this.defaultPaymentTypeField;
            }
            set {
                this.defaultPaymentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DefaultPaymentTypeSpecified {
            get {
                return this.defaultPaymentTypeFieldSpecified;
            }
            set {
                this.defaultPaymentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DocumentUsage {
            get {
                return this.documentUsageField;
            }
            set {
                this.documentUsageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentUsageSpecified {
            get {
                return this.documentUsageFieldSpecified;
            }
            set {
                this.documentUsageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailAndPasswordEncoded {
            get {
                return this.emailAndPasswordEncodedField;
            }
            set {
                this.emailAndPasswordEncodedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public int ForeverClosePopup {
            get {
                return this.foreverClosePopupField;
            }
            set {
                this.foreverClosePopupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForeverClosePopupSpecified {
            get {
                return this.foreverClosePopupFieldSpecified;
            }
            set {
                this.foreverClosePopupFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IntegratedCompanyId {
            get {
                return this.integratedCompanyIdField;
            }
            set {
                this.integratedCompanyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IntegratedCompanyIdSpecified {
            get {
                return this.integratedCompanyIdFieldSpecified;
            }
            set {
                this.integratedCompanyIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsAdmin {
            get {
                return this.isAdminField;
            }
            set {
                this.isAdminField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAdminSpecified {
            get {
                return this.isAdminFieldSpecified;
            }
            set {
                this.isAdminFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsAutomaicInvoices {
            get {
                return this.isAutomaicInvoicesField;
            }
            set {
                this.isAutomaicInvoicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAutomaicInvoicesSpecified {
            get {
                return this.isAutomaicInvoicesFieldSpecified;
            }
            set {
                this.isAutomaicInvoicesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsClearingUser {
            get {
                return this.isClearingUserField;
            }
            set {
                this.isClearingUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsClearingUserSpecified {
            get {
                return this.isClearingUserFieldSpecified;
            }
            set {
                this.isClearingUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsCrmAutoPayment {
            get {
                return this.isCrmAutoPaymentField;
            }
            set {
                this.isCrmAutoPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCrmAutoPaymentSpecified {
            get {
                return this.isCrmAutoPaymentFieldSpecified;
            }
            set {
                this.isCrmAutoPaymentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsCrmExtraLeadsPayment {
            get {
                return this.isCrmExtraLeadsPaymentField;
            }
            set {
                this.isCrmExtraLeadsPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCrmExtraLeadsPaymentSpecified {
            get {
                return this.isCrmExtraLeadsPaymentFieldSpecified;
            }
            set {
                this.isCrmExtraLeadsPaymentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsCrmSystemUsage {
            get {
                return this.isCrmSystemUsageField;
            }
            set {
                this.isCrmSystemUsageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCrmSystemUsageSpecified {
            get {
                return this.isCrmSystemUsageFieldSpecified;
            }
            set {
                this.isCrmSystemUsageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int IsDefaultDateDoc {
            get {
                return this.isDefaultDateDocField;
            }
            set {
                this.isDefaultDateDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDefaultDateDocSpecified {
            get {
                return this.isDefaultDateDocFieldSpecified;
            }
            set {
                this.isDefaultDateDocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsDefaultPaymentButton {
            get {
                return this.isDefaultPaymentButtonField;
            }
            set {
                this.isDefaultPaymentButtonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDefaultPaymentButtonSpecified {
            get {
                return this.isDefaultPaymentButtonFieldSpecified;
            }
            set {
                this.isDefaultPaymentButtonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int IsDefaultRoundAmount {
            get {
                return this.isDefaultRoundAmountField;
            }
            set {
                this.isDefaultRoundAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDefaultRoundAmountSpecified {
            get {
                return this.isDefaultRoundAmountFieldSpecified;
            }
            set {
                this.isDefaultRoundAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int IsDefaultSendPaymentButton {
            get {
                return this.isDefaultSendPaymentButtonField;
            }
            set {
                this.isDefaultSendPaymentButtonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDefaultSendPaymentButtonSpecified {
            get {
                return this.isDefaultSendPaymentButtonFieldSpecified;
            }
            set {
                this.isDefaultSendPaymentButtonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsFinishRegistration {
            get {
                return this.isFinishRegistrationField;
            }
            set {
                this.isFinishRegistrationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFinishRegistrationSpecified {
            get {
                return this.isFinishRegistrationFieldSpecified;
            }
            set {
                this.isFinishRegistrationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsHideClearing {
            get {
                return this.isHideClearingField;
            }
            set {
                this.isHideClearingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsHideClearingSpecified {
            get {
                return this.isHideClearingFieldSpecified;
            }
            set {
                this.isHideClearingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsInvomailAutoPayment {
            get {
                return this.isInvomailAutoPaymentField;
            }
            set {
                this.isInvomailAutoPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsInvomailAutoPaymentSpecified {
            get {
                return this.isInvomailAutoPaymentFieldSpecified;
            }
            set {
                this.isInvomailAutoPaymentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsInvomailLinked {
            get {
                return this.isInvomailLinkedField;
            }
            set {
                this.isInvomailLinkedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsInvomailLinkedSpecified {
            get {
                return this.isInvomailLinkedFieldSpecified;
            }
            set {
                this.isInvomailLinkedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsOldInvoiceSync {
            get {
                return this.isOldInvoiceSyncField;
            }
            set {
                this.isOldInvoiceSyncField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsOldInvoiceSyncSpecified {
            get {
                return this.isOldInvoiceSyncFieldSpecified;
            }
            set {
                this.isOldInvoiceSyncFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsSeparateVatIncomeReport {
            get {
                return this.isSeparateVatIncomeReportField;
            }
            set {
                this.isSeparateVatIncomeReportField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSeparateVatIncomeReportSpecified {
            get {
                return this.isSeparateVatIncomeReportFieldSpecified;
            }
            set {
                this.isSeparateVatIncomeReportFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsStandingOrderUser {
            get {
                return this.isStandingOrderUserField;
            }
            set {
                this.isStandingOrderUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsStandingOrderUserSpecified {
            get {
                return this.isStandingOrderUserFieldSpecified;
            }
            set {
                this.isStandingOrderUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsSubOrganization {
            get {
                return this.isSubOrganizationField;
            }
            set {
                this.isSubOrganizationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSubOrganizationSpecified {
            get {
                return this.isSubOrganizationFieldSpecified;
            }
            set {
                this.isSubOrganizationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsTokenUser {
            get {
                return this.isTokenUserField;
            }
            set {
                this.isTokenUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTokenUserSpecified {
            get {
                return this.isTokenUserFieldSpecified;
            }
            set {
                this.isTokenUserFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsWelcomePageVisited {
            get {
                return this.isWelcomePageVisitedField;
            }
            set {
                this.isWelcomePageVisitedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsWelcomePageVisitedSpecified {
            get {
                return this.isWelcomePageVisitedFieldSpecified;
            }
            set {
                this.isWelcomePageVisitedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public int Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimitSpecified {
            get {
                return this.limitFieldSpecified;
            }
            set {
                this.limitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MobileAc {
            get {
                return this.mobileAcField;
            }
            set {
                this.mobileAcField = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyClosePopup {
            get {
                return this.monthlyClosePopupField;
            }
            set {
                this.monthlyClosePopupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MonthlyClosePopupSpecified {
            get {
                return this.monthlyClosePopupFieldSpecified;
            }
            set {
                this.monthlyClosePopupFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyClosePopupUnPressed {
            get {
                return this.monthlyClosePopupUnPressedField;
            }
            set {
                this.monthlyClosePopupUnPressedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MonthlyClosePopupUnPressedSpecified {
            get {
                return this.monthlyClosePopupUnPressedFieldSpecified;
            }
            set {
                this.monthlyClosePopupUnPressedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MonthlyDocUsage {
            get {
                return this.monthlyDocUsageField;
            }
            set {
                this.monthlyDocUsageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MonthlyDocUsageSpecified {
            get {
                return this.monthlyDocUsageFieldSpecified;
            }
            set {
                this.monthlyDocUsageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OccupationTypeID {
            get {
                return this.occupationTypeIDField;
            }
            set {
                this.occupationTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OccupationTypeIDSpecified {
            get {
                return this.occupationTypeIDFieldSpecified;
            }
            set {
                this.occupationTypeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OldInvoiceID {
            get {
                return this.oldInvoiceIDField;
            }
            set {
                this.oldInvoiceIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OldInvoiceIDSpecified {
            get {
                return this.oldInvoiceIDFieldSpecified;
            }
            set {
                this.oldInvoiceIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Org2SignActive {
            get {
                return this.org2SignActiveField;
            }
            set {
                this.org2SignActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Org2SignActiveSpecified {
            get {
                return this.org2SignActiveFieldSpecified;
            }
            set {
                this.org2SignActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Org2SignBundleId {
            get {
                return this.org2SignBundleIdField;
            }
            set {
                this.org2SignBundleIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Org2SignBundleIdSpecified {
            get {
                return this.org2SignBundleIdFieldSpecified;
            }
            set {
                this.org2SignBundleIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Org2SignExpirationDate {
            get {
                return this.org2SignExpirationDateField;
            }
            set {
                this.org2SignExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Org2SignExpirationDateSpecified {
            get {
                return this.org2SignExpirationDateFieldSpecified;
            }
            set {
                this.org2SignExpirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Org2SignPassword {
            get {
                return this.org2SignPasswordField;
            }
            set {
                this.org2SignPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Org2SignUsername {
            get {
                return this.org2SignUsernameField;
            }
            set {
                this.org2SignUsernameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OrganizationCurrency {
            get {
                return this.organizationCurrencyField;
            }
            set {
                this.organizationCurrencyField = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationID {
            get {
                return this.organizationIDField;
            }
            set {
                this.organizationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationIDSpecified {
            get {
                return this.organizationIDFieldSpecified;
            }
            set {
                this.organizationIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OrganizationName {
            get {
                return this.organizationNameField;
            }
            set {
                this.organizationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OrganizationUniqueId {
            get {
                return this.organizationUniqueIdField;
            }
            set {
                this.organizationUniqueIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RegistrationDate {
            get {
                return this.registrationDateField;
            }
            set {
                this.registrationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RegistrationDateSpecified {
            get {
                return this.registrationDateFieldSpecified;
            }
            set {
                this.registrationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public User RootOrganization {
            get {
                return this.rootOrganizationField;
            }
            set {
                this.rootOrganizationField = value;
            }
        }
        
        /// <remarks/>
        public int RootOrganizationId {
            get {
                return this.rootOrganizationIdField;
            }
            set {
                this.rootOrganizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RootOrganizationIdSpecified {
            get {
                return this.rootOrganizationIdFieldSpecified;
            }
            set {
                this.rootOrganizationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SMSCode {
            get {
                return this.sMSCodeField;
            }
            set {
                this.sMSCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SMSCodeSpecified {
            get {
                return this.sMSCodeFieldSpecified;
            }
            set {
                this.sMSCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SOExpirationDate {
            get {
                return this.sOExpirationDateField;
            }
            set {
                this.sOExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SOExpirationDateSpecified {
            get {
                return this.sOExpirationDateFieldSpecified;
            }
            set {
                this.sOExpirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShortCreatedDate {
            get {
                return this.shortCreatedDateField;
            }
            set {
                this.shortCreatedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShortCrmExpirationDate {
            get {
                return this.shortCrmExpirationDateField;
            }
            set {
                this.shortCrmExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShortExpirationDate {
            get {
                return this.shortExpirationDateField;
            }
            set {
                this.shortExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShortOrg2SignExpirationDate {
            get {
                return this.shortOrg2SignExpirationDateField;
            }
            set {
                this.shortOrg2SignExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        public bool ShowOldInvoiceLink {
            get {
                return this.showOldInvoiceLinkField;
            }
            set {
                this.showOldInvoiceLinkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowOldInvoiceLinkSpecified {
            get {
                return this.showOldInvoiceLinkFieldSpecified;
            }
            set {
                this.showOldInvoiceLinkFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double TaxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxRateSpecified {
            get {
                return this.taxRateFieldSpecified;
            }
            set {
                this.taxRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TokensExpirationDate {
            get {
                return this.tokensExpirationDateField;
            }
            set {
                this.tokensExpirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TokensExpirationDateSpecified {
            get {
                return this.tokensExpirationDateFieldSpecified;
            }
            set {
                this.tokensExpirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool TrialPeriod {
            get {
                return this.trialPeriodField;
            }
            set {
                this.trialPeriodField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TrialPeriodSpecified {
            get {
                return this.trialPeriodFieldSpecified;
            }
            set {
                this.trialPeriodFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool Ucan2Active {
            get {
                return this.ucan2ActiveField;
            }
            set {
                this.ucan2ActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Ucan2ActiveSpecified {
            get {
                return this.ucan2ActiveFieldSpecified;
            }
            set {
                this.ucan2ActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UserLanguage {
            get {
                return this.userLanguageField;
            }
            set {
                this.userLanguageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserLanguageSpecified {
            get {
                return this.userLanguageFieldSpecified;
            }
            set {
                this.userLanguageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ViewDate {
            get {
                return this.viewDateField;
            }
            set {
                this.viewDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ViewDateSpecified {
            get {
                return this.viewDateFieldSpecified;
            }
            set {
                this.viewDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MeshulamClearingApi))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClearingProductsOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ProductCouponCode))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClearingProductCatalogItemsMapping))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClearingProducts))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CommonCollectionOfArrayOfClearingProductsJHiVxprS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OrganizationTokenDetails))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClearingLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ApiClearingRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClientsStandingOrder))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClientsStandingOrderLog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClearingAccount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CommonCollectionOfArrayOfCatalogItemJHiVxprS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CatalogItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CommonCollectionOfArrayOfCustomerJHiVxprS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Customer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Currency))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CommonCollectionOfArrayOfCurrencyJHiVxprS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreditCompany))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CommonCollectionOfArrayOfDocumentJHiVxprS))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocumentsRequest))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Sms))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Payment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenerelCustomer))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BankAccount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AssociatedEmail))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Document))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Branch))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PrintOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Discount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocumentItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(DocumentCsv))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClientCsv))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(User))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CommonObject {
        
        private CommonError[] errorsField;
        
        private CommonInfo[] infoField;
        
        private ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] openInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CommonError[] Errors {
            get {
                return this.errorsField;
            }
            set {
                this.errorsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CommonInfo[] Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] OpenInfo {
            get {
                return this.openInfoField;
            }
            set {
                this.openInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CommonError {
        
        private string errorField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string paramtersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Paramters {
            get {
                return this.paramtersField;
            }
            set {
                this.paramtersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class AccountPrintOptions {
        
        private int orgIdField;
        
        private bool orgIdFieldSpecified;
        
        private bool isAddressField;
        
        private bool isAddressFieldSpecified;
        
        private bool isEmailField;
        
        private bool isEmailFieldSpecified;
        
        private bool isFaxField;
        
        private bool isFaxFieldSpecified;
        
        private bool isFileConsolidationNumberField;
        
        private bool isFileConsolidationNumberFieldSpecified;
        
        private bool isMobileField;
        
        private bool isMobileFieldSpecified;
        
        private bool isPhoneField;
        
        private bool isPhoneFieldSpecified;
        
        private bool isSubtitleField;
        
        private bool isSubtitleFieldSpecified;
        
        private bool isWebsiteField;
        
        private bool isWebsiteFieldSpecified;
        
        private bool isZipCodeField;
        
        private bool isZipCodeFieldSpecified;
        
        /// <remarks/>
        public int OrgId {
            get {
                return this.orgIdField;
            }
            set {
                this.orgIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrgIdSpecified {
            get {
                return this.orgIdFieldSpecified;
            }
            set {
                this.orgIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isAddress {
            get {
                return this.isAddressField;
            }
            set {
                this.isAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isAddressSpecified {
            get {
                return this.isAddressFieldSpecified;
            }
            set {
                this.isAddressFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isEmail {
            get {
                return this.isEmailField;
            }
            set {
                this.isEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isEmailSpecified {
            get {
                return this.isEmailFieldSpecified;
            }
            set {
                this.isEmailFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isFax {
            get {
                return this.isFaxField;
            }
            set {
                this.isFaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isFaxSpecified {
            get {
                return this.isFaxFieldSpecified;
            }
            set {
                this.isFaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isFileConsolidationNumber {
            get {
                return this.isFileConsolidationNumberField;
            }
            set {
                this.isFileConsolidationNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isFileConsolidationNumberSpecified {
            get {
                return this.isFileConsolidationNumberFieldSpecified;
            }
            set {
                this.isFileConsolidationNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isMobile {
            get {
                return this.isMobileField;
            }
            set {
                this.isMobileField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isMobileSpecified {
            get {
                return this.isMobileFieldSpecified;
            }
            set {
                this.isMobileFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isPhone {
            get {
                return this.isPhoneField;
            }
            set {
                this.isPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isPhoneSpecified {
            get {
                return this.isPhoneFieldSpecified;
            }
            set {
                this.isPhoneFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isSubtitle {
            get {
                return this.isSubtitleField;
            }
            set {
                this.isSubtitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isSubtitleSpecified {
            get {
                return this.isSubtitleFieldSpecified;
            }
            set {
                this.isSubtitleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isWebsite {
            get {
                return this.isWebsiteField;
            }
            set {
                this.isWebsiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isWebsiteSpecified {
            get {
                return this.isWebsiteFieldSpecified;
            }
            set {
                this.isWebsiteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool isZipCode {
            get {
                return this.isZipCodeField;
            }
            set {
                this.isZipCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool isZipCodeSpecified {
            get {
                return this.isZipCodeFieldSpecified;
            }
            set {
                this.isZipCodeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CommonInfo {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string infoField;
        
        private string paramtersField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Paramters {
            get {
                return this.paramtersField;
            }
            set {
                this.paramtersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
    public partial class ArrayOfKeyValueOfstringstringKeyValueOfstringstring {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class MeshulamClearingApi : CommonObject {
        
        private string clearingRedirectUrlField;
        
        private string descriptionField;
        
        private string emailField;
        
        private string fullNameField;
        
        private int paymentsNumField;
        
        private bool paymentsNumFieldSpecified;
        
        private string phoneField;
        
        private string returnUrlField;
        
        private double sumField;
        
        private bool sumFieldSpecified;
        
        private int typeField;
        
        private bool typeFieldSpecified;
        
        private string userEmailField;
        
        private string userPasswordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClearingRedirectUrl {
            get {
                return this.clearingRedirectUrlField;
            }
            set {
                this.clearingRedirectUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentsNum {
            get {
                return this.paymentsNumField;
            }
            set {
                this.paymentsNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentsNumSpecified {
            get {
                return this.paymentsNumFieldSpecified;
            }
            set {
                this.paymentsNumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReturnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public double Sum {
            get {
                return this.sumField;
            }
            set {
                this.sumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SumSpecified {
            get {
                return this.sumFieldSpecified;
            }
            set {
                this.sumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserEmail {
            get {
                return this.userEmailField;
            }
            set {
                this.userEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserPassword {
            get {
                return this.userPasswordField;
            }
            set {
                this.userPasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ClearingProductsOrder : CommonObject {
        
        private double couponValueField;
        
        private bool couponValueFieldSpecified;
        
        private string currencyField;
        
        private string customerCCFourDigitsField;
        
        private string customerCellField;
        
        private string customerCityField;
        
        private string customerEmailField;
        
        private string customerMailBoxField;
        
        private string customerNameField;
        
        private string customerStreetField;
        
        private string customerStreetNumberField;
        
        private string customerZipField;
        
        private System.DateTime dateCreatedField;
        
        private bool dateCreatedFieldSpecified;
        
        private double deliveryFeeField;
        
        private bool deliveryFeeFieldSpecified;
        
        private int deliveryTypeField;
        
        private bool deliveryTypeFieldSpecified;
        
        private double discountField;
        
        private bool discountFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string orderConfirmationNumberField;
        
        private int orgIdField;
        
        private bool orgIdFieldSpecified;
        
        private int paymentsNumberField;
        
        private bool paymentsNumberFieldSpecified;
        
        private int productIdField;
        
        private bool productIdFieldSpecified;
        
        private string productNameField;
        
        private double productPriceField;
        
        private bool productPriceFieldSpecified;
        
        private double quantityField;
        
        private bool quantityFieldSpecified;
        
        private double totalPriceField;
        
        private bool totalPriceFieldSpecified;
        
        /// <remarks/>
        public double CouponValue {
            get {
                return this.couponValueField;
            }
            set {
                this.couponValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CouponValueSpecified {
            get {
                return this.couponValueFieldSpecified;
            }
            set {
                this.couponValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerCCFourDigits {
            get {
                return this.customerCCFourDigitsField;
            }
            set {
                this.customerCCFourDigitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerCell {
            get {
                return this.customerCellField;
            }
            set {
                this.customerCellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerCity {
            get {
                return this.customerCityField;
            }
            set {
                this.customerCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerEmail {
            get {
                return this.customerEmailField;
            }
            set {
                this.customerEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerMailBox {
            get {
                return this.customerMailBoxField;
            }
            set {
                this.customerMailBoxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerStreet {
            get {
                return this.customerStreetField;
            }
            set {
                this.customerStreetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerStreetNumber {
            get {
                return this.customerStreetNumberField;
            }
            set {
                this.customerStreetNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerZip {
            get {
                return this.customerZipField;
            }
            set {
                this.customerZipField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateCreatedSpecified {
            get {
                return this.dateCreatedFieldSpecified;
            }
            set {
                this.dateCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double DeliveryFee {
            get {
                return this.deliveryFeeField;
            }
            set {
                this.deliveryFeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryFeeSpecified {
            get {
                return this.deliveryFeeFieldSpecified;
            }
            set {
                this.deliveryFeeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DeliveryType {
            get {
                return this.deliveryTypeField;
            }
            set {
                this.deliveryTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryTypeSpecified {
            get {
                return this.deliveryTypeFieldSpecified;
            }
            set {
                this.deliveryTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountSpecified {
            get {
                return this.discountFieldSpecified;
            }
            set {
                this.discountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OrderConfirmationNumber {
            get {
                return this.orderConfirmationNumberField;
            }
            set {
                this.orderConfirmationNumberField = value;
            }
        }
        
        /// <remarks/>
        public int OrgId {
            get {
                return this.orgIdField;
            }
            set {
                this.orgIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrgIdSpecified {
            get {
                return this.orgIdFieldSpecified;
            }
            set {
                this.orgIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PaymentsNumber {
            get {
                return this.paymentsNumberField;
            }
            set {
                this.paymentsNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentsNumberSpecified {
            get {
                return this.paymentsNumberFieldSpecified;
            }
            set {
                this.paymentsNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductIdSpecified {
            get {
                return this.productIdFieldSpecified;
            }
            set {
                this.productIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public double ProductPrice {
            get {
                return this.productPriceField;
            }
            set {
                this.productPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductPriceSpecified {
            get {
                return this.productPriceFieldSpecified;
            }
            set {
                this.productPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double TotalPrice {
            get {
                return this.totalPriceField;
            }
            set {
                this.totalPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalPriceSpecified {
            get {
                return this.totalPriceFieldSpecified;
            }
            set {
                this.totalPriceFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS : CommonObject {
        
        private ClearingProductsOrder[] responseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ClearingProductsOrder[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ProductCouponCode : CommonObject {
        
        private double couponValueField;
        
        private bool couponValueFieldSpecified;
        
        private string descriptionField;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int maxUsageField;
        
        private bool maxUsageFieldSpecified;
        
        private string nameField;
        
        private int productIdField;
        
        private bool productIdFieldSpecified;
        
        /// <remarks/>
        public double CouponValue {
            get {
                return this.couponValueField;
            }
            set {
                this.couponValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CouponValueSpecified {
            get {
                return this.couponValueFieldSpecified;
            }
            set {
                this.couponValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MaxUsage {
            get {
                return this.maxUsageField;
            }
            set {
                this.maxUsageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxUsageSpecified {
            get {
                return this.maxUsageFieldSpecified;
            }
            set {
                this.maxUsageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductIdSpecified {
            get {
                return this.productIdFieldSpecified;
            }
            set {
                this.productIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ClearingProductCatalogItemsMapping : CommonObject {
        
        private CatalogItem catalogItemField;
        
        private int catalogItemIdField;
        
        private bool catalogItemIdFieldSpecified;
        
        private int clearingProductIdField;
        
        private bool clearingProductIdFieldSpecified;
        
        private System.Nullable<System.DateTime> dateCreatedField;
        
        private bool dateCreatedFieldSpecified;
        
        private double discountField;
        
        private bool discountFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string itemNameField;
        
        private double itemPriceField;
        
        private bool itemPriceFieldSpecified;
        
        private double quantityField;
        
        private bool quantityFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public CatalogItem CatalogItem {
            get {
                return this.catalogItemField;
            }
            set {
                this.catalogItemField = value;
            }
        }
        
        /// <remarks/>
        public int CatalogItemId {
            get {
                return this.catalogItemIdField;
            }
            set {
                this.catalogItemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CatalogItemIdSpecified {
            get {
                return this.catalogItemIdFieldSpecified;
            }
            set {
                this.catalogItemIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ClearingProductId {
            get {
                return this.clearingProductIdField;
            }
            set {
                this.clearingProductIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingProductIdSpecified {
            get {
                return this.clearingProductIdFieldSpecified;
            }
            set {
                this.clearingProductIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateCreatedSpecified {
            get {
                return this.dateCreatedFieldSpecified;
            }
            set {
                this.dateCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountSpecified {
            get {
                return this.discountFieldSpecified;
            }
            set {
                this.discountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemName {
            get {
                return this.itemNameField;
            }
            set {
                this.itemNameField = value;
            }
        }
        
        /// <remarks/>
        public double ItemPrice {
            get {
                return this.itemPriceField;
            }
            set {
                this.itemPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemPriceSpecified {
            get {
                return this.itemPriceFieldSpecified;
            }
            set {
                this.itemPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CatalogItem : CommonObject {
        
        private string codeField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isNewField;
        
        private bool isNewFieldSpecified;
        
        private string nameField;
        
        private double priceField;
        
        private bool priceFieldSpecified;
        
        private double priceAfterTaxField;
        
        private bool priceAfterTaxFieldSpecified;
        
        private int userIdField;
        
        private bool userIdFieldSpecified;
        
        private double vatPercentageField;
        
        private bool vatPercentageFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsNew {
            get {
                return this.isNewField;
            }
            set {
                this.isNewField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNewSpecified {
            get {
                return this.isNewFieldSpecified;
            }
            set {
                this.isNewFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public double Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriceSpecified {
            get {
                return this.priceFieldSpecified;
            }
            set {
                this.priceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double PriceAfterTax {
            get {
                return this.priceAfterTaxField;
            }
            set {
                this.priceAfterTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriceAfterTaxSpecified {
            get {
                return this.priceAfterTaxFieldSpecified;
            }
            set {
                this.priceAfterTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserIdSpecified {
            get {
                return this.userIdFieldSpecified;
            }
            set {
                this.userIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double VatPercentage {
            get {
                return this.vatPercentageField;
            }
            set {
                this.vatPercentageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VatPercentageSpecified {
            get {
                return this.vatPercentageFieldSpecified;
            }
            set {
                this.vatPercentageFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ClearingProducts : CommonObject {
        
        private bool activeField;
        
        private bool activeFieldSpecified;
        
        private bool allowPaymentsField;
        
        private bool allowPaymentsFieldSpecified;
        
        private string analyticsClearingPageField;
        
        private string analyticsThankUPageField;
        
        private ClearingProductCatalogItemsMapping[] catalogItemsField;
        
        private int clearingCompanyField;
        
        private bool clearingCompanyFieldSpecified;
        
        private ProductCouponCode[] couponCodesField;
        
        private string currencyField;
        
        private double deliveryFeeField;
        
        private bool deliveryFeeFieldSpecified;
        
        private int deliveryTypeField;
        
        private bool deliveryTypeFieldSpecified;
        
        private string descriptionField;
        
        private double discountField;
        
        private bool discountFieldSpecified;
        
        private System.DateTime discountEndDateField;
        
        private bool discountEndDateFieldSpecified;
        
        private System.DateTime discountStartDateField;
        
        private bool discountStartDateFieldSpecified;
        
        private bool dynamicPriceField;
        
        private bool dynamicPriceFieldSpecified;
        
        private bool hasCouponsField;
        
        private bool hasCouponsFieldSpecified;
        
        private string headLine1Field;
        
        private string headLine2Field;
        
        private string headLine3Field;
        
        private string headLine4Field;
        
        private string headlineNewDesignField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string imageUrlField;
        
        private System.Nullable<bool> isInsertPurchaseAsClientField;
        
        private bool isInsertPurchaseAsClientFieldSpecified;
        
        private bool isOrganizationValidNotExpiredField;
        
        private bool isOrganizationValidNotExpiredFieldSpecified;
        
        private bool isStandingOrderField;
        
        private bool isStandingOrderFieldSpecified;
        
        private System.Nullable<int> mailingListIdField;
        
        private bool mailingListIdFieldSpecified;
        
        private int maxPaymentsField;
        
        private bool maxPaymentsFieldSpecified;
        
        private bool multipleItemsField;
        
        private bool multipleItemsFieldSpecified;
        
        private string nameField;
        
        private int organizationBusinessTypeField;
        
        private bool organizationBusinessTypeFieldSpecified;
        
        private int organizationIdField;
        
        private bool organizationIdFieldSpecified;
        
        private string organizationNameField;
        
        private string organizationNameEngField;
        
        private string pageUrlField;
        
        private double priceField;
        
        private bool priceFieldSpecified;
        
        private string regulationsLinkField;
        
        private System.Nullable<bool> returnParamsInUrlField;
        
        private bool returnParamsInUrlFieldSpecified;
        
        private string returnUrlField;
        
        private ClearingProductCatalogItemsMapping selectedCatalogItemField;
        
        private ProductCouponCode selectedCouponField;
        
        private string shortDescription1Field;
        
        private string shortDescription2Field;
        
        private string shortDescription3Field;
        
        private string shortDescription4Field;
        
        private bool showDeliveryField;
        
        private bool showDeliveryFieldSpecified;
        
        private bool showDeliveryByDefaultField;
        
        private bool showDeliveryByDefaultFieldSpecified;
        
        private bool showLogoField;
        
        private bool showLogoFieldSpecified;
        
        private bool showProductImageField;
        
        private bool showProductImageFieldSpecified;
        
        private string standingOrderDurationsField;
        
        private int templateIdField;
        
        private bool templateIdFieldSpecified;
        
        private int usageField;
        
        private bool usageFieldSpecified;
        
        private string youtubeLinkField;
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveSpecified {
            get {
                return this.activeFieldSpecified;
            }
            set {
                this.activeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool AllowPayments {
            get {
                return this.allowPaymentsField;
            }
            set {
                this.allowPaymentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowPaymentsSpecified {
            get {
                return this.allowPaymentsFieldSpecified;
            }
            set {
                this.allowPaymentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AnalyticsClearingPage {
            get {
                return this.analyticsClearingPageField;
            }
            set {
                this.analyticsClearingPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AnalyticsThankUPage {
            get {
                return this.analyticsThankUPageField;
            }
            set {
                this.analyticsThankUPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ClearingProductCatalogItemsMapping[] CatalogItems {
            get {
                return this.catalogItemsField;
            }
            set {
                this.catalogItemsField = value;
            }
        }
        
        /// <remarks/>
        public int ClearingCompany {
            get {
                return this.clearingCompanyField;
            }
            set {
                this.clearingCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingCompanySpecified {
            get {
                return this.clearingCompanyFieldSpecified;
            }
            set {
                this.clearingCompanyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ProductCouponCode[] CouponCodes {
            get {
                return this.couponCodesField;
            }
            set {
                this.couponCodesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public double DeliveryFee {
            get {
                return this.deliveryFeeField;
            }
            set {
                this.deliveryFeeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryFeeSpecified {
            get {
                return this.deliveryFeeFieldSpecified;
            }
            set {
                this.deliveryFeeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DeliveryType {
            get {
                return this.deliveryTypeField;
            }
            set {
                this.deliveryTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeliveryTypeSpecified {
            get {
                return this.deliveryTypeFieldSpecified;
            }
            set {
                this.deliveryTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public double Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountSpecified {
            get {
                return this.discountFieldSpecified;
            }
            set {
                this.discountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DiscountEndDate {
            get {
                return this.discountEndDateField;
            }
            set {
                this.discountEndDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountEndDateSpecified {
            get {
                return this.discountEndDateFieldSpecified;
            }
            set {
                this.discountEndDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DiscountStartDate {
            get {
                return this.discountStartDateField;
            }
            set {
                this.discountStartDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountStartDateSpecified {
            get {
                return this.discountStartDateFieldSpecified;
            }
            set {
                this.discountStartDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool DynamicPrice {
            get {
                return this.dynamicPriceField;
            }
            set {
                this.dynamicPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DynamicPriceSpecified {
            get {
                return this.dynamicPriceFieldSpecified;
            }
            set {
                this.dynamicPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool HasCoupons {
            get {
                return this.hasCouponsField;
            }
            set {
                this.hasCouponsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasCouponsSpecified {
            get {
                return this.hasCouponsFieldSpecified;
            }
            set {
                this.hasCouponsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HeadLine1 {
            get {
                return this.headLine1Field;
            }
            set {
                this.headLine1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HeadLine2 {
            get {
                return this.headLine2Field;
            }
            set {
                this.headLine2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HeadLine3 {
            get {
                return this.headLine3Field;
            }
            set {
                this.headLine3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HeadLine4 {
            get {
                return this.headLine4Field;
            }
            set {
                this.headLine4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HeadlineNewDesign {
            get {
                return this.headlineNewDesignField;
            }
            set {
                this.headlineNewDesignField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ImageUrl {
            get {
                return this.imageUrlField;
            }
            set {
                this.imageUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsInsertPurchaseAsClient {
            get {
                return this.isInsertPurchaseAsClientField;
            }
            set {
                this.isInsertPurchaseAsClientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsInsertPurchaseAsClientSpecified {
            get {
                return this.isInsertPurchaseAsClientFieldSpecified;
            }
            set {
                this.isInsertPurchaseAsClientFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsOrganizationValidNotExpired {
            get {
                return this.isOrganizationValidNotExpiredField;
            }
            set {
                this.isOrganizationValidNotExpiredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsOrganizationValidNotExpiredSpecified {
            get {
                return this.isOrganizationValidNotExpiredFieldSpecified;
            }
            set {
                this.isOrganizationValidNotExpiredFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsStandingOrder {
            get {
                return this.isStandingOrderField;
            }
            set {
                this.isStandingOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsStandingOrderSpecified {
            get {
                return this.isStandingOrderFieldSpecified;
            }
            set {
                this.isStandingOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> MailingListId {
            get {
                return this.mailingListIdField;
            }
            set {
                this.mailingListIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MailingListIdSpecified {
            get {
                return this.mailingListIdFieldSpecified;
            }
            set {
                this.mailingListIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MaxPayments {
            get {
                return this.maxPaymentsField;
            }
            set {
                this.maxPaymentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxPaymentsSpecified {
            get {
                return this.maxPaymentsFieldSpecified;
            }
            set {
                this.maxPaymentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool MultipleItems {
            get {
                return this.multipleItemsField;
            }
            set {
                this.multipleItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultipleItemsSpecified {
            get {
                return this.multipleItemsFieldSpecified;
            }
            set {
                this.multipleItemsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationBusinessType {
            get {
                return this.organizationBusinessTypeField;
            }
            set {
                this.organizationBusinessTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationBusinessTypeSpecified {
            get {
                return this.organizationBusinessTypeFieldSpecified;
            }
            set {
                this.organizationBusinessTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationIdSpecified {
            get {
                return this.organizationIdFieldSpecified;
            }
            set {
                this.organizationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OrganizationName {
            get {
                return this.organizationNameField;
            }
            set {
                this.organizationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OrganizationNameEng {
            get {
                return this.organizationNameEngField;
            }
            set {
                this.organizationNameEngField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PageUrl {
            get {
                return this.pageUrlField;
            }
            set {
                this.pageUrlField = value;
            }
        }
        
        /// <remarks/>
        public double Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriceSpecified {
            get {
                return this.priceFieldSpecified;
            }
            set {
                this.priceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RegulationsLink {
            get {
                return this.regulationsLinkField;
            }
            set {
                this.regulationsLinkField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ReturnParamsInUrl {
            get {
                return this.returnParamsInUrlField;
            }
            set {
                this.returnParamsInUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReturnParamsInUrlSpecified {
            get {
                return this.returnParamsInUrlFieldSpecified;
            }
            set {
                this.returnParamsInUrlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReturnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ClearingProductCatalogItemsMapping SelectedCatalogItem {
            get {
                return this.selectedCatalogItemField;
            }
            set {
                this.selectedCatalogItemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public ProductCouponCode SelectedCoupon {
            get {
                return this.selectedCouponField;
            }
            set {
                this.selectedCouponField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShortDescription1 {
            get {
                return this.shortDescription1Field;
            }
            set {
                this.shortDescription1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShortDescription2 {
            get {
                return this.shortDescription2Field;
            }
            set {
                this.shortDescription2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShortDescription3 {
            get {
                return this.shortDescription3Field;
            }
            set {
                this.shortDescription3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ShortDescription4 {
            get {
                return this.shortDescription4Field;
            }
            set {
                this.shortDescription4Field = value;
            }
        }
        
        /// <remarks/>
        public bool ShowDelivery {
            get {
                return this.showDeliveryField;
            }
            set {
                this.showDeliveryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowDeliverySpecified {
            get {
                return this.showDeliveryFieldSpecified;
            }
            set {
                this.showDeliveryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ShowDeliveryByDefault {
            get {
                return this.showDeliveryByDefaultField;
            }
            set {
                this.showDeliveryByDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowDeliveryByDefaultSpecified {
            get {
                return this.showDeliveryByDefaultFieldSpecified;
            }
            set {
                this.showDeliveryByDefaultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ShowLogo {
            get {
                return this.showLogoField;
            }
            set {
                this.showLogoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowLogoSpecified {
            get {
                return this.showLogoFieldSpecified;
            }
            set {
                this.showLogoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ShowProductImage {
            get {
                return this.showProductImageField;
            }
            set {
                this.showProductImageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowProductImageSpecified {
            get {
                return this.showProductImageFieldSpecified;
            }
            set {
                this.showProductImageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string StandingOrderDurations {
            get {
                return this.standingOrderDurationsField;
            }
            set {
                this.standingOrderDurationsField = value;
            }
        }
        
        /// <remarks/>
        public int TemplateId {
            get {
                return this.templateIdField;
            }
            set {
                this.templateIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TemplateIdSpecified {
            get {
                return this.templateIdFieldSpecified;
            }
            set {
                this.templateIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Usage {
            get {
                return this.usageField;
            }
            set {
                this.usageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsageSpecified {
            get {
                return this.usageFieldSpecified;
            }
            set {
                this.usageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string YoutubeLink {
            get {
                return this.youtubeLinkField;
            }
            set {
                this.youtubeLinkField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CommonCollectionOfArrayOfClearingProductsJHiVxprS : CommonObject {
        
        private ClearingProducts[] responseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public ClearingProducts[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class OrganizationTokenDetails : CommonObject {
        
        private string cVVField;
        
        private string cardExpDateField;
        
        private int clearingCompanyField;
        
        private bool clearingCompanyFieldSpecified;
        
        private int clientIdField;
        
        private bool clientIdFieldSpecified;
        
        private string extraParamField;
        
        private string fullNameField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int organizationIdField;
        
        private bool organizationIdFieldSpecified;
        
        private string ownerSocialIdField;
        
        private string tokenField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CVV {
            get {
                return this.cVVField;
            }
            set {
                this.cVVField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CardExpDate {
            get {
                return this.cardExpDateField;
            }
            set {
                this.cardExpDateField = value;
            }
        }
        
        /// <remarks/>
        public int ClearingCompany {
            get {
                return this.clearingCompanyField;
            }
            set {
                this.clearingCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingCompanySpecified {
            get {
                return this.clearingCompanyFieldSpecified;
            }
            set {
                this.clearingCompanyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ClientId {
            get {
                return this.clientIdField;
            }
            set {
                this.clientIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientIdSpecified {
            get {
                return this.clientIdFieldSpecified;
            }
            set {
                this.clientIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtraParam {
            get {
                return this.extraParamField;
            }
            set {
                this.extraParamField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationIdSpecified {
            get {
                return this.organizationIdFieldSpecified;
            }
            set {
                this.organizationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OwnerSocialId {
            get {
                return this.ownerSocialIdField;
            }
            set {
                this.ownerSocialIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ClearingLog : CommonObject {
        
        private double amountField;
        
        private bool amountFieldSpecified;
        
        private int clearingCompanyField;
        
        private bool clearingCompanyFieldSpecified;
        
        private string clearingCompanyNameField;
        
        private string clearingConfirmationNumberField;
        
        private System.Nullable<int> clearingLogBaseIdField;
        
        private bool clearingLogBaseIdFieldSpecified;
        
        private string clearingTraceIdField;
        
        private string clientNameField;
        
        private string creditNumberField;
        
        private int creditTypeField;
        
        private bool creditTypeFieldSpecified;
        
        private string creditTypeNameField;
        
        private System.Nullable<bool> creditedTransactionField;
        
        private bool creditedTransactionFieldSpecified;
        
        private int currencyField;
        
        private bool currencyFieldSpecified;
        
        private string currencyNameField;
        
        private System.DateTime dateField;
        
        private bool dateFieldSpecified;
        
        private string docIdField;
        
        private string errorMessageField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isCreditField;
        
        private bool isCreditFieldSpecified;
        
        private System.Nullable<bool> isDocumentCreatedField;
        
        private bool isDocumentCreatedFieldSpecified;
        
        private bool isSuccessField;
        
        private bool isSuccessFieldSpecified;
        
        private System.Nullable<bool> isTokenField;
        
        private bool isTokenFieldSpecified;
        
        private System.Nullable<int> logTypeField;
        
        private bool logTypeFieldSpecified;
        
        private int organizationIdField;
        
        private bool organizationIdFieldSpecified;
        
        private string paymentIdField;
        
        private int paymentNumberField;
        
        private bool paymentNumberFieldSpecified;
        
        private bool updateRequestLogField;
        
        private bool updateRequestLogFieldSpecified;
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ClearingCompany {
            get {
                return this.clearingCompanyField;
            }
            set {
                this.clearingCompanyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingCompanySpecified {
            get {
                return this.clearingCompanyFieldSpecified;
            }
            set {
                this.clearingCompanyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClearingCompanyName {
            get {
                return this.clearingCompanyNameField;
            }
            set {
                this.clearingCompanyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClearingConfirmationNumber {
            get {
                return this.clearingConfirmationNumberField;
            }
            set {
                this.clearingConfirmationNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClearingLogBaseId {
            get {
                return this.clearingLogBaseIdField;
            }
            set {
                this.clearingLogBaseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingLogBaseIdSpecified {
            get {
                return this.clearingLogBaseIdFieldSpecified;
            }
            set {
                this.clearingLogBaseIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClearingTraceId {
            get {
                return this.clearingTraceIdField;
            }
            set {
                this.clearingTraceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreditNumber {
            get {
                return this.creditNumberField;
            }
            set {
                this.creditNumberField = value;
            }
        }
        
        /// <remarks/>
        public int CreditType {
            get {
                return this.creditTypeField;
            }
            set {
                this.creditTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditTypeSpecified {
            get {
                return this.creditTypeFieldSpecified;
            }
            set {
                this.creditTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreditTypeName {
            get {
                return this.creditTypeNameField;
            }
            set {
                this.creditTypeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> CreditedTransaction {
            get {
                return this.creditedTransactionField;
            }
            set {
                this.creditedTransactionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditedTransactionSpecified {
            get {
                return this.creditedTransactionFieldSpecified;
            }
            set {
                this.creditedTransactionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrencySpecified {
            get {
                return this.currencyFieldSpecified;
            }
            set {
                this.currencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyName {
            get {
                return this.currencyNameField;
            }
            set {
                this.currencyNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocId {
            get {
                return this.docIdField;
            }
            set {
                this.docIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ErrorMessage {
            get {
                return this.errorMessageField;
            }
            set {
                this.errorMessageField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsCredit {
            get {
                return this.isCreditField;
            }
            set {
                this.isCreditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCreditSpecified {
            get {
                return this.isCreditFieldSpecified;
            }
            set {
                this.isCreditFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsDocumentCreated {
            get {
                return this.isDocumentCreatedField;
            }
            set {
                this.isDocumentCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDocumentCreatedSpecified {
            get {
                return this.isDocumentCreatedFieldSpecified;
            }
            set {
                this.isDocumentCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsSuccess {
            get {
                return this.isSuccessField;
            }
            set {
                this.isSuccessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSuccessSpecified {
            get {
                return this.isSuccessFieldSpecified;
            }
            set {
                this.isSuccessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsToken {
            get {
                return this.isTokenField;
            }
            set {
                this.isTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTokenSpecified {
            get {
                return this.isTokenFieldSpecified;
            }
            set {
                this.isTokenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LogType {
            get {
                return this.logTypeField;
            }
            set {
                this.logTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LogTypeSpecified {
            get {
                return this.logTypeFieldSpecified;
            }
            set {
                this.logTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationIdSpecified {
            get {
                return this.organizationIdFieldSpecified;
            }
            set {
                this.organizationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PaymentId {
            get {
                return this.paymentIdField;
            }
            set {
                this.paymentIdField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentNumber {
            get {
                return this.paymentNumberField;
            }
            set {
                this.paymentNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentNumberSpecified {
            get {
                return this.paymentNumberFieldSpecified;
            }
            set {
                this.paymentNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool UpdateRequestLog {
            get {
                return this.updateRequestLogField;
            }
            set {
                this.updateRequestLogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UpdateRequestLogSpecified {
            get {
                return this.updateRequestLogFieldSpecified;
            }
            set {
                this.updateRequestLogFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ApiClearingRequest : CommonObject {
        
        private string callBackUrlField;
        
        private string clearingRedirectUrlField;
        
        private string currencyField;
        
        private string descriptionField;
        
        private string emailField;
        
        private string fullNameField;
        
        private string invoice4UUserEmailField;
        
        private string invoice4UUserPasswordField;
        
        private bool isQaModeField;
        
        private bool isQaModeFieldSpecified;
        
        private int paymentsNumField;
        
        private bool paymentsNumFieldSpecified;
        
        private string phoneField;
        
        private string returnUrlField;
        
        private double sumField;
        
        private bool sumFieldSpecified;
        
        private int typeField;
        
        private bool typeFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CallBackUrl {
            get {
                return this.callBackUrlField;
            }
            set {
                this.callBackUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClearingRedirectUrl {
            get {
                return this.clearingRedirectUrlField;
            }
            set {
                this.clearingRedirectUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Invoice4UUserEmail {
            get {
                return this.invoice4UUserEmailField;
            }
            set {
                this.invoice4UUserEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Invoice4UUserPassword {
            get {
                return this.invoice4UUserPasswordField;
            }
            set {
                this.invoice4UUserPasswordField = value;
            }
        }
        
        /// <remarks/>
        public bool IsQaMode {
            get {
                return this.isQaModeField;
            }
            set {
                this.isQaModeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsQaModeSpecified {
            get {
                return this.isQaModeFieldSpecified;
            }
            set {
                this.isQaModeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PaymentsNum {
            get {
                return this.paymentsNumField;
            }
            set {
                this.paymentsNumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentsNumSpecified {
            get {
                return this.paymentsNumFieldSpecified;
            }
            set {
                this.paymentsNumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ReturnUrl {
            get {
                return this.returnUrlField;
            }
            set {
                this.returnUrlField = value;
            }
        }
        
        /// <remarks/>
        public double Sum {
            get {
                return this.sumField;
            }
            set {
                this.sumField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SumSpecified {
            get {
                return this.sumFieldSpecified;
            }
            set {
                this.sumFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ClientsStandingOrderLog))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ClientsStandingOrder : CommonObject {
        
        private System.Nullable<bool> activeField;
        
        private bool activeFieldSpecified;
        
        private double amountAfterTaxField;
        
        private bool amountAfterTaxFieldSpecified;
        
        private double amountBeforeTaxField;
        
        private bool amountBeforeTaxFieldSpecified;
        
        private double amountTaxField;
        
        private bool amountTaxFieldSpecified;
        
        private int clientIdField;
        
        private bool clientIdFieldSpecified;
        
        private string clientNameField;
        
        private string currencyField;
        
        private System.DateTime dateCreatedField;
        
        private bool dateCreatedFieldSpecified;
        
        private System.Nullable<System.DateTime> dateEndField;
        
        private bool dateEndFieldSpecified;
        
        private System.Nullable<System.DateTime> dateStartField;
        
        private bool dateStartFieldSpecified;
        
        private string documentSubjectField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private System.Nullable<bool> isDeletedField;
        
        private bool isDeletedFieldSpecified;
        
        private System.Nullable<bool> isRedirectToChargeDatesField;
        
        private bool isRedirectToChargeDatesFieldSpecified;
        
        private bool isUseFirstPreAmountField;
        
        private bool isUseFirstPreAmountFieldSpecified;
        
        private string itemDescriptionField;
        
        private int maxChargeAttemptsField;
        
        private bool maxChargeAttemptsFieldSpecified;
        
        private int monthsToChargeField;
        
        private bool monthsToChargeFieldSpecified;
        
        private int organizationIdField;
        
        private bool organizationIdFieldSpecified;
        
        private System.Nullable<double> preAmountAfterTaxField;
        
        private bool preAmountAfterTaxFieldSpecified;
        
        private System.Nullable<double> preAmountBeforeTaxField;
        
        private bool preAmountBeforeTaxFieldSpecified;
        
        private System.Nullable<double> preAmountTaxField;
        
        private bool preAmountTaxFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveSpecified {
            get {
                return this.activeFieldSpecified;
            }
            set {
                this.activeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double AmountAfterTax {
            get {
                return this.amountAfterTaxField;
            }
            set {
                this.amountAfterTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountAfterTaxSpecified {
            get {
                return this.amountAfterTaxFieldSpecified;
            }
            set {
                this.amountAfterTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double AmountBeforeTax {
            get {
                return this.amountBeforeTaxField;
            }
            set {
                this.amountBeforeTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountBeforeTaxSpecified {
            get {
                return this.amountBeforeTaxFieldSpecified;
            }
            set {
                this.amountBeforeTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double AmountTax {
            get {
                return this.amountTaxField;
            }
            set {
                this.amountTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountTaxSpecified {
            get {
                return this.amountTaxFieldSpecified;
            }
            set {
                this.amountTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ClientId {
            get {
                return this.clientIdField;
            }
            set {
                this.clientIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientIdSpecified {
            get {
                return this.clientIdFieldSpecified;
            }
            set {
                this.clientIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateCreatedSpecified {
            get {
                return this.dateCreatedFieldSpecified;
            }
            set {
                this.dateCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateEnd {
            get {
                return this.dateEndField;
            }
            set {
                this.dateEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateEndSpecified {
            get {
                return this.dateEndFieldSpecified;
            }
            set {
                this.dateEndFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateStart {
            get {
                return this.dateStartField;
            }
            set {
                this.dateStartField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateStartSpecified {
            get {
                return this.dateStartFieldSpecified;
            }
            set {
                this.dateStartFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocumentSubject {
            get {
                return this.documentSubjectField;
            }
            set {
                this.documentSubjectField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDeletedSpecified {
            get {
                return this.isDeletedFieldSpecified;
            }
            set {
                this.isDeletedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsRedirectToChargeDates {
            get {
                return this.isRedirectToChargeDatesField;
            }
            set {
                this.isRedirectToChargeDatesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRedirectToChargeDatesSpecified {
            get {
                return this.isRedirectToChargeDatesFieldSpecified;
            }
            set {
                this.isRedirectToChargeDatesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsUseFirstPreAmount {
            get {
                return this.isUseFirstPreAmountField;
            }
            set {
                this.isUseFirstPreAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsUseFirstPreAmountSpecified {
            get {
                return this.isUseFirstPreAmountFieldSpecified;
            }
            set {
                this.isUseFirstPreAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemDescription {
            get {
                return this.itemDescriptionField;
            }
            set {
                this.itemDescriptionField = value;
            }
        }
        
        /// <remarks/>
        public int MaxChargeAttempts {
            get {
                return this.maxChargeAttemptsField;
            }
            set {
                this.maxChargeAttemptsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MaxChargeAttemptsSpecified {
            get {
                return this.maxChargeAttemptsFieldSpecified;
            }
            set {
                this.maxChargeAttemptsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int MonthsToCharge {
            get {
                return this.monthsToChargeField;
            }
            set {
                this.monthsToChargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MonthsToChargeSpecified {
            get {
                return this.monthsToChargeFieldSpecified;
            }
            set {
                this.monthsToChargeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationIdSpecified {
            get {
                return this.organizationIdFieldSpecified;
            }
            set {
                this.organizationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> PreAmountAfterTax {
            get {
                return this.preAmountAfterTaxField;
            }
            set {
                this.preAmountAfterTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreAmountAfterTaxSpecified {
            get {
                return this.preAmountAfterTaxFieldSpecified;
            }
            set {
                this.preAmountAfterTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> PreAmountBeforeTax {
            get {
                return this.preAmountBeforeTaxField;
            }
            set {
                this.preAmountBeforeTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreAmountBeforeTaxSpecified {
            get {
                return this.preAmountBeforeTaxFieldSpecified;
            }
            set {
                this.preAmountBeforeTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> PreAmountTax {
            get {
                return this.preAmountTaxField;
            }
            set {
                this.preAmountTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PreAmountTaxSpecified {
            get {
                return this.preAmountTaxFieldSpecified;
            }
            set {
                this.preAmountTaxFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ClientsStandingOrderLog : ClientsStandingOrder {
        
        private int attemptsField;
        
        private bool attemptsFieldSpecified;
        
        private string clearingErrorField;
        
        private System.Nullable<bool> clearingSuccessField;
        
        private bool clearingSuccessFieldSpecified;
        
        private int clientsStandingOrderIdField;
        
        private bool clientsStandingOrderIdFieldSpecified;
        
        private string creditCardLastDigitsField;
        
        private System.Nullable<System.DateTime> dateFromField;
        
        private bool dateFromFieldSpecified;
        
        private System.Nullable<System.DateTime> dateToField;
        
        private bool dateToFieldSpecified;
        
        private System.Nullable<bool> docCreatedField;
        
        private bool docCreatedFieldSpecified;
        
        private string docErrorField;
        
        private string docIdField;
        
        private bool isPreAmountChargeField;
        
        private bool isPreAmountChargeFieldSpecified;
        
        /// <remarks/>
        public int Attempts {
            get {
                return this.attemptsField;
            }
            set {
                this.attemptsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttemptsSpecified {
            get {
                return this.attemptsFieldSpecified;
            }
            set {
                this.attemptsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClearingError {
            get {
                return this.clearingErrorField;
            }
            set {
                this.clearingErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ClearingSuccess {
            get {
                return this.clearingSuccessField;
            }
            set {
                this.clearingSuccessField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingSuccessSpecified {
            get {
                return this.clearingSuccessFieldSpecified;
            }
            set {
                this.clearingSuccessFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ClientsStandingOrderId {
            get {
                return this.clientsStandingOrderIdField;
            }
            set {
                this.clientsStandingOrderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientsStandingOrderIdSpecified {
            get {
                return this.clientsStandingOrderIdFieldSpecified;
            }
            set {
                this.clientsStandingOrderIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreditCardLastDigits {
            get {
                return this.creditCardLastDigitsField;
            }
            set {
                this.creditCardLastDigitsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateFrom {
            get {
                return this.dateFromField;
            }
            set {
                this.dateFromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateFromSpecified {
            get {
                return this.dateFromFieldSpecified;
            }
            set {
                this.dateFromFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateTo {
            get {
                return this.dateToField;
            }
            set {
                this.dateToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateToSpecified {
            get {
                return this.dateToFieldSpecified;
            }
            set {
                this.dateToFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> DocCreated {
            get {
                return this.docCreatedField;
            }
            set {
                this.docCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocCreatedSpecified {
            get {
                return this.docCreatedFieldSpecified;
            }
            set {
                this.docCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocError {
            get {
                return this.docErrorField;
            }
            set {
                this.docErrorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocId {
            get {
                return this.docIdField;
            }
            set {
                this.docIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPreAmountCharge {
            get {
                return this.isPreAmountChargeField;
            }
            set {
                this.isPreAmountChargeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPreAmountChargeSpecified {
            get {
                return this.isPreAmountChargeFieldSpecified;
            }
            set {
                this.isPreAmountChargeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ClearingAccount : CommonObject {
        
        private ClearingCompanies companyTypeField;
        
        private bool companyTypeFieldSpecified;
        
        private System.Nullable<System.DateTime> dateCreatedField;
        
        private bool dateCreatedFieldSpecified;
        
        private System.Nullable<System.DateTime> expirationDateSOField;
        
        private bool expirationDateSOFieldSpecified;
        
        private System.Nullable<System.DateTime> expirationDateTokenField;
        
        private bool expirationDateTokenFieldSpecified;
        
        private System.Nullable<bool> isActiveField;
        
        private bool isActiveFieldSpecified;
        
        private System.Nullable<bool> isNewApiField;
        
        private bool isNewApiFieldSpecified;
        
        private System.Nullable<bool> isStandingOrderField;
        
        private bool isStandingOrderFieldSpecified;
        
        private System.Nullable<bool> isTokenField;
        
        private bool isTokenFieldSpecified;
        
        private string passwordField;
        
        private string terminalField;
        
        private int userIDField;
        
        private bool userIDFieldSpecified;
        
        private string userNameField;
        
        /// <remarks/>
        public ClearingCompanies CompanyType {
            get {
                return this.companyTypeField;
            }
            set {
                this.companyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CompanyTypeSpecified {
            get {
                return this.companyTypeFieldSpecified;
            }
            set {
                this.companyTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateCreatedSpecified {
            get {
                return this.dateCreatedFieldSpecified;
            }
            set {
                this.dateCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpirationDateSO {
            get {
                return this.expirationDateSOField;
            }
            set {
                this.expirationDateSOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpirationDateSOSpecified {
            get {
                return this.expirationDateSOFieldSpecified;
            }
            set {
                this.expirationDateSOFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ExpirationDateToken {
            get {
                return this.expirationDateTokenField;
            }
            set {
                this.expirationDateTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpirationDateTokenSpecified {
            get {
                return this.expirationDateTokenFieldSpecified;
            }
            set {
                this.expirationDateTokenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsActive {
            get {
                return this.isActiveField;
            }
            set {
                this.isActiveField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsActiveSpecified {
            get {
                return this.isActiveFieldSpecified;
            }
            set {
                this.isActiveFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsNewApi {
            get {
                return this.isNewApiField;
            }
            set {
                this.isNewApiField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNewApiSpecified {
            get {
                return this.isNewApiFieldSpecified;
            }
            set {
                this.isNewApiFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsStandingOrder {
            get {
                return this.isStandingOrderField;
            }
            set {
                this.isStandingOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsStandingOrderSpecified {
            get {
                return this.isStandingOrderFieldSpecified;
            }
            set {
                this.isStandingOrderFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsToken {
            get {
                return this.isTokenField;
            }
            set {
                this.isTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTokenSpecified {
            get {
                return this.isTokenFieldSpecified;
            }
            set {
                this.isTokenFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Terminal {
            get {
                return this.terminalField;
            }
            set {
                this.terminalField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserIDSpecified {
            get {
                return this.userIDFieldSpecified;
            }
            set {
                this.userIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common.Enums")]
    public enum ClearingCompanies {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Tranzilla,
        
        /// <remarks/>
        ZCredit,
        
        /// <remarks/>
        Pelecard,
        
        /// <remarks/>
        ICreditInvoice4U,
        
        /// <remarks/>
        ICreditUPay,
        
        /// <remarks/>
        UPay,
        
        /// <remarks/>
        Meshulam,
        
        /// <remarks/>
        VisaCal,
        
        /// <remarks/>
        TranzillaIframe,
        
        /// <remarks/>
        Payme,
        
        /// <remarks/>
        Isracard,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CommonCollectionOfArrayOfCatalogItemJHiVxprS : CommonObject {
        
        private CatalogItem[] responseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public CatalogItem[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CommonCollectionOfArrayOfCustomerJHiVxprS : CommonObject {
        
        private Customer[] responseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Customer[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class Customer : CommonObject {
        
        private string accountNumberField;
        
        private bool activeField;
        
        private bool activeFieldSpecified;
        
        private System.Nullable<bool> addToMailChimpField;
        
        private bool addToMailChimpFieldSpecified;
        
        private string addressField;
        
        private string bankNameField;
        
        private string branchNameField;
        
        private string cellField;
        
        private string cityField;
        
        private int clientCodeField;
        
        private bool clientCodeFieldSpecified;
        
        private string contactEmailField;
        
        private string contactFirstNameField;
        
        private string contactLastNameField;
        
        private string contactNameField;
        
        private string countryField;
        
        private System.Nullable<int> countryIdField;
        
        private bool countryIdFieldSpecified;
        
        private string creditCardNumberField;
        
        private System.Nullable<int> creditCardTypeField;
        
        private bool creditCardTypeFieldSpecified;
        
        private AssociatedEmail[] customerEmailsField;
        
        private System.Nullable<System.DateTime> dateCreatedField;
        
        private bool dateCreatedFieldSpecified;
        
        private string emailField;
        
        private string emailAccountingField;
        
        private System.Nullable<long> extNumberField;
        
        private bool extNumberFieldSpecified;
        
        private string faxField;
        
        private double freeBalanceField;
        
        private bool freeBalanceFieldSpecified;
        
        private string freeUniqueIDField;
        
        private string freeZipField;
        
        private string guidField;
        
        private System.Nullable<bool> hasBeenExportedField;
        
        private bool hasBeenExportedFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string idNewAndOldSystemField;
        
        private string internalNoteField;
        
        private System.Nullable<bool> isAutomaicInvoicesField;
        
        private bool isAutomaicInvoicesFieldSpecified;
        
        private System.Nullable<bool> isFromLeadField;
        
        private bool isFromLeadFieldSpecified;
        
        private System.Nullable<bool> isNonUniqueNameCreationField;
        
        private bool isNonUniqueNameCreationFieldSpecified;
        
        private System.Nullable<int> leadIdField;
        
        private bool leadIdFieldSpecified;
        
        private string nameField;
        
        private string nameAccountingField;
        
        private int orgIDField;
        
        private bool orgIDFieldSpecified;
        
        private int payTermsField;
        
        private bool payTermsFieldSpecified;
        
        private string phoneField;
        
        private string phoneAccountingField;
        
        private bool retainerField;
        
        private bool retainerFieldSpecified;
        
        private System.Nullable<double> retainerAmountField;
        
        private bool retainerAmountFieldSpecified;
        
        private string retainerTitleField;
        
        private string tokenField;
        
        private int ucan2ClientIDField;
        
        private bool ucan2ClientIDFieldSpecified;
        
        private string uniqueIDField;
        
        private string websiteField;
        
        private string zipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveSpecified {
            get {
                return this.activeFieldSpecified;
            }
            set {
                this.activeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> AddToMailChimp {
            get {
                return this.addToMailChimpField;
            }
            set {
                this.addToMailChimpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AddToMailChimpSpecified {
            get {
                return this.addToMailChimpFieldSpecified;
            }
            set {
                this.addToMailChimpFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchName {
            get {
                return this.branchNameField;
            }
            set {
                this.branchNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cell {
            get {
                return this.cellField;
            }
            set {
                this.cellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public int ClientCode {
            get {
                return this.clientCodeField;
            }
            set {
                this.clientCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientCodeSpecified {
            get {
                return this.clientCodeFieldSpecified;
            }
            set {
                this.clientCodeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactEmail {
            get {
                return this.contactEmailField;
            }
            set {
                this.contactEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactFirstName {
            get {
                return this.contactFirstNameField;
            }
            set {
                this.contactFirstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactLastName {
            get {
                return this.contactLastNameField;
            }
            set {
                this.contactLastNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CountryId {
            get {
                return this.countryIdField;
            }
            set {
                this.countryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CountryIdSpecified {
            get {
                return this.countryIdFieldSpecified;
            }
            set {
                this.countryIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreditCardNumber {
            get {
                return this.creditCardNumberField;
            }
            set {
                this.creditCardNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreditCardType {
            get {
                return this.creditCardTypeField;
            }
            set {
                this.creditCardTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCardTypeSpecified {
            get {
                return this.creditCardTypeFieldSpecified;
            }
            set {
                this.creditCardTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public AssociatedEmail[] CustomerEmails {
            get {
                return this.customerEmailsField;
            }
            set {
                this.customerEmailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> DateCreated {
            get {
                return this.dateCreatedField;
            }
            set {
                this.dateCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateCreatedSpecified {
            get {
                return this.dateCreatedFieldSpecified;
            }
            set {
                this.dateCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailAccounting {
            get {
                return this.emailAccountingField;
            }
            set {
                this.emailAccountingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> ExtNumber {
            get {
                return this.extNumberField;
            }
            set {
                this.extNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtNumberSpecified {
            get {
                return this.extNumberFieldSpecified;
            }
            set {
                this.extNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public double FreeBalance {
            get {
                return this.freeBalanceField;
            }
            set {
                this.freeBalanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FreeBalanceSpecified {
            get {
                return this.freeBalanceFieldSpecified;
            }
            set {
                this.freeBalanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FreeUniqueID {
            get {
                return this.freeUniqueIDField;
            }
            set {
                this.freeUniqueIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string FreeZip {
            get {
                return this.freeZipField;
            }
            set {
                this.freeZipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Guid {
            get {
                return this.guidField;
            }
            set {
                this.guidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> HasBeenExported {
            get {
                return this.hasBeenExportedField;
            }
            set {
                this.hasBeenExportedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasBeenExportedSpecified {
            get {
                return this.hasBeenExportedFieldSpecified;
            }
            set {
                this.hasBeenExportedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IdNewAndOldSystem {
            get {
                return this.idNewAndOldSystemField;
            }
            set {
                this.idNewAndOldSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InternalNote {
            get {
                return this.internalNoteField;
            }
            set {
                this.internalNoteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsAutomaicInvoices {
            get {
                return this.isAutomaicInvoicesField;
            }
            set {
                this.isAutomaicInvoicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsAutomaicInvoicesSpecified {
            get {
                return this.isAutomaicInvoicesFieldSpecified;
            }
            set {
                this.isAutomaicInvoicesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsFromLead {
            get {
                return this.isFromLeadField;
            }
            set {
                this.isFromLeadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFromLeadSpecified {
            get {
                return this.isFromLeadFieldSpecified;
            }
            set {
                this.isFromLeadFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsNonUniqueNameCreation {
            get {
                return this.isNonUniqueNameCreationField;
            }
            set {
                this.isNonUniqueNameCreationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNonUniqueNameCreationSpecified {
            get {
                return this.isNonUniqueNameCreationFieldSpecified;
            }
            set {
                this.isNonUniqueNameCreationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LeadId {
            get {
                return this.leadIdField;
            }
            set {
                this.leadIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LeadIdSpecified {
            get {
                return this.leadIdFieldSpecified;
            }
            set {
                this.leadIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NameAccounting {
            get {
                return this.nameAccountingField;
            }
            set {
                this.nameAccountingField = value;
            }
        }
        
        /// <remarks/>
        public int OrgID {
            get {
                return this.orgIDField;
            }
            set {
                this.orgIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrgIDSpecified {
            get {
                return this.orgIDFieldSpecified;
            }
            set {
                this.orgIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PayTerms {
            get {
                return this.payTermsField;
            }
            set {
                this.payTermsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PayTermsSpecified {
            get {
                return this.payTermsFieldSpecified;
            }
            set {
                this.payTermsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PhoneAccounting {
            get {
                return this.phoneAccountingField;
            }
            set {
                this.phoneAccountingField = value;
            }
        }
        
        /// <remarks/>
        public bool Retainer {
            get {
                return this.retainerField;
            }
            set {
                this.retainerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RetainerSpecified {
            get {
                return this.retainerFieldSpecified;
            }
            set {
                this.retainerFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> RetainerAmount {
            get {
                return this.retainerAmountField;
            }
            set {
                this.retainerAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RetainerAmountSpecified {
            get {
                return this.retainerAmountFieldSpecified;
            }
            set {
                this.retainerAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RetainerTitle {
            get {
                return this.retainerTitleField;
            }
            set {
                this.retainerTitleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Token {
            get {
                return this.tokenField;
            }
            set {
                this.tokenField = value;
            }
        }
        
        /// <remarks/>
        public int Ucan2ClientID {
            get {
                return this.ucan2ClientIDField;
            }
            set {
                this.ucan2ClientIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Ucan2ClientIDSpecified {
            get {
                return this.ucan2ClientIDFieldSpecified;
            }
            set {
                this.ucan2ClientIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class AssociatedEmail : CommonObject {
        
        private bool activeField;
        
        private bool activeFieldSpecified;
        
        private System.Nullable<int> clientIdField;
        
        private bool clientIdFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private System.Nullable<bool> isSendDocField;
        
        private bool isSendDocFieldSpecified;
        
        private bool isUserMailField;
        
        private bool isUserMailFieldSpecified;
        
        private string mailField;
        
        private int userIDField;
        
        private bool userIDFieldSpecified;
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveSpecified {
            get {
                return this.activeFieldSpecified;
            }
            set {
                this.activeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClientId {
            get {
                return this.clientIdField;
            }
            set {
                this.clientIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientIdSpecified {
            get {
                return this.clientIdFieldSpecified;
            }
            set {
                this.clientIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsSendDoc {
            get {
                return this.isSendDocField;
            }
            set {
                this.isSendDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSendDocSpecified {
            get {
                return this.isSendDocFieldSpecified;
            }
            set {
                this.isSendDocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsUserMail {
            get {
                return this.isUserMailField;
            }
            set {
                this.isUserMailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsUserMailSpecified {
            get {
                return this.isUserMailFieldSpecified;
            }
            set {
                this.isUserMailFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Mail {
            get {
                return this.mailField;
            }
            set {
                this.mailField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserIDSpecified {
            get {
                return this.userIDFieldSpecified;
            }
            set {
                this.userIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class Currency : CommonObject {
        
        private double conversionRateField;
        
        private bool conversionRateFieldSpecified;
        
        private string countryField;
        
        private string cultureField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool inUseField;
        
        private bool inUseFieldSpecified;
        
        private string nameField;
        
        private int oldSystemIdField;
        
        private bool oldSystemIdFieldSpecified;
        
        private int oldSystemNumberField;
        
        private bool oldSystemNumberFieldSpecified;
        
        private string signField;
        
        private string symbolField;
        
        /// <remarks/>
        public double ConversionRate {
            get {
                return this.conversionRateField;
            }
            set {
                this.conversionRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConversionRateSpecified {
            get {
                return this.conversionRateFieldSpecified;
            }
            set {
                this.conversionRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
            }
        }
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IdSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool InUse {
            get {
                return this.inUseField;
            }
            set {
                this.inUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InUseSpecified {
            get {
                return this.inUseFieldSpecified;
            }
            set {
                this.inUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int OldSystemId {
            get {
                return this.oldSystemIdField;
            }
            set {
                this.oldSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OldSystemIdSpecified {
            get {
                return this.oldSystemIdFieldSpecified;
            }
            set {
                this.oldSystemIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OldSystemNumber {
            get {
                return this.oldSystemNumberField;
            }
            set {
                this.oldSystemNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OldSystemNumberSpecified {
            get {
                return this.oldSystemNumberFieldSpecified;
            }
            set {
                this.oldSystemNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Sign {
            get {
                return this.signField;
            }
            set {
                this.signField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CommonCollectionOfArrayOfCurrencyJHiVxprS : CommonObject {
        
        private Currency[] responseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Currency[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CreditCompany : CommonObject {
        
        private bool activeField;
        
        private bool activeFieldSpecified;
        
        private long externalNumberField;
        
        private bool externalNumberFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool inUseField;
        
        private bool inUseFieldSpecified;
        
        private string nameField;
        
        private int organizationIDField;
        
        private bool organizationIDFieldSpecified;
        
        private int ucan2IDField;
        
        private bool ucan2IDFieldSpecified;
        
        /// <remarks/>
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveSpecified {
            get {
                return this.activeFieldSpecified;
            }
            set {
                this.activeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long ExternalNumber {
            get {
                return this.externalNumberField;
            }
            set {
                this.externalNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExternalNumberSpecified {
            get {
                return this.externalNumberFieldSpecified;
            }
            set {
                this.externalNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool InUse {
            get {
                return this.inUseField;
            }
            set {
                this.inUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InUseSpecified {
            get {
                return this.inUseFieldSpecified;
            }
            set {
                this.inUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationID {
            get {
                return this.organizationIDField;
            }
            set {
                this.organizationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationIDSpecified {
            get {
                return this.organizationIDFieldSpecified;
            }
            set {
                this.organizationIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Ucan2ID {
            get {
                return this.ucan2IDField;
            }
            set {
                this.ucan2IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Ucan2IDSpecified {
            get {
                return this.ucan2IDFieldSpecified;
            }
            set {
                this.ucan2IDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class CommonCollectionOfArrayOfDocumentJHiVxprS : CommonObject {
        
        private Document[] responseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Document[] Response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class Document : CommonObject {
        
        private System.Nullable<System.DateTime> actualCreationDateField;
        
        private bool actualCreationDateFieldSpecified;
        
        private bool allowPaymentsOnDocField;
        
        private bool allowPaymentsOnDocFieldSpecified;
        
        private int amountField;
        
        private bool amountFieldSpecified;
        
        private System.Nullable<int> apiDuplicityTimeValidationField;
        
        private bool apiDuplicityTimeValidationFieldSpecified;
        
        private string apiIdentifierField;
        
        private AssociatedEmail[] associatedEmailsField;
        
        private string attachmentFileNameField;
        
        private string attachmentOriginalFileNameField;
        
        private double balanceField;
        
        private bool balanceFieldSpecified;
        
        private BankAccount bankAccountField;
        
        private System.Nullable<int> branchIDField;
        
        private bool branchIDFieldSpecified;
        
        private System.Nullable<int> clearingLogIdField;
        
        private bool clearingLogIdFieldSpecified;
        
        private string clientEmailField;
        
        private System.Nullable<int> clientIDField;
        
        private bool clientIDFieldSpecified;
        
        private string clientNameField;
        
        private bool closeReceiptField;
        
        private bool closeReceiptFieldSpecified;
        
        private double conversionRateField;
        
        private bool conversionRateFieldSpecified;
        
        private double conversionRateToILSField;
        
        private bool conversionRateToILSFieldSpecified;
        
        private bool convertToILSField;
        
        private bool convertToILSFieldSpecified;
        
        private double creditField;
        
        private bool creditFieldSpecified;
        
        private double creditAmountField;
        
        private bool creditAmountFieldSpecified;
        
        private string currencyField;
        
        private string currencyNameField;
        
        private System.Nullable<System.DateTime> currentDateField;
        
        private bool currentDateFieldSpecified;
        
        private double debitField;
        
        private bool debitFieldSpecified;
        
        private double debitTransactionField;
        
        private bool debitTransactionFieldSpecified;
        
        private double deductionField;
        
        private bool deductionFieldSpecified;
        
        private int departureHourField;
        
        private bool departureHourFieldSpecified;
        
        private int departureMinuteField;
        
        private bool departureMinuteFieldSpecified;
        
        private Discount discountField;
        
        private long documentNumberField;
        
        private bool documentNumberFieldSpecified;
        
        private int documentReffTypeField;
        
        private bool documentReffTypeFieldSpecified;
        
        private int documentTypeField;
        
        private bool documentTypeFieldSpecified;
        
        private string draftIdField;
        
        private string emailCustomCommentField;
        
        private string externalCommentsField;
        
        private bool firstField;
        
        private bool firstFieldSpecified;
        
        private int generalClientIdField;
        
        private bool generalClientIdFieldSpecified;
        
        private GenerelCustomer generalCustomerField;
        
        private string idField;
        
        private string internalCommentsField;
        
        private Document[] invoicesField;
        
        private System.Nullable<bool> is2SignDocField;
        
        private bool is2SignDocFieldSpecified;
        
        private bool isDiscountNominalField;
        
        private bool isDiscountNominalFieldSpecified;
        
        private bool isOldSystemDocumentField;
        
        private bool isOldSystemDocumentFieldSpecified;
        
        private bool isPreviewDocumentField;
        
        private bool isPreviewDocumentFieldSpecified;
        
        private System.Nullable<bool> isSendUserMailField;
        
        private bool isSendUserMailFieldSpecified;
        
        private System.Nullable<bool> isSignedBy2SignField;
        
        private bool isSignedBy2SignFieldSpecified;
        
        private System.Nullable<System.DateTime> issueDateField;
        
        private bool issueDateFieldSpecified;
        
        private DocumentItem[] itemsField;
        
        private int languageField;
        
        private bool languageFieldSpecified;
        
        private System.Nullable<int> lawyerDocTypeField;
        
        private bool lawyerDocTypeFieldSpecified;
        
        private string mailsAttachedField;
        
        private string oldSystemDocGuidField;
        
        private int oldSystemIdField;
        
        private bool oldSystemIdFieldSpecified;
        
        private int organizationIDField;
        
        private bool organizationIDFieldSpecified;
        
        private string organizationUniqueIDField;
        
        private double paidField;
        
        private bool paidFieldSpecified;
        
        private System.Nullable<System.DateTime> paymentDueDateField;
        
        private bool paymentDueDateFieldSpecified;
        
        private Payment[] paymentsField;
        
        private double receiptAmountField;
        
        private bool receiptAmountFieldSpecified;
        
        private int rootOrganizationIdField;
        
        private bool rootOrganizationIdFieldSpecified;
        
        private double roundAmountField;
        
        private bool roundAmountFieldSpecified;
        
        private Sms[] smsMessagesField;
        
        private string statusField;
        
        private int statusIDField;
        
        private bool statusIDFieldSpecified;
        
        private string subjectField;
        
        private bool taxIncludedField;
        
        private bool taxIncludedFieldSpecified;
        
        private System.Nullable<double> taxPercentageField;
        
        private bool taxPercentageFieldSpecified;
        
        private bool toRoundAmountField;
        
        private bool toRoundAmountFieldSpecified;
        
        private double totalField;
        
        private bool totalFieldSpecified;
        
        private double totalTaxAmountField;
        
        private bool totalTaxAmountFieldSpecified;
        
        private System.Nullable<double> totalTaxExemptField;
        
        private bool totalTaxExemptFieldSpecified;
        
        private double totalWithoutTaxField;
        
        private bool totalWithoutTaxFieldSpecified;
        
        private string uniqueIDField;
        
        private int userIDField;
        
        private bool userIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ActualCreationDate {
            get {
                return this.actualCreationDateField;
            }
            set {
                this.actualCreationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualCreationDateSpecified {
            get {
                return this.actualCreationDateFieldSpecified;
            }
            set {
                this.actualCreationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool AllowPaymentsOnDoc {
            get {
                return this.allowPaymentsOnDocField;
            }
            set {
                this.allowPaymentsOnDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllowPaymentsOnDocSpecified {
            get {
                return this.allowPaymentsOnDocFieldSpecified;
            }
            set {
                this.allowPaymentsOnDocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ApiDuplicityTimeValidation {
            get {
                return this.apiDuplicityTimeValidationField;
            }
            set {
                this.apiDuplicityTimeValidationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ApiDuplicityTimeValidationSpecified {
            get {
                return this.apiDuplicityTimeValidationFieldSpecified;
            }
            set {
                this.apiDuplicityTimeValidationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ApiIdentifier {
            get {
                return this.apiIdentifierField;
            }
            set {
                this.apiIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public AssociatedEmail[] AssociatedEmails {
            get {
                return this.associatedEmailsField;
            }
            set {
                this.associatedEmailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AttachmentFileName {
            get {
                return this.attachmentFileNameField;
            }
            set {
                this.attachmentFileNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AttachmentOriginalFileName {
            get {
                return this.attachmentOriginalFileNameField;
            }
            set {
                this.attachmentOriginalFileNameField = value;
            }
        }
        
        /// <remarks/>
        public double Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BalanceSpecified {
            get {
                return this.balanceFieldSpecified;
            }
            set {
                this.balanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public BankAccount BankAccount {
            get {
                return this.bankAccountField;
            }
            set {
                this.bankAccountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> BranchID {
            get {
                return this.branchIDField;
            }
            set {
                this.branchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BranchIDSpecified {
            get {
                return this.branchIDFieldSpecified;
            }
            set {
                this.branchIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClearingLogId {
            get {
                return this.clearingLogIdField;
            }
            set {
                this.clearingLogIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingLogIdSpecified {
            get {
                return this.clearingLogIdFieldSpecified;
            }
            set {
                this.clearingLogIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientEmail {
            get {
                return this.clientEmailField;
            }
            set {
                this.clientEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClientID {
            get {
                return this.clientIDField;
            }
            set {
                this.clientIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClientIDSpecified {
            get {
                return this.clientIDFieldSpecified;
            }
            set {
                this.clientIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientName {
            get {
                return this.clientNameField;
            }
            set {
                this.clientNameField = value;
            }
        }
        
        /// <remarks/>
        public bool CloseReceipt {
            get {
                return this.closeReceiptField;
            }
            set {
                this.closeReceiptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CloseReceiptSpecified {
            get {
                return this.closeReceiptFieldSpecified;
            }
            set {
                this.closeReceiptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double ConversionRate {
            get {
                return this.conversionRateField;
            }
            set {
                this.conversionRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConversionRateSpecified {
            get {
                return this.conversionRateFieldSpecified;
            }
            set {
                this.conversionRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double ConversionRateToILS {
            get {
                return this.conversionRateToILSField;
            }
            set {
                this.conversionRateToILSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConversionRateToILSSpecified {
            get {
                return this.conversionRateToILSFieldSpecified;
            }
            set {
                this.conversionRateToILSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ConvertToILS {
            get {
                return this.convertToILSField;
            }
            set {
                this.convertToILSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConvertToILSSpecified {
            get {
                return this.convertToILSFieldSpecified;
            }
            set {
                this.convertToILSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Credit {
            get {
                return this.creditField;
            }
            set {
                this.creditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditSpecified {
            get {
                return this.creditFieldSpecified;
            }
            set {
                this.creditFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double CreditAmount {
            get {
                return this.creditAmountField;
            }
            set {
                this.creditAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditAmountSpecified {
            get {
                return this.creditAmountFieldSpecified;
            }
            set {
                this.creditAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CurrencyName {
            get {
                return this.currencyNameField;
            }
            set {
                this.currencyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CurrentDate {
            get {
                return this.currentDateField;
            }
            set {
                this.currentDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CurrentDateSpecified {
            get {
                return this.currentDateFieldSpecified;
            }
            set {
                this.currentDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Debit {
            get {
                return this.debitField;
            }
            set {
                this.debitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DebitSpecified {
            get {
                return this.debitFieldSpecified;
            }
            set {
                this.debitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double DebitTransaction {
            get {
                return this.debitTransactionField;
            }
            set {
                this.debitTransactionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DebitTransactionSpecified {
            get {
                return this.debitTransactionFieldSpecified;
            }
            set {
                this.debitTransactionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Deduction {
            get {
                return this.deductionField;
            }
            set {
                this.deductionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeductionSpecified {
            get {
                return this.deductionFieldSpecified;
            }
            set {
                this.deductionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DepartureHour {
            get {
                return this.departureHourField;
            }
            set {
                this.departureHourField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepartureHourSpecified {
            get {
                return this.departureHourFieldSpecified;
            }
            set {
                this.departureHourFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DepartureMinute {
            get {
                return this.departureMinuteField;
            }
            set {
                this.departureMinuteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DepartureMinuteSpecified {
            get {
                return this.departureMinuteFieldSpecified;
            }
            set {
                this.departureMinuteFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Discount Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        public long DocumentNumber {
            get {
                return this.documentNumberField;
            }
            set {
                this.documentNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentNumberSpecified {
            get {
                return this.documentNumberFieldSpecified;
            }
            set {
                this.documentNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DocumentReffType {
            get {
                return this.documentReffTypeField;
            }
            set {
                this.documentReffTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentReffTypeSpecified {
            get {
                return this.documentReffTypeFieldSpecified;
            }
            set {
                this.documentReffTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DocumentType {
            get {
                return this.documentTypeField;
            }
            set {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentTypeSpecified {
            get {
                return this.documentTypeFieldSpecified;
            }
            set {
                this.documentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DraftId {
            get {
                return this.draftIdField;
            }
            set {
                this.draftIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmailCustomComment {
            get {
                return this.emailCustomCommentField;
            }
            set {
                this.emailCustomCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExternalComments {
            get {
                return this.externalCommentsField;
            }
            set {
                this.externalCommentsField = value;
            }
        }
        
        /// <remarks/>
        public bool First {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstSpecified {
            get {
                return this.firstFieldSpecified;
            }
            set {
                this.firstFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int GeneralClientId {
            get {
                return this.generalClientIdField;
            }
            set {
                this.generalClientIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GeneralClientIdSpecified {
            get {
                return this.generalClientIdFieldSpecified;
            }
            set {
                this.generalClientIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenerelCustomer GeneralCustomer {
            get {
                return this.generalCustomerField;
            }
            set {
                this.generalCustomerField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InternalComments {
            get {
                return this.internalCommentsField;
            }
            set {
                this.internalCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Document[] Invoices {
            get {
                return this.invoicesField;
            }
            set {
                this.invoicesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Is2SignDoc {
            get {
                return this.is2SignDocField;
            }
            set {
                this.is2SignDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Is2SignDocSpecified {
            get {
                return this.is2SignDocFieldSpecified;
            }
            set {
                this.is2SignDocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsDiscountNominal {
            get {
                return this.isDiscountNominalField;
            }
            set {
                this.isDiscountNominalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDiscountNominalSpecified {
            get {
                return this.isDiscountNominalFieldSpecified;
            }
            set {
                this.isDiscountNominalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsOldSystemDocument {
            get {
                return this.isOldSystemDocumentField;
            }
            set {
                this.isOldSystemDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsOldSystemDocumentSpecified {
            get {
                return this.isOldSystemDocumentFieldSpecified;
            }
            set {
                this.isOldSystemDocumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsPreviewDocument {
            get {
                return this.isPreviewDocumentField;
            }
            set {
                this.isPreviewDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPreviewDocumentSpecified {
            get {
                return this.isPreviewDocumentFieldSpecified;
            }
            set {
                this.isPreviewDocumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsSendUserMail {
            get {
                return this.isSendUserMailField;
            }
            set {
                this.isSendUserMailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSendUserMailSpecified {
            get {
                return this.isSendUserMailFieldSpecified;
            }
            set {
                this.isSendUserMailFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsSignedBy2Sign {
            get {
                return this.isSignedBy2SignField;
            }
            set {
                this.isSignedBy2SignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSignedBy2SignSpecified {
            get {
                return this.isSignedBy2SignFieldSpecified;
            }
            set {
                this.isSignedBy2SignFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> IssueDate {
            get {
                return this.issueDateField;
            }
            set {
                this.issueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IssueDateSpecified {
            get {
                return this.issueDateFieldSpecified;
            }
            set {
                this.issueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentItem[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
        
        /// <remarks/>
        public int Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LanguageSpecified {
            get {
                return this.languageFieldSpecified;
            }
            set {
                this.languageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LawyerDocType {
            get {
                return this.lawyerDocTypeField;
            }
            set {
                this.lawyerDocTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LawyerDocTypeSpecified {
            get {
                return this.lawyerDocTypeFieldSpecified;
            }
            set {
                this.lawyerDocTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MailsAttached {
            get {
                return this.mailsAttachedField;
            }
            set {
                this.mailsAttachedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OldSystemDocGuid {
            get {
                return this.oldSystemDocGuidField;
            }
            set {
                this.oldSystemDocGuidField = value;
            }
        }
        
        /// <remarks/>
        public int OldSystemId {
            get {
                return this.oldSystemIdField;
            }
            set {
                this.oldSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OldSystemIdSpecified {
            get {
                return this.oldSystemIdFieldSpecified;
            }
            set {
                this.oldSystemIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationID {
            get {
                return this.organizationIDField;
            }
            set {
                this.organizationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationIDSpecified {
            get {
                return this.organizationIDFieldSpecified;
            }
            set {
                this.organizationIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string OrganizationUniqueID {
            get {
                return this.organizationUniqueIDField;
            }
            set {
                this.organizationUniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public double Paid {
            get {
                return this.paidField;
            }
            set {
                this.paidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaidSpecified {
            get {
                return this.paidFieldSpecified;
            }
            set {
                this.paidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> PaymentDueDate {
            get {
                return this.paymentDueDateField;
            }
            set {
                this.paymentDueDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentDueDateSpecified {
            get {
                return this.paymentDueDateFieldSpecified;
            }
            set {
                this.paymentDueDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Payment[] Payments {
            get {
                return this.paymentsField;
            }
            set {
                this.paymentsField = value;
            }
        }
        
        /// <remarks/>
        public double ReceiptAmount {
            get {
                return this.receiptAmountField;
            }
            set {
                this.receiptAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReceiptAmountSpecified {
            get {
                return this.receiptAmountFieldSpecified;
            }
            set {
                this.receiptAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int RootOrganizationId {
            get {
                return this.rootOrganizationIdField;
            }
            set {
                this.rootOrganizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RootOrganizationIdSpecified {
            get {
                return this.rootOrganizationIdFieldSpecified;
            }
            set {
                this.rootOrganizationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double RoundAmount {
            get {
                return this.roundAmountField;
            }
            set {
                this.roundAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoundAmountSpecified {
            get {
                return this.roundAmountFieldSpecified;
            }
            set {
                this.roundAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public Sms[] SmsMessages {
            get {
                return this.smsMessagesField;
            }
            set {
                this.smsMessagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int StatusID {
            get {
                return this.statusIDField;
            }
            set {
                this.statusIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusIDSpecified {
            get {
                return this.statusIDFieldSpecified;
            }
            set {
                this.statusIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public bool TaxIncluded {
            get {
                return this.taxIncludedField;
            }
            set {
                this.taxIncludedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxIncludedSpecified {
            get {
                return this.taxIncludedFieldSpecified;
            }
            set {
                this.taxIncludedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TaxPercentage {
            get {
                return this.taxPercentageField;
            }
            set {
                this.taxPercentageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxPercentageSpecified {
            get {
                return this.taxPercentageFieldSpecified;
            }
            set {
                this.taxPercentageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ToRoundAmount {
            get {
                return this.toRoundAmountField;
            }
            set {
                this.toRoundAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToRoundAmountSpecified {
            get {
                return this.toRoundAmountFieldSpecified;
            }
            set {
                this.toRoundAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double TotalTaxAmount {
            get {
                return this.totalTaxAmountField;
            }
            set {
                this.totalTaxAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTaxAmountSpecified {
            get {
                return this.totalTaxAmountFieldSpecified;
            }
            set {
                this.totalTaxAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TotalTaxExempt {
            get {
                return this.totalTaxExemptField;
            }
            set {
                this.totalTaxExemptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTaxExemptSpecified {
            get {
                return this.totalTaxExemptFieldSpecified;
            }
            set {
                this.totalTaxExemptFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double TotalWithoutTax {
            get {
                return this.totalWithoutTaxField;
            }
            set {
                this.totalWithoutTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalWithoutTaxSpecified {
            get {
                return this.totalWithoutTaxFieldSpecified;
            }
            set {
                this.totalWithoutTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string UniqueID {
            get {
                return this.uniqueIDField;
            }
            set {
                this.uniqueIDField = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserIDSpecified {
            get {
                return this.userIDFieldSpecified;
            }
            set {
                this.userIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class BankAccount : CommonObject {
        
        private string accountNumberField;
        
        private string branchNameField;
        
        private string extendedProperty1Field;
        
        private string extendedProperty2Field;
        
        private string extendedProperty3Field;
        
        private string extendedProperty4Field;
        
        private string extendedProperty5Field;
        
        private string extendedProperty6Field;
        
        private long externalNumberField;
        
        private bool externalNumberFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool inUseField;
        
        private bool inUseFieldSpecified;
        
        private string nameField;
        
        private int organizationIDField;
        
        private bool organizationIDFieldSpecified;
        
        private int ucan2IDField;
        
        private bool ucan2IDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchName {
            get {
                return this.branchNameField;
            }
            set {
                this.branchNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtendedProperty1 {
            get {
                return this.extendedProperty1Field;
            }
            set {
                this.extendedProperty1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtendedProperty2 {
            get {
                return this.extendedProperty2Field;
            }
            set {
                this.extendedProperty2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtendedProperty3 {
            get {
                return this.extendedProperty3Field;
            }
            set {
                this.extendedProperty3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtendedProperty4 {
            get {
                return this.extendedProperty4Field;
            }
            set {
                this.extendedProperty4Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtendedProperty5 {
            get {
                return this.extendedProperty5Field;
            }
            set {
                this.extendedProperty5Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtendedProperty6 {
            get {
                return this.extendedProperty6Field;
            }
            set {
                this.extendedProperty6Field = value;
            }
        }
        
        /// <remarks/>
        public long ExternalNumber {
            get {
                return this.externalNumberField;
            }
            set {
                this.externalNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExternalNumberSpecified {
            get {
                return this.externalNumberFieldSpecified;
            }
            set {
                this.externalNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool InUse {
            get {
                return this.inUseField;
            }
            set {
                this.inUseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InUseSpecified {
            get {
                return this.inUseFieldSpecified;
            }
            set {
                this.inUseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationID {
            get {
                return this.organizationIDField;
            }
            set {
                this.organizationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationIDSpecified {
            get {
                return this.organizationIDFieldSpecified;
            }
            set {
                this.organizationIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Ucan2ID {
            get {
                return this.ucan2IDField;
            }
            set {
                this.ucan2IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Ucan2IDSpecified {
            get {
                return this.ucan2IDFieldSpecified;
            }
            set {
                this.ucan2IDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class Discount : CommonObject {
        
        private bool beforeTaxField;
        
        private bool beforeTaxFieldSpecified;
        
        private bool isNominalField;
        
        private bool isNominalFieldSpecified;
        
        private double valueField;
        
        private bool valueFieldSpecified;
        
        /// <remarks/>
        public bool BeforeTax {
            get {
                return this.beforeTaxField;
            }
            set {
                this.beforeTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BeforeTaxSpecified {
            get {
                return this.beforeTaxFieldSpecified;
            }
            set {
                this.beforeTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsNominal {
            get {
                return this.isNominalField;
            }
            set {
                this.isNominalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNominalSpecified {
            get {
                return this.isNominalFieldSpecified;
            }
            set {
                this.isNominalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValueSpecified {
            get {
                return this.valueFieldSpecified;
            }
            set {
                this.valueFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class GenerelCustomer : CommonObject {
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string identifierField;
        
        private string nameField;
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Identifier {
            get {
                return this.identifierField;
            }
            set {
                this.identifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class DocumentItem : CommonObject {
        
        private double avrageField;
        
        private bool avrageFieldSpecified;
        
        private string codeField;
        
        private double conversionRateField;
        
        private bool conversionRateFieldSpecified;
        
        private string currencyField;
        
        private string descriptionField;
        
        private Discount discountField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isCalcBeforeTaxField;
        
        private bool isCalcBeforeTaxFieldSpecified;
        
        private bool isDiscountNominalField;
        
        private bool isDiscountNominalFieldSpecified;
        
        private string lawyerIdentifierField;
        
        private string nameField;
        
        private double priceField;
        
        private bool priceFieldSpecified;
        
        private double priceIncludeTaxField;
        
        private bool priceIncludeTaxFieldSpecified;
        
        private double quantityField;
        
        private bool quantityFieldSpecified;
        
        private System.Nullable<double> taxPercentageField;
        
        private bool taxPercentageFieldSpecified;
        
        private double totalField;
        
        private bool totalFieldSpecified;
        
        private double totalTaxField;
        
        private bool totalTaxFieldSpecified;
        
        private double totalWithoutTaxField;
        
        private bool totalWithoutTaxFieldSpecified;
        
        private int userCatalogIDField;
        
        private bool userCatalogIDFieldSpecified;
        
        private int userCategoryIDField;
        
        private bool userCategoryIDFieldSpecified;
        
        /// <remarks/>
        public double Avrage {
            get {
                return this.avrageField;
            }
            set {
                this.avrageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AvrageSpecified {
            get {
                return this.avrageFieldSpecified;
            }
            set {
                this.avrageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public double ConversionRate {
            get {
                return this.conversionRateField;
            }
            set {
                this.conversionRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConversionRateSpecified {
            get {
                return this.conversionRateFieldSpecified;
            }
            set {
                this.conversionRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Discount Discount {
            get {
                return this.discountField;
            }
            set {
                this.discountField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsCalcBeforeTax {
            get {
                return this.isCalcBeforeTaxField;
            }
            set {
                this.isCalcBeforeTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCalcBeforeTaxSpecified {
            get {
                return this.isCalcBeforeTaxFieldSpecified;
            }
            set {
                this.isCalcBeforeTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsDiscountNominal {
            get {
                return this.isDiscountNominalField;
            }
            set {
                this.isDiscountNominalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDiscountNominalSpecified {
            get {
                return this.isDiscountNominalFieldSpecified;
            }
            set {
                this.isDiscountNominalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LawyerIdentifier {
            get {
                return this.lawyerIdentifierField;
            }
            set {
                this.lawyerIdentifierField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public double Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriceSpecified {
            get {
                return this.priceFieldSpecified;
            }
            set {
                this.priceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double PriceIncludeTax {
            get {
                return this.priceIncludeTaxField;
            }
            set {
                this.priceIncludeTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PriceIncludeTaxSpecified {
            get {
                return this.priceIncludeTaxFieldSpecified;
            }
            set {
                this.priceIncludeTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> TaxPercentage {
            get {
                return this.taxPercentageField;
            }
            set {
                this.taxPercentageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxPercentageSpecified {
            get {
                return this.taxPercentageFieldSpecified;
            }
            set {
                this.taxPercentageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalSpecified {
            get {
                return this.totalFieldSpecified;
            }
            set {
                this.totalFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double TotalTax {
            get {
                return this.totalTaxField;
            }
            set {
                this.totalTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalTaxSpecified {
            get {
                return this.totalTaxFieldSpecified;
            }
            set {
                this.totalTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double TotalWithoutTax {
            get {
                return this.totalWithoutTaxField;
            }
            set {
                this.totalWithoutTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TotalWithoutTaxSpecified {
            get {
                return this.totalWithoutTaxFieldSpecified;
            }
            set {
                this.totalWithoutTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UserCatalogID {
            get {
                return this.userCatalogIDField;
            }
            set {
                this.userCatalogIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserCatalogIDSpecified {
            get {
                return this.userCatalogIDFieldSpecified;
            }
            set {
                this.userCatalogIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UserCategoryID {
            get {
                return this.userCategoryIDField;
            }
            set {
                this.userCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserCategoryIDSpecified {
            get {
                return this.userCategoryIDFieldSpecified;
            }
            set {
                this.userCategoryIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class Payment : CommonObject {
        
        private string accountNumberField;
        
        private double amountField;
        
        private bool amountFieldSpecified;
        
        private string bankNameField;
        
        private string branchNameField;
        
        private double conversionRateField;
        
        private bool conversionRateFieldSpecified;
        
        private string creditCardNameField;
        
        private System.Nullable<int> creditCardTypeField;
        
        private bool creditCardTypeFieldSpecified;
        
        private System.Nullable<System.DateTime> dateField;
        
        private bool dateFieldSpecified;
        
        private string depositIDField;
        
        private Document documentField;
        
        private string documentIDField;
        
        private string expirationDateField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private int numberOfPaymentsField;
        
        private bool numberOfPaymentsFieldSpecified;
        
        private string payerIDField;
        
        private string paymentNumberField;
        
        private int paymentNumberInDocField;
        
        private bool paymentNumberInDocFieldSpecified;
        
        private int paymentTypeField;
        
        private bool paymentTypeFieldSpecified;
        
        private string paymentTypeLiteralField;
        
        private int paymentTypeOtherIdField;
        
        private bool paymentTypeOtherIdFieldSpecified;
        
        private System.Nullable<int> ucan2CreditCompanyIdField;
        
        private bool ucan2CreditCompanyIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BankName {
            get {
                return this.bankNameField;
            }
            set {
                this.bankNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchName {
            get {
                return this.branchNameField;
            }
            set {
                this.branchNameField = value;
            }
        }
        
        /// <remarks/>
        public double ConversionRate {
            get {
                return this.conversionRateField;
            }
            set {
                this.conversionRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConversionRateSpecified {
            get {
                return this.conversionRateFieldSpecified;
            }
            set {
                this.conversionRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreditCardName {
            get {
                return this.creditCardNameField;
            }
            set {
                this.creditCardNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CreditCardType {
            get {
                return this.creditCardTypeField;
            }
            set {
                this.creditCardTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCardTypeSpecified {
            get {
                return this.creditCardTypeFieldSpecified;
            }
            set {
                this.creditCardTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DepositID {
            get {
                return this.depositIDField;
            }
            set {
                this.depositIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Document Document {
            get {
                return this.documentField;
            }
            set {
                this.documentField = value;
            }
        }
        
        /// <remarks/>
        public string DocumentID {
            get {
                return this.documentIDField;
            }
            set {
                this.documentIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExpirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfPayments {
            get {
                return this.numberOfPaymentsField;
            }
            set {
                this.numberOfPaymentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumberOfPaymentsSpecified {
            get {
                return this.numberOfPaymentsFieldSpecified;
            }
            set {
                this.numberOfPaymentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PayerID {
            get {
                return this.payerIDField;
            }
            set {
                this.payerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PaymentNumber {
            get {
                return this.paymentNumberField;
            }
            set {
                this.paymentNumberField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentNumberInDoc {
            get {
                return this.paymentNumberInDocField;
            }
            set {
                this.paymentNumberInDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentNumberInDocSpecified {
            get {
                return this.paymentNumberInDocFieldSpecified;
            }
            set {
                this.paymentNumberInDocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified {
            get {
                return this.paymentTypeFieldSpecified;
            }
            set {
                this.paymentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PaymentTypeLiteral {
            get {
                return this.paymentTypeLiteralField;
            }
            set {
                this.paymentTypeLiteralField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentTypeOtherId {
            get {
                return this.paymentTypeOtherIdField;
            }
            set {
                this.paymentTypeOtherIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeOtherIdSpecified {
            get {
                return this.paymentTypeOtherIdFieldSpecified;
            }
            set {
                this.paymentTypeOtherIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Ucan2CreditCompanyId {
            get {
                return this.ucan2CreditCompanyIdField;
            }
            set {
                this.ucan2CreditCompanyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Ucan2CreditCompanyIdSpecified {
            get {
                return this.ucan2CreditCompanyIdFieldSpecified;
            }
            set {
                this.ucan2CreditCompanyIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class Sms : CommonObject {
        
        private string documentIdField;
        
        private string messageField;
        
        private SmsMessageReason messageReasonField;
        
        private bool messageReasonFieldSpecified;
        
        private string phoneNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public SmsMessageReason MessageReason {
            get {
                return this.messageReasonField;
            }
            set {
                this.messageReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MessageReasonSpecified {
            get {
                return this.messageReasonFieldSpecified;
            }
            set {
                this.messageReasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PhoneNumber {
            get {
                return this.phoneNumberField;
            }
            set {
                this.phoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common.Enums")]
    public enum SmsMessageReason {
        
        /// <remarks/>
        GeneralSms,
        
        /// <remarks/>
        NewInvoiceCreated,
        
        /// <remarks/>
        NewProformaInvoiceCreated,
        
        /// <remarks/>
        NewInvoiceQuoteCreated,
        
        /// <remarks/>
        NewInvoiceAsSms,
        
        /// <remarks/>
        NewReceiptAsSms,
        
        /// <remarks/>
        NewInvoiceReceiptAsSms,
        
        /// <remarks/>
        NewInvoiceCreditAsSms,
        
        /// <remarks/>
        NewProformaInvoiceAsSms,
        
        /// <remarks/>
        NewInvoiceOrderAsSms,
        
        /// <remarks/>
        NewInvoiceQuoteAsSms,
        
        /// <remarks/>
        NewInvoiceShipAsSms,
        
        /// <remarks/>
        InvoiceReminder,
        
        /// <remarks/>
        ReceiptReminder,
        
        /// <remarks/>
        InvoiceReceiptReminder,
        
        /// <remarks/>
        InvoiceCreditReminder,
        
        /// <remarks/>
        ProformaInvoiceReminder,
        
        /// <remarks/>
        InvoiceOrderReminder,
        
        /// <remarks/>
        InvoiceQuoteReminder,
        
        /// <remarks/>
        InvoiceShipReminder,
        
        /// <remarks/>
        CustomerPaymentReminder,
        
        /// <remarks/>
        CustomerThankYouPurchase,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class DocumentsRequest : CommonObject {
        
        private int branchIDField;
        
        private bool branchIDFieldSpecified;
        
        private int cardTypeIDField;
        
        private bool cardTypeIDFieldSpecified;
        
        private System.Nullable<CommonCacheTypes> commonCacheTypeField;
        
        private bool commonCacheTypeFieldSpecified;
        
        private string currencyField;
        
        private System.Nullable<int> customerIDField;
        
        private bool customerIDFieldSpecified;
        
        private System.Nullable<int> customerIdOldSystemField;
        
        private bool customerIdOldSystemFieldSpecified;
        
        private string customerNameField;
        
        private int documentNumberField;
        
        private bool documentNumberFieldSpecified;
        
        private System.Nullable<int> documentTypeField;
        
        private bool documentTypeFieldSpecified;
        
        private string documentTypesField;
        
        private int exectDocumentNumberField;
        
        private bool exectDocumentNumberFieldSpecified;
        
        private int extraStatusField;
        
        private bool extraStatusFieldSpecified;
        
        private int extraStatus2Field;
        
        private bool extraStatus2FieldSpecified;
        
        private System.Nullable<System.DateTime> fromField;
        
        private bool fromFieldSpecified;
        
        private System.Nullable<System.DateTime> fromActualCreationDateField;
        
        private bool fromActualCreationDateFieldSpecified;
        
        private System.Nullable<float> fromAmountField;
        
        private bool fromAmountFieldSpecified;
        
        private string generalClientNameField;
        
        private GenerelCustomer generalCustomerField;
        
        private GraphGroupingTypes graphGroupTypeField;
        
        private bool graphGroupTypeFieldSpecified;
        
        private System.Nullable<bool> incomeItemSearchByCatalogIdAndNameOnlyField;
        
        private bool incomeItemSearchByCatalogIdAndNameOnlyFieldSpecified;
        
        private bool isCacheField;
        
        private bool isCacheFieldSpecified;
        
        private bool isFromDocumentRequestField;
        
        private bool isFromDocumentRequestFieldSpecified;
        
        private bool isFromOldSystemRequestField;
        
        private bool isFromOldSystemRequestFieldSpecified;
        
        private bool isRefreshCacheField;
        
        private bool isRefreshCacheFieldSpecified;
        
        private string itemCodeField;
        
        private string itemDescriptionField;
        
        private System.Nullable<bool> itemsIncludedField;
        
        private bool itemsIncludedFieldSpecified;
        
        private int limitField;
        
        private bool limitFieldSpecified;
        
        private int oldSystemIdField;
        
        private bool oldSystemIdFieldSpecified;
        
        private System.Nullable<bool> onlyGeneralClientField;
        
        private bool onlyGeneralClientFieldSpecified;
        
        private int paymentTypeField;
        
        private bool paymentTypeFieldSpecified;
        
        private System.Nullable<bool> paymentTypeDeductionOnlyField;
        
        private bool paymentTypeDeductionOnlyFieldSpecified;
        
        private System.Nullable<int> paymentTypeOtherIdField;
        
        private bool paymentTypeOtherIdFieldSpecified;
        
        private System.Nullable<bool> paymentsIncludedField;
        
        private bool paymentsIncludedFieldSpecified;
        
        private System.Nullable<ReportTypes> reportTypeField;
        
        private bool reportTypeFieldSpecified;
        
        private System.Nullable<int> reportTypeIntField;
        
        private bool reportTypeIntFieldSpecified;
        
        private int statusField;
        
        private bool statusFieldSpecified;
        
        private System.Nullable<System.DateTime> toField;
        
        private bool toFieldSpecified;
        
        private System.Nullable<System.DateTime> toActualCreationDateField;
        
        private bool toActualCreationDateFieldSpecified;
        
        private System.Nullable<float> toAmountField;
        
        private bool toAmountFieldSpecified;
        
        private string transactionNumberField;
        
        private System.Nullable<DocumentType> typeField;
        
        private bool typeFieldSpecified;
        
        private System.Nullable<UserCacheTypes> userCacheTypeField;
        
        private bool userCacheTypeFieldSpecified;
        
        /// <remarks/>
        public int BranchID {
            get {
                return this.branchIDField;
            }
            set {
                this.branchIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BranchIDSpecified {
            get {
                return this.branchIDFieldSpecified;
            }
            set {
                this.branchIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CardTypeID {
            get {
                return this.cardTypeIDField;
            }
            set {
                this.cardTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CardTypeIDSpecified {
            get {
                return this.cardTypeIDFieldSpecified;
            }
            set {
                this.cardTypeIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<CommonCacheTypes> CommonCacheType {
            get {
                return this.commonCacheTypeField;
            }
            set {
                this.commonCacheTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommonCacheTypeSpecified {
            get {
                return this.commonCacheTypeFieldSpecified;
            }
            set {
                this.commonCacheTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomerID {
            get {
                return this.customerIDField;
            }
            set {
                this.customerIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerIDSpecified {
            get {
                return this.customerIDFieldSpecified;
            }
            set {
                this.customerIDFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CustomerIdOldSystem {
            get {
                return this.customerIdOldSystemField;
            }
            set {
                this.customerIdOldSystemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerIdOldSystemSpecified {
            get {
                return this.customerIdOldSystemFieldSpecified;
            }
            set {
                this.customerIdOldSystemFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentNumber {
            get {
                return this.documentNumberField;
            }
            set {
                this.documentNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentNumberSpecified {
            get {
                return this.documentNumberFieldSpecified;
            }
            set {
                this.documentNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> DocumentType {
            get {
                return this.documentTypeField;
            }
            set {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentTypeSpecified {
            get {
                return this.documentTypeFieldSpecified;
            }
            set {
                this.documentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocumentTypes {
            get {
                return this.documentTypesField;
            }
            set {
                this.documentTypesField = value;
            }
        }
        
        /// <remarks/>
        public int ExectDocumentNumber {
            get {
                return this.exectDocumentNumberField;
            }
            set {
                this.exectDocumentNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExectDocumentNumberSpecified {
            get {
                return this.exectDocumentNumberFieldSpecified;
            }
            set {
                this.exectDocumentNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ExtraStatus {
            get {
                return this.extraStatusField;
            }
            set {
                this.extraStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtraStatusSpecified {
            get {
                return this.extraStatusFieldSpecified;
            }
            set {
                this.extraStatusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ExtraStatus2 {
            get {
                return this.extraStatus2Field;
            }
            set {
                this.extraStatus2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExtraStatus2Specified {
            get {
                return this.extraStatus2FieldSpecified;
            }
            set {
                this.extraStatus2FieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FromSpecified {
            get {
                return this.fromFieldSpecified;
            }
            set {
                this.fromFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> FromActualCreationDate {
            get {
                return this.fromActualCreationDateField;
            }
            set {
                this.fromActualCreationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FromActualCreationDateSpecified {
            get {
                return this.fromActualCreationDateFieldSpecified;
            }
            set {
                this.fromActualCreationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> FromAmount {
            get {
                return this.fromAmountField;
            }
            set {
                this.fromAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FromAmountSpecified {
            get {
                return this.fromAmountFieldSpecified;
            }
            set {
                this.fromAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string GeneralClientName {
            get {
                return this.generalClientNameField;
            }
            set {
                this.generalClientNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public GenerelCustomer GeneralCustomer {
            get {
                return this.generalCustomerField;
            }
            set {
                this.generalCustomerField = value;
            }
        }
        
        /// <remarks/>
        public GraphGroupingTypes GraphGroupType {
            get {
                return this.graphGroupTypeField;
            }
            set {
                this.graphGroupTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GraphGroupTypeSpecified {
            get {
                return this.graphGroupTypeFieldSpecified;
            }
            set {
                this.graphGroupTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IncomeItemSearchByCatalogIdAndNameOnly {
            get {
                return this.incomeItemSearchByCatalogIdAndNameOnlyField;
            }
            set {
                this.incomeItemSearchByCatalogIdAndNameOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IncomeItemSearchByCatalogIdAndNameOnlySpecified {
            get {
                return this.incomeItemSearchByCatalogIdAndNameOnlyFieldSpecified;
            }
            set {
                this.incomeItemSearchByCatalogIdAndNameOnlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsCache {
            get {
                return this.isCacheField;
            }
            set {
                this.isCacheField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCacheSpecified {
            get {
                return this.isCacheFieldSpecified;
            }
            set {
                this.isCacheFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsFromDocumentRequest {
            get {
                return this.isFromDocumentRequestField;
            }
            set {
                this.isFromDocumentRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFromDocumentRequestSpecified {
            get {
                return this.isFromDocumentRequestFieldSpecified;
            }
            set {
                this.isFromDocumentRequestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsFromOldSystemRequest {
            get {
                return this.isFromOldSystemRequestField;
            }
            set {
                this.isFromOldSystemRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFromOldSystemRequestSpecified {
            get {
                return this.isFromOldSystemRequestFieldSpecified;
            }
            set {
                this.isFromOldSystemRequestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsRefreshCache {
            get {
                return this.isRefreshCacheField;
            }
            set {
                this.isRefreshCacheField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRefreshCacheSpecified {
            get {
                return this.isRefreshCacheFieldSpecified;
            }
            set {
                this.isRefreshCacheFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemCode {
            get {
                return this.itemCodeField;
            }
            set {
                this.itemCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemDescription {
            get {
                return this.itemDescriptionField;
            }
            set {
                this.itemDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ItemsIncluded {
            get {
                return this.itemsIncludedField;
            }
            set {
                this.itemsIncludedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemsIncludedSpecified {
            get {
                return this.itemsIncludedFieldSpecified;
            }
            set {
                this.itemsIncludedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Limit {
            get {
                return this.limitField;
            }
            set {
                this.limitField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LimitSpecified {
            get {
                return this.limitFieldSpecified;
            }
            set {
                this.limitFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int OldSystemId {
            get {
                return this.oldSystemIdField;
            }
            set {
                this.oldSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OldSystemIdSpecified {
            get {
                return this.oldSystemIdFieldSpecified;
            }
            set {
                this.oldSystemIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> OnlyGeneralClient {
            get {
                return this.onlyGeneralClientField;
            }
            set {
                this.onlyGeneralClientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OnlyGeneralClientSpecified {
            get {
                return this.onlyGeneralClientFieldSpecified;
            }
            set {
                this.onlyGeneralClientFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified {
            get {
                return this.paymentTypeFieldSpecified;
            }
            set {
                this.paymentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> PaymentTypeDeductionOnly {
            get {
                return this.paymentTypeDeductionOnlyField;
            }
            set {
                this.paymentTypeDeductionOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeDeductionOnlySpecified {
            get {
                return this.paymentTypeDeductionOnlyFieldSpecified;
            }
            set {
                this.paymentTypeDeductionOnlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> PaymentTypeOtherId {
            get {
                return this.paymentTypeOtherIdField;
            }
            set {
                this.paymentTypeOtherIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeOtherIdSpecified {
            get {
                return this.paymentTypeOtherIdFieldSpecified;
            }
            set {
                this.paymentTypeOtherIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> PaymentsIncluded {
            get {
                return this.paymentsIncludedField;
            }
            set {
                this.paymentsIncludedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentsIncludedSpecified {
            get {
                return this.paymentsIncludedFieldSpecified;
            }
            set {
                this.paymentsIncludedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<ReportTypes> ReportType {
            get {
                return this.reportTypeField;
            }
            set {
                this.reportTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportTypeSpecified {
            get {
                return this.reportTypeFieldSpecified;
            }
            set {
                this.reportTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ReportTypeInt {
            get {
                return this.reportTypeIntField;
            }
            set {
                this.reportTypeIntField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ReportTypeIntSpecified {
            get {
                return this.reportTypeIntFieldSpecified;
            }
            set {
                this.reportTypeIntFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatusSpecified {
            get {
                return this.statusFieldSpecified;
            }
            set {
                this.statusFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToSpecified {
            get {
                return this.toFieldSpecified;
            }
            set {
                this.toFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ToActualCreationDate {
            get {
                return this.toActualCreationDateField;
            }
            set {
                this.toActualCreationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToActualCreationDateSpecified {
            get {
                return this.toActualCreationDateFieldSpecified;
            }
            set {
                this.toActualCreationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<float> ToAmount {
            get {
                return this.toAmountField;
            }
            set {
                this.toAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ToAmountSpecified {
            get {
                return this.toAmountFieldSpecified;
            }
            set {
                this.toAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TransactionNumber {
            get {
                return this.transactionNumberField;
            }
            set {
                this.transactionNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<DocumentType> Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<UserCacheTypes> UserCacheType {
            get {
                return this.userCacheTypeField;
            }
            set {
                this.userCacheTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserCacheTypeSpecified {
            get {
                return this.userCacheTypeFieldSpecified;
            }
            set {
                this.userCacheTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common.Enums")]
    public enum CommonCacheTypes {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        DashboardMessages,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common.Enums")]
    public enum GraphGroupingTypes {
        
        /// <remarks/>
        Month,
        
        /// <remarks/>
        MonthYear,
        
        /// <remarks/>
        Day,
        
        /// <remarks/>
        Year,
        
        /// <remarks/>
        VatExemption,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common.Enums")]
    public enum ReportTypes {
        
        /// <remarks/>
        Document,
        
        /// <remarks/>
        Customer,
        
        /// <remarks/>
        IncomeItemReport,
        
        /// <remarks/>
        IncomeGraph,
        
        /// <remarks/>
        CsvLogReport,
        
        /// <remarks/>
        OpenDocuments,
        
        /// <remarks/>
        IncomeReport,
        
        /// <remarks/>
        Conversions,
        
        /// <remarks/>
        DashboardOpenInvoice,
        
        /// <remarks/>
        Paypal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common.Enums")]
    public enum DocumentType {
        
        /// <remarks/>
        Invoice,
        
        /// <remarks/>
        Receipt,
        
        /// <remarks/>
        InvoiceReceipt,
        
        /// <remarks/>
        InvoiceCredit,
        
        /// <remarks/>
        ProformaInvoice,
        
        /// <remarks/>
        InvoiceOrder,
        
        /// <remarks/>
        InvoiceQuote,
        
        /// <remarks/>
        InvoiceShip,
        
        /// <remarks/>
        Deposits,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common.Enums")]
    public enum UserCacheTypes {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        GraphUser,
        
        /// <remarks/>
        DocumentsOpenInvoiceDashboard,
        
        /// <remarks/>
        DocumentsInvoiceRemaining,
        
        /// <remarks/>
        DocumentsReceiptRemaining,
        
        /// <remarks/>
        DocumentsInvoiceReceiptRemaining,
        
        /// <remarks/>
        DocumentsCreditRemaining,
        
        /// <remarks/>
        DocumentsProformaRemaining,
        
        /// <remarks/>
        DocumentsOrderRemaining,
        
        /// <remarks/>
        DocumentsQuoteRemaining,
        
        /// <remarks/>
        DocumentsShipmentRemaining,
        
        /// <remarks/>
        DocumentsTagTypes,
        
        /// <remarks/>
        UsersByRootOrganizationId,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class Branch : CommonObject {
        
        private string descriptionField;
        
        private string emailField;
        
        private bool enabledField;
        
        private bool enabledFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private bool isDefaultField;
        
        private bool isDefaultFieldSpecified;
        
        private string nameField;
        
        private bool newField;
        
        private bool newFieldSpecified;
        
        private int ucan2IDField;
        
        private bool ucan2IDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public bool Enabled {
            get {
                return this.enabledField;
            }
            set {
                this.enabledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnabledSpecified {
            get {
                return this.enabledFieldSpecified;
            }
            set {
                this.enabledFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsDefault {
            get {
                return this.isDefaultField;
            }
            set {
                this.isDefaultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDefaultSpecified {
            get {
                return this.isDefaultFieldSpecified;
            }
            set {
                this.isDefaultFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool New {
            get {
                return this.newField;
            }
            set {
                this.newField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NewSpecified {
            get {
                return this.newFieldSpecified;
            }
            set {
                this.newFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Ucan2ID {
            get {
                return this.ucan2IDField;
            }
            set {
                this.ucan2IDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool Ucan2IDSpecified {
            get {
                return this.ucan2IDFieldSpecified;
            }
            set {
                this.ucan2IDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class PrintOptions : CommonObject {
        
        private AccountPrintOptions accountPrintOptionsField;
        
        private int[] allowedPaymentMethodsField;
        
        private bool bankDetailsField;
        
        private bool bankDetailsFieldSpecified;
        
        private bool codeCullomField;
        
        private bool codeCullomFieldSpecified;
        
        private string commentsField;
        
        private string commentsDepositField;
        
        private string commentsInvoiceField;
        
        private string commentsInvoiceCreditField;
        
        private string commentsInvoiceOrderField;
        
        private string commentsInvoiceReceiptField;
        
        private string commentsProformaInvoiceField;
        
        private string commentsQuoteField;
        
        private string commentsReceiptField;
        
        private string commentsShipmentField;
        
        private bool discountTypeCullomField;
        
        private bool discountTypeCullomFieldSpecified;
        
        private int documentTemplateField;
        
        private bool documentTemplateFieldSpecified;
        
        private string drawingField;
        
        private System.Nullable<double> earlyPaymentDiscountField;
        
        private bool earlyPaymentDiscountFieldSpecified;
        
        private bool englishBankDetailsField;
        
        private bool englishBankDetailsFieldSpecified;
        
        private System.Nullable<bool> hasFixedLatePaymentPenaltyField;
        
        private bool hasFixedLatePaymentPenaltyFieldSpecified;
        
        private string htmlTextField;
        
        private System.Nullable<bool> isDocCommentField;
        
        private bool isDocCommentFieldSpecified;
        
        private System.Nullable<bool> isDrawingField;
        
        private bool isDrawingFieldSpecified;
        
        private System.Nullable<bool> isEmailCommentField;
        
        private bool isEmailCommentFieldSpecified;
        
        private System.Nullable<bool> isNewDesignField;
        
        private bool isNewDesignFieldSpecified;
        
        private System.Nullable<bool> isReplaceCompanyNameWithBranchNameField;
        
        private bool isReplaceCompanyNameWithBranchNameFieldSpecified;
        
        private System.Nullable<bool> isShowBranchNameOnDocumentField;
        
        private bool isShowBranchNameOnDocumentFieldSpecified;
        
        private System.Nullable<bool> isSignatureField;
        
        private bool isSignatureFieldSpecified;
        
        private bool itemDiscountCullomField;
        
        private bool itemDiscountCullomFieldSpecified;
        
        private System.Nullable<double> latePaymentTaxField;
        
        private bool latePaymentTaxFieldSpecified;
        
        private bool roundAmountField;
        
        private bool roundAmountFieldSpecified;
        
        private System.Nullable<bool> showFaxInDocumentField;
        
        private bool showFaxInDocumentFieldSpecified;
        
        private System.Nullable<bool> showLogoInMailField;
        
        private bool showLogoInMailFieldSpecified;
        
        private System.Nullable<bool> showVatIncludedCollumnField;
        
        private bool showVatIncludedCollumnFieldSpecified;
        
        private int templateColorField;
        
        private bool templateColorFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public AccountPrintOptions AccountPrintOptions {
            get {
                return this.accountPrintOptionsField;
            }
            set {
                this.accountPrintOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public int[] AllowedPaymentMethods {
            get {
                return this.allowedPaymentMethodsField;
            }
            set {
                this.allowedPaymentMethodsField = value;
            }
        }
        
        /// <remarks/>
        public bool BankDetails {
            get {
                return this.bankDetailsField;
            }
            set {
                this.bankDetailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BankDetailsSpecified {
            get {
                return this.bankDetailsFieldSpecified;
            }
            set {
                this.bankDetailsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool CodeCullom {
            get {
                return this.codeCullomField;
            }
            set {
                this.codeCullomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodeCullomSpecified {
            get {
                return this.codeCullomFieldSpecified;
            }
            set {
                this.codeCullomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CommentsDeposit {
            get {
                return this.commentsDepositField;
            }
            set {
                this.commentsDepositField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CommentsInvoice {
            get {
                return this.commentsInvoiceField;
            }
            set {
                this.commentsInvoiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CommentsInvoiceCredit {
            get {
                return this.commentsInvoiceCreditField;
            }
            set {
                this.commentsInvoiceCreditField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CommentsInvoiceOrder {
            get {
                return this.commentsInvoiceOrderField;
            }
            set {
                this.commentsInvoiceOrderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CommentsInvoiceReceipt {
            get {
                return this.commentsInvoiceReceiptField;
            }
            set {
                this.commentsInvoiceReceiptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CommentsProformaInvoice {
            get {
                return this.commentsProformaInvoiceField;
            }
            set {
                this.commentsProformaInvoiceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CommentsQuote {
            get {
                return this.commentsQuoteField;
            }
            set {
                this.commentsQuoteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CommentsReceipt {
            get {
                return this.commentsReceiptField;
            }
            set {
                this.commentsReceiptField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CommentsShipment {
            get {
                return this.commentsShipmentField;
            }
            set {
                this.commentsShipmentField = value;
            }
        }
        
        /// <remarks/>
        public bool DiscountTypeCullom {
            get {
                return this.discountTypeCullomField;
            }
            set {
                this.discountTypeCullomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DiscountTypeCullomSpecified {
            get {
                return this.discountTypeCullomFieldSpecified;
            }
            set {
                this.discountTypeCullomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int DocumentTemplate {
            get {
                return this.documentTemplateField;
            }
            set {
                this.documentTemplateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentTemplateSpecified {
            get {
                return this.documentTemplateFieldSpecified;
            }
            set {
                this.documentTemplateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Drawing {
            get {
                return this.drawingField;
            }
            set {
                this.drawingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> EarlyPaymentDiscount {
            get {
                return this.earlyPaymentDiscountField;
            }
            set {
                this.earlyPaymentDiscountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EarlyPaymentDiscountSpecified {
            get {
                return this.earlyPaymentDiscountFieldSpecified;
            }
            set {
                this.earlyPaymentDiscountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool EnglishBankDetails {
            get {
                return this.englishBankDetailsField;
            }
            set {
                this.englishBankDetailsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool EnglishBankDetailsSpecified {
            get {
                return this.englishBankDetailsFieldSpecified;
            }
            set {
                this.englishBankDetailsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> HasFixedLatePaymentPenalty {
            get {
                return this.hasFixedLatePaymentPenaltyField;
            }
            set {
                this.hasFixedLatePaymentPenaltyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HasFixedLatePaymentPenaltySpecified {
            get {
                return this.hasFixedLatePaymentPenaltyFieldSpecified;
            }
            set {
                this.hasFixedLatePaymentPenaltyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string HtmlText {
            get {
                return this.htmlTextField;
            }
            set {
                this.htmlTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsDocComment {
            get {
                return this.isDocCommentField;
            }
            set {
                this.isDocCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDocCommentSpecified {
            get {
                return this.isDocCommentFieldSpecified;
            }
            set {
                this.isDocCommentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsDrawing {
            get {
                return this.isDrawingField;
            }
            set {
                this.isDrawingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDrawingSpecified {
            get {
                return this.isDrawingFieldSpecified;
            }
            set {
                this.isDrawingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsEmailComment {
            get {
                return this.isEmailCommentField;
            }
            set {
                this.isEmailCommentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsEmailCommentSpecified {
            get {
                return this.isEmailCommentFieldSpecified;
            }
            set {
                this.isEmailCommentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsNewDesign {
            get {
                return this.isNewDesignField;
            }
            set {
                this.isNewDesignField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNewDesignSpecified {
            get {
                return this.isNewDesignFieldSpecified;
            }
            set {
                this.isNewDesignFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsReplaceCompanyNameWithBranchName {
            get {
                return this.isReplaceCompanyNameWithBranchNameField;
            }
            set {
                this.isReplaceCompanyNameWithBranchNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsReplaceCompanyNameWithBranchNameSpecified {
            get {
                return this.isReplaceCompanyNameWithBranchNameFieldSpecified;
            }
            set {
                this.isReplaceCompanyNameWithBranchNameFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsShowBranchNameOnDocument {
            get {
                return this.isShowBranchNameOnDocumentField;
            }
            set {
                this.isShowBranchNameOnDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsShowBranchNameOnDocumentSpecified {
            get {
                return this.isShowBranchNameOnDocumentFieldSpecified;
            }
            set {
                this.isShowBranchNameOnDocumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsSignature {
            get {
                return this.isSignatureField;
            }
            set {
                this.isSignatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSignatureSpecified {
            get {
                return this.isSignatureFieldSpecified;
            }
            set {
                this.isSignatureFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ItemDiscountCullom {
            get {
                return this.itemDiscountCullomField;
            }
            set {
                this.itemDiscountCullomField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ItemDiscountCullomSpecified {
            get {
                return this.itemDiscountCullomFieldSpecified;
            }
            set {
                this.itemDiscountCullomFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> LatePaymentTax {
            get {
                return this.latePaymentTaxField;
            }
            set {
                this.latePaymentTaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LatePaymentTaxSpecified {
            get {
                return this.latePaymentTaxFieldSpecified;
            }
            set {
                this.latePaymentTaxFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool RoundAmount {
            get {
                return this.roundAmountField;
            }
            set {
                this.roundAmountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RoundAmountSpecified {
            get {
                return this.roundAmountFieldSpecified;
            }
            set {
                this.roundAmountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ShowFaxInDocument {
            get {
                return this.showFaxInDocumentField;
            }
            set {
                this.showFaxInDocumentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowFaxInDocumentSpecified {
            get {
                return this.showFaxInDocumentFieldSpecified;
            }
            set {
                this.showFaxInDocumentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ShowLogoInMail {
            get {
                return this.showLogoInMailField;
            }
            set {
                this.showLogoInMailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowLogoInMailSpecified {
            get {
                return this.showLogoInMailFieldSpecified;
            }
            set {
                this.showLogoInMailFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> ShowVatIncludedCollumn {
            get {
                return this.showVatIncludedCollumnField;
            }
            set {
                this.showVatIncludedCollumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ShowVatIncludedCollumnSpecified {
            get {
                return this.showVatIncludedCollumnFieldSpecified;
            }
            set {
                this.showVatIncludedCollumnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TemplateColor {
            get {
                return this.templateColorField;
            }
            set {
                this.templateColorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TemplateColorSpecified {
            get {
                return this.templateColorFieldSpecified;
            }
            set {
                this.templateColorFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class DocumentCsv : CommonObject {
        
        private string accountBankField;
        
        private double amountField;
        
        private bool amountFieldSpecified;
        
        private string authNumberField;
        
        private string bankField;
        
        private string branchBankField;
        
        private int branchIdField;
        
        private bool branchIdFieldSpecified;
        
        private string cVVField;
        
        private int chargeTypeField;
        
        private bool chargeTypeFieldSpecified;
        
        private string checkNumberField;
        
        private System.Nullable<int> clearingLogIdField;
        
        private bool clearingLogIdFieldSpecified;
        
        private System.Nullable<int> clearingProductCatalogMappingIdField;
        
        private bool clearingProductCatalogMappingIdFieldSpecified;
        
        private string clearingRedirectUrlField;
        
        private string clearingTraceIdField;
        
        private double comissionReductionField;
        
        private bool comissionReductionFieldSpecified;
        
        private string commentsField;
        
        private string couponNameField;
        
        private double couponValueField;
        
        private bool couponValueFieldSpecified;
        
        private int creditCardCompanyTypeField;
        
        private bool creditCardCompanyTypeFieldSpecified;
        
        private string creditNumberField;
        
        private string currencyField;
        
        private string customerEmailField;
        
        private int customerIdField;
        
        private bool customerIdFieldSpecified;
        
        private string customerNameField;
        
        private System.Nullable<System.DateTime> dateField;
        
        private bool dateFieldSpecified;
        
        private string deliveryCityField;
        
        private string deliveryMailBoxField;
        
        private string deliveryReceiverNameField;
        
        private string deliveryStreetField;
        
        private string deliveryStreetNumberField;
        
        private string deliveryZipField;
        
        private bool documentCreatedField;
        
        private bool documentCreatedFieldSpecified;
        
        private string documentIdField;
        
        private DocumentItem[] documentItemsField;
        
        private System.Nullable<long> documentNumberField;
        
        private bool documentNumberFieldSpecified;
        
        private string exerciseSecurityCertificateField;
        
        private string expiryDateField;
        
        private string extraParamsField;
        
        private double firstPaymentField;
        
        private bool firstPaymentFieldSpecified;
        
        private bool foreignCardField;
        
        private bool foreignCardFieldSpecified;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string idNumberField;
        
        private bool isCallBackField;
        
        private bool isCallBackFieldSpecified;
        
        private bool isCaptureTokenOnlyField;
        
        private bool isCaptureTokenOnlyFieldSpecified;
        
        private bool isCreateDocField;
        
        private bool isCreateDocFieldSpecified;
        
        private System.Nullable<bool> isCreditTransactionTypeField;
        
        private bool isCreditTransactionTypeFieldSpecified;
        
        private bool isDeliveryField;
        
        private bool isDeliveryFieldSpecified;
        
        private bool isFromStandingOrderAuroRunField;
        
        private bool isFromStandingOrderAuroRunFieldSpecified;
        
        private bool isGeneralClientField;
        
        private bool isGeneralClientFieldSpecified;
        
        private bool isMobileAppRequestField;
        
        private bool isMobileAppRequestFieldSpecified;
        
        private bool isMobileRequestField;
        
        private bool isMobileRequestFieldSpecified;
        
        private bool isNotifyField;
        
        private bool isNotifyFieldSpecified;
        
        private System.Nullable<bool> isPassParamsInProductPageReturnUrlField;
        
        private bool isPassParamsInProductPageReturnUrlFieldSpecified;
        
        private System.Nullable<bool> isQaEnvField;
        
        private bool isQaEnvFieldSpecified;
        
        private bool isSendMailNotifyField;
        
        private bool isSendMailNotifyFieldSpecified;
        
        private System.Nullable<bool> isSendUserMailField;
        
        private bool isSendUserMailFieldSpecified;
        
        private System.Nullable<bool> isStandingOrderClearanceField;
        
        private bool isStandingOrderClearanceFieldSpecified;
        
        private bool isTokenPaymentField;
        
        private bool isTokenPaymentFieldSpecified;
        
        private string itemDescriptionField;
        
        private string itemsCodeField;
        
        private string itemsPricesField;
        
        private string itemsQuantityField;
        
        private string languageField;
        
        private System.Nullable<bool> lipsReaderRequestField;
        
        private bool lipsReaderRequestFieldSpecified;
        
        private string lipsReaderTrackField;
        
        private string mailToField;
        
        private string messageField;
        
        private System.Nullable<bool> multipleItemsPageField;
        
        private bool multipleItemsPageFieldSpecified;
        
        private System.Nullable<long> numOfCreditPaymentField;
        
        private bool numOfCreditPaymentFieldSpecified;
        
        private int numOfPaymentsField;
        
        private bool numOfPaymentsFieldSpecified;
        
        private double otherPaymentsField;
        
        private bool otherPaymentsFieldSpecified;
        
        private string payerTokenField;
        
        private string paymentIdField;
        
        private string paymentTokenField;
        
        private int paymentTypeField;
        
        private bool paymentTypeFieldSpecified;
        
        private string phoneNumberNotifyField;
        
        private int productIdField;
        
        private bool productIdFieldSpecified;
        
        private string productNameField;
        
        private double quantityField;
        
        private bool quantityFieldSpecified;
        
        private System.Nullable<int> standingOrderDurationField;
        
        private bool standingOrderDurationFieldSpecified;
        
        private string subjectField;
        
        private bool successFullClearingField;
        
        private bool successFullClearingFieldSpecified;
        
        private double taxRateField;
        
        private bool taxRateFieldSpecified;
        
        private int transactionTypeField;
        
        private bool transactionTypeFieldSpecified;
        
        private int userIDField;
        
        private bool userIDFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountBank {
            get {
                return this.accountBankField;
            }
            set {
                this.accountBankField = value;
            }
        }
        
        /// <remarks/>
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AmountSpecified {
            get {
                return this.amountFieldSpecified;
            }
            set {
                this.amountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AuthNumber {
            get {
                return this.authNumberField;
            }
            set {
                this.authNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Bank {
            get {
                return this.bankField;
            }
            set {
                this.bankField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BranchBank {
            get {
                return this.branchBankField;
            }
            set {
                this.branchBankField = value;
            }
        }
        
        /// <remarks/>
        public int BranchId {
            get {
                return this.branchIdField;
            }
            set {
                this.branchIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BranchIdSpecified {
            get {
                return this.branchIdFieldSpecified;
            }
            set {
                this.branchIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CVV {
            get {
                return this.cVVField;
            }
            set {
                this.cVVField = value;
            }
        }
        
        /// <remarks/>
        public int ChargeType {
            get {
                return this.chargeTypeField;
            }
            set {
                this.chargeTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ChargeTypeSpecified {
            get {
                return this.chargeTypeFieldSpecified;
            }
            set {
                this.chargeTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CheckNumber {
            get {
                return this.checkNumberField;
            }
            set {
                this.checkNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClearingLogId {
            get {
                return this.clearingLogIdField;
            }
            set {
                this.clearingLogIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingLogIdSpecified {
            get {
                return this.clearingLogIdFieldSpecified;
            }
            set {
                this.clearingLogIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClearingProductCatalogMappingId {
            get {
                return this.clearingProductCatalogMappingIdField;
            }
            set {
                this.clearingProductCatalogMappingIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ClearingProductCatalogMappingIdSpecified {
            get {
                return this.clearingProductCatalogMappingIdFieldSpecified;
            }
            set {
                this.clearingProductCatalogMappingIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClearingRedirectUrl {
            get {
                return this.clearingRedirectUrlField;
            }
            set {
                this.clearingRedirectUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClearingTraceId {
            get {
                return this.clearingTraceIdField;
            }
            set {
                this.clearingTraceIdField = value;
            }
        }
        
        /// <remarks/>
        public double ComissionReduction {
            get {
                return this.comissionReductionField;
            }
            set {
                this.comissionReductionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ComissionReductionSpecified {
            get {
                return this.comissionReductionFieldSpecified;
            }
            set {
                this.comissionReductionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CouponName {
            get {
                return this.couponNameField;
            }
            set {
                this.couponNameField = value;
            }
        }
        
        /// <remarks/>
        public double CouponValue {
            get {
                return this.couponValueField;
            }
            set {
                this.couponValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CouponValueSpecified {
            get {
                return this.couponValueFieldSpecified;
            }
            set {
                this.couponValueFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CreditCardCompanyType {
            get {
                return this.creditCardCompanyTypeField;
            }
            set {
                this.creditCardCompanyTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreditCardCompanyTypeSpecified {
            get {
                return this.creditCardCompanyTypeFieldSpecified;
            }
            set {
                this.creditCardCompanyTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreditNumber {
            get {
                return this.creditNumberField;
            }
            set {
                this.creditNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerEmail {
            get {
                return this.customerEmailField;
            }
            set {
                this.customerEmailField = value;
            }
        }
        
        /// <remarks/>
        public int CustomerId {
            get {
                return this.customerIdField;
            }
            set {
                this.customerIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerIdSpecified {
            get {
                return this.customerIdFieldSpecified;
            }
            set {
                this.customerIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CustomerName {
            get {
                return this.customerNameField;
            }
            set {
                this.customerNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DateSpecified {
            get {
                return this.dateFieldSpecified;
            }
            set {
                this.dateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeliveryCity {
            get {
                return this.deliveryCityField;
            }
            set {
                this.deliveryCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeliveryMailBox {
            get {
                return this.deliveryMailBoxField;
            }
            set {
                this.deliveryMailBoxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeliveryReceiverName {
            get {
                return this.deliveryReceiverNameField;
            }
            set {
                this.deliveryReceiverNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeliveryStreet {
            get {
                return this.deliveryStreetField;
            }
            set {
                this.deliveryStreetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeliveryStreetNumber {
            get {
                return this.deliveryStreetNumberField;
            }
            set {
                this.deliveryStreetNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DeliveryZip {
            get {
                return this.deliveryZipField;
            }
            set {
                this.deliveryZipField = value;
            }
        }
        
        /// <remarks/>
        public bool DocumentCreated {
            get {
                return this.documentCreatedField;
            }
            set {
                this.documentCreatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentCreatedSpecified {
            get {
                return this.documentCreatedFieldSpecified;
            }
            set {
                this.documentCreatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DocumentId {
            get {
                return this.documentIdField;
            }
            set {
                this.documentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        public DocumentItem[] DocumentItems {
            get {
                return this.documentItemsField;
            }
            set {
                this.documentItemsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> DocumentNumber {
            get {
                return this.documentNumberField;
            }
            set {
                this.documentNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DocumentNumberSpecified {
            get {
                return this.documentNumberFieldSpecified;
            }
            set {
                this.documentNumberFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExerciseSecurityCertificate {
            get {
                return this.exerciseSecurityCertificateField;
            }
            set {
                this.exerciseSecurityCertificateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExpiryDate {
            get {
                return this.expiryDateField;
            }
            set {
                this.expiryDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtraParams {
            get {
                return this.extraParamsField;
            }
            set {
                this.extraParamsField = value;
            }
        }
        
        /// <remarks/>
        public double FirstPayment {
            get {
                return this.firstPaymentField;
            }
            set {
                this.firstPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FirstPaymentSpecified {
            get {
                return this.firstPaymentFieldSpecified;
            }
            set {
                this.firstPaymentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool ForeignCard {
            get {
                return this.foreignCardField;
            }
            set {
                this.foreignCardField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForeignCardSpecified {
            get {
                return this.foreignCardFieldSpecified;
            }
            set {
                this.foreignCardFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string IdNumber {
            get {
                return this.idNumberField;
            }
            set {
                this.idNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool IsCallBack {
            get {
                return this.isCallBackField;
            }
            set {
                this.isCallBackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCallBackSpecified {
            get {
                return this.isCallBackFieldSpecified;
            }
            set {
                this.isCallBackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsCaptureTokenOnly {
            get {
                return this.isCaptureTokenOnlyField;
            }
            set {
                this.isCaptureTokenOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCaptureTokenOnlySpecified {
            get {
                return this.isCaptureTokenOnlyFieldSpecified;
            }
            set {
                this.isCaptureTokenOnlyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsCreateDoc {
            get {
                return this.isCreateDocField;
            }
            set {
                this.isCreateDocField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCreateDocSpecified {
            get {
                return this.isCreateDocFieldSpecified;
            }
            set {
                this.isCreateDocFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsCreditTransactionType {
            get {
                return this.isCreditTransactionTypeField;
            }
            set {
                this.isCreditTransactionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsCreditTransactionTypeSpecified {
            get {
                return this.isCreditTransactionTypeFieldSpecified;
            }
            set {
                this.isCreditTransactionTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsDelivery {
            get {
                return this.isDeliveryField;
            }
            set {
                this.isDeliveryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsDeliverySpecified {
            get {
                return this.isDeliveryFieldSpecified;
            }
            set {
                this.isDeliveryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsFromStandingOrderAuroRun {
            get {
                return this.isFromStandingOrderAuroRunField;
            }
            set {
                this.isFromStandingOrderAuroRunField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsFromStandingOrderAuroRunSpecified {
            get {
                return this.isFromStandingOrderAuroRunFieldSpecified;
            }
            set {
                this.isFromStandingOrderAuroRunFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsGeneralClient {
            get {
                return this.isGeneralClientField;
            }
            set {
                this.isGeneralClientField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsGeneralClientSpecified {
            get {
                return this.isGeneralClientFieldSpecified;
            }
            set {
                this.isGeneralClientFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsMobileAppRequest {
            get {
                return this.isMobileAppRequestField;
            }
            set {
                this.isMobileAppRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsMobileAppRequestSpecified {
            get {
                return this.isMobileAppRequestFieldSpecified;
            }
            set {
                this.isMobileAppRequestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsMobileRequest {
            get {
                return this.isMobileRequestField;
            }
            set {
                this.isMobileRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsMobileRequestSpecified {
            get {
                return this.isMobileRequestFieldSpecified;
            }
            set {
                this.isMobileRequestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsNotify {
            get {
                return this.isNotifyField;
            }
            set {
                this.isNotifyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsNotifySpecified {
            get {
                return this.isNotifyFieldSpecified;
            }
            set {
                this.isNotifyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsPassParamsInProductPageReturnUrl {
            get {
                return this.isPassParamsInProductPageReturnUrlField;
            }
            set {
                this.isPassParamsInProductPageReturnUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPassParamsInProductPageReturnUrlSpecified {
            get {
                return this.isPassParamsInProductPageReturnUrlFieldSpecified;
            }
            set {
                this.isPassParamsInProductPageReturnUrlFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsQaEnv {
            get {
                return this.isQaEnvField;
            }
            set {
                this.isQaEnvField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsQaEnvSpecified {
            get {
                return this.isQaEnvFieldSpecified;
            }
            set {
                this.isQaEnvFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsSendMailNotify {
            get {
                return this.isSendMailNotifyField;
            }
            set {
                this.isSendMailNotifyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSendMailNotifySpecified {
            get {
                return this.isSendMailNotifyFieldSpecified;
            }
            set {
                this.isSendMailNotifyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsSendUserMail {
            get {
                return this.isSendUserMailField;
            }
            set {
                this.isSendUserMailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsSendUserMailSpecified {
            get {
                return this.isSendUserMailFieldSpecified;
            }
            set {
                this.isSendUserMailFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> IsStandingOrderClearance {
            get {
                return this.isStandingOrderClearanceField;
            }
            set {
                this.isStandingOrderClearanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsStandingOrderClearanceSpecified {
            get {
                return this.isStandingOrderClearanceFieldSpecified;
            }
            set {
                this.isStandingOrderClearanceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsTokenPayment {
            get {
                return this.isTokenPaymentField;
            }
            set {
                this.isTokenPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsTokenPaymentSpecified {
            get {
                return this.isTokenPaymentFieldSpecified;
            }
            set {
                this.isTokenPaymentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemDescription {
            get {
                return this.itemDescriptionField;
            }
            set {
                this.itemDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemsCode {
            get {
                return this.itemsCodeField;
            }
            set {
                this.itemsCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemsPrices {
            get {
                return this.itemsPricesField;
            }
            set {
                this.itemsPricesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ItemsQuantity {
            get {
                return this.itemsQuantityField;
            }
            set {
                this.itemsQuantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> LipsReaderRequest {
            get {
                return this.lipsReaderRequestField;
            }
            set {
                this.lipsReaderRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LipsReaderRequestSpecified {
            get {
                return this.lipsReaderRequestFieldSpecified;
            }
            set {
                this.lipsReaderRequestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LipsReaderTrack {
            get {
                return this.lipsReaderTrackField;
            }
            set {
                this.lipsReaderTrackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MailTo {
            get {
                return this.mailToField;
            }
            set {
                this.mailToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> MultipleItemsPage {
            get {
                return this.multipleItemsPageField;
            }
            set {
                this.multipleItemsPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MultipleItemsPageSpecified {
            get {
                return this.multipleItemsPageFieldSpecified;
            }
            set {
                this.multipleItemsPageFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<long> NumOfCreditPayment {
            get {
                return this.numOfCreditPaymentField;
            }
            set {
                this.numOfCreditPaymentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumOfCreditPaymentSpecified {
            get {
                return this.numOfCreditPaymentFieldSpecified;
            }
            set {
                this.numOfCreditPaymentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int NumOfPayments {
            get {
                return this.numOfPaymentsField;
            }
            set {
                this.numOfPaymentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NumOfPaymentsSpecified {
            get {
                return this.numOfPaymentsFieldSpecified;
            }
            set {
                this.numOfPaymentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double OtherPayments {
            get {
                return this.otherPaymentsField;
            }
            set {
                this.otherPaymentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OtherPaymentsSpecified {
            get {
                return this.otherPaymentsFieldSpecified;
            }
            set {
                this.otherPaymentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PayerToken {
            get {
                return this.payerTokenField;
            }
            set {
                this.payerTokenField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PaymentId {
            get {
                return this.paymentIdField;
            }
            set {
                this.paymentIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PaymentToken {
            get {
                return this.paymentTokenField;
            }
            set {
                this.paymentTokenField = value;
            }
        }
        
        /// <remarks/>
        public int PaymentType {
            get {
                return this.paymentTypeField;
            }
            set {
                this.paymentTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentTypeSpecified {
            get {
                return this.paymentTypeFieldSpecified;
            }
            set {
                this.paymentTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PhoneNumberNotify {
            get {
                return this.phoneNumberNotifyField;
            }
            set {
                this.phoneNumberNotifyField = value;
            }
        }
        
        /// <remarks/>
        public int ProductId {
            get {
                return this.productIdField;
            }
            set {
                this.productIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductIdSpecified {
            get {
                return this.productIdFieldSpecified;
            }
            set {
                this.productIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
            }
        }
        
        /// <remarks/>
        public double Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QuantitySpecified {
            get {
                return this.quantityFieldSpecified;
            }
            set {
                this.quantityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> StandingOrderDuration {
            get {
                return this.standingOrderDurationField;
            }
            set {
                this.standingOrderDurationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StandingOrderDurationSpecified {
            get {
                return this.standingOrderDurationFieldSpecified;
            }
            set {
                this.standingOrderDurationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Subject {
            get {
                return this.subjectField;
            }
            set {
                this.subjectField = value;
            }
        }
        
        /// <remarks/>
        public bool SuccessFullClearing {
            get {
                return this.successFullClearingField;
            }
            set {
                this.successFullClearingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SuccessFullClearingSpecified {
            get {
                return this.successFullClearingFieldSpecified;
            }
            set {
                this.successFullClearingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double TaxRate {
            get {
                return this.taxRateField;
            }
            set {
                this.taxRateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaxRateSpecified {
            get {
                return this.taxRateFieldSpecified;
            }
            set {
                this.taxRateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TransactionType {
            get {
                return this.transactionTypeField;
            }
            set {
                this.transactionTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TransactionTypeSpecified {
            get {
                return this.transactionTypeFieldSpecified;
            }
            set {
                this.transactionTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int UserID {
            get {
                return this.userIDField;
            }
            set {
                this.userIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserIDSpecified {
            get {
                return this.userIDFieldSpecified;
            }
            set {
                this.userIDFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.datacontract.org/2004/07/Invoice.Common")]
    public partial class ClientCsv : CommonObject {
        
        private string accountingEmailField;
        
        private string accountingNameField;
        
        private string accountingPhoneField;
        
        private string bussinesNumberField;
        
        private string cellField;
        
        private string cityField;
        
        private string contactEmailField;
        
        private string contactNameField;
        
        private string countryField;
        
        private string emailField;
        
        private string extrnalNumberField;
        
        private string faxField;
        
        private int idField;
        
        private bool idFieldSpecified;
        
        private string internalNoteField;
        
        private string nameField;
        
        private string nonNumericBusinessNumberField;
        
        private int organizationIdField;
        
        private bool organizationIdFieldSpecified;
        
        private int paymentsField;
        
        private bool paymentsFieldSpecified;
        
        private string phoneField;
        
        private string streetField;
        
        private string zipField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountingEmail {
            get {
                return this.accountingEmailField;
            }
            set {
                this.accountingEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountingName {
            get {
                return this.accountingNameField;
            }
            set {
                this.accountingNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AccountingPhone {
            get {
                return this.accountingPhoneField;
            }
            set {
                this.accountingPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string BussinesNumber {
            get {
                return this.bussinesNumberField;
            }
            set {
                this.bussinesNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Cell {
            get {
                return this.cellField;
            }
            set {
                this.cellField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactEmail {
            get {
                return this.contactEmailField;
            }
            set {
                this.contactEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ExtrnalNumber {
            get {
                return this.extrnalNumberField;
            }
            set {
                this.extrnalNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IDSpecified {
            get {
                return this.idFieldSpecified;
            }
            set {
                this.idFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string InternalNote {
            get {
                return this.internalNoteField;
            }
            set {
                this.internalNoteField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string NonNumericBusinessNumber {
            get {
                return this.nonNumericBusinessNumberField;
            }
            set {
                this.nonNumericBusinessNumberField = value;
            }
        }
        
        /// <remarks/>
        public int OrganizationId {
            get {
                return this.organizationIdField;
            }
            set {
                this.organizationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OrganizationIdSpecified {
            get {
                return this.organizationIdFieldSpecified;
            }
            set {
                this.organizationIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Payments {
            get {
                return this.paymentsField;
            }
            set {
                this.paymentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PaymentsSpecified {
            get {
                return this.paymentsFieldSpecified;
            }
            set {
                this.paymentsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VerifyLoginCompletedEventHandler(object sender, VerifyLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void VerifyLoginRESTCompletedEventHandler(object sender, VerifyLoginRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class VerifyLoginRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal VerifyLoginRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void IsAuthenticatedCompletedEventHandler(object sender, IsAuthenticatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsAuthenticatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsAuthenticatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void LogoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetBranchesCompletedEventHandler(object sender, GetBranchesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBranchesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Branch[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Branch[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateDocumentCompletedEventHandler(object sender, CreateDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateDocumentRESTCompletedEventHandler(object sender, CreateDocumentRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateDocumentRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateDocumentRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentByApiIdentifierCompletedEventHandler(object sender, GetDocumentByApiIdentifierCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentByApiIdentifierCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentByApiIdentifierCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentByApiIdentifierRESTCompletedEventHandler(object sender, GetDocumentByApiIdentifierRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentByApiIdentifierRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentByApiIdentifierRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentsCompletedEventHandler(object sender, GetDocumentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfDocumentJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfDocumentJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentsRESTCompletedEventHandler(object sender, GetDocumentsRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentsRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentsRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfDocumentJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfDocumentJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InitDocumentCompletedEventHandler(object sender, InitDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ChangeDocumentStatusCompletedEventHandler(object sender, ChangeDocumentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeDocumentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeDocumentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentCompletedEventHandler(object sender, GetDocumentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentByNumberCompletedEventHandler(object sender, GetDocumentByNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentByNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentByNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerReportCompletedEventHandler(object sender, GetCustomerReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfDocumentJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfDocumentJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetDocumentByNumberRESTCompletedEventHandler(object sender, GetDocumentByNumberRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentByNumberRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentByNumberRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Document Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Document)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateCreditCardCompletedEventHandler(object sender, CreateCreditCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCreditCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCreditCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreditCompany Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreditCompany)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetListCompletedEventHandler(object sender, GetListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfCurrencyJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfCurrencyJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateCustomerCompletedEventHandler(object sender, CreateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateCustomerRESTCompletedEventHandler(object sender, CreateCustomerRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CreateCustomerParamsRESTCompletedEventHandler(object sender, CreateCustomerParamsRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerParamsRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerParamsRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateCustomerCompletedEventHandler(object sender, UpdateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetFullCustomerCompletedEventHandler(object sender, GetFullCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomersByOrgIdCompletedEventHandler(object sender, GetCustomersByOrgIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByOrgIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByOrgIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfCustomerJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomersByOrgIdRESTCompletedEventHandler(object sender, GetCustomersByOrgIdRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersByOrgIdRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersByOrgIdRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfCustomerJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomersCompletedEventHandler(object sender, GetCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfCustomerJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomersRESTCompletedEventHandler(object sender, GetCustomersRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfCustomerJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfCustomerJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerByNameCompletedEventHandler(object sender, GetCustomerByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerByClientCodeCompletedEventHandler(object sender, GetCustomerByClientCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByClientCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByClientCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerByGuidCompletedEventHandler(object sender, GetCustomerByGuidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByGuidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByGuidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerByGuidInnerSearchCompletedEventHandler(object sender, GetCustomerByGuidInnerSearchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByGuidInnerSearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByGuidInnerSearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetByClientCodeCompletedEventHandler(object sender, GetByClientCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetByClientCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetByClientCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCustomerByExternalNumberCompletedEventHandler(object sender, GetCustomerByExternalNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerByExternalNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerByExternalNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Customer Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Customer)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetAssociatedEmailsByClientOnlyCompletedEventHandler(object sender, GetAssociatedEmailsByClientOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssociatedEmailsByClientOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssociatedEmailsByClientOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AssociatedEmail[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AssociatedEmail[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCatalogItemByCodeCompletedEventHandler(object sender, GetCatalogItemByCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatalogItemByCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCatalogItemByCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CatalogItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CatalogItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetCatalogItemsCompletedEventHandler(object sender, GetCatalogItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCatalogItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCatalogItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfCatalogItemJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfCatalogItemJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetUserClearingAccountCompletedEventHandler(object sender, GetUserClearingAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserClearingAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserClearingAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClearingAccount Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClearingAccount)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendDocumentByMailCompletedEventHandler(object sender, SendDocumentByMailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDocumentByMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDocumentByMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SendStandingOrderSummaryCompletedEventHandler(object sender, SendStandingOrderSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendStandingOrderSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendStandingOrderSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool SendStandingOrderSummaryResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool SendStandingOrderSummaryResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ProcessCardCompletedEventHandler(object sender, ProcessCardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentCsv Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentCsv)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ProcessClearingDocOnlyCompletedEventHandler(object sender, ProcessClearingDocOnlyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessClearingDocOnlyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessClearingDocOnlyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentCsv Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentCsv)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void InsertToLogFullParamsRESTCompletedEventHandler(object sender, InsertToLogFullParamsRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertToLogFullParamsRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertToLogFullParamsRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int InsertToLogFullParamsRESTResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool InsertToLogFullParamsRESTResultSpecified {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ProcessApiRequestCompletedEventHandler(object sender, ProcessApiRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessApiRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessApiRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiClearingRequest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiClearingRequest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ProcessApiRequestFullContentsRESTCompletedEventHandler(object sender, ProcessApiRequestFullContentsRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessApiRequestFullContentsRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessApiRequestFullContentsRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ApiClearingRequest Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ApiClearingRequest)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ProccessApiRequestClearingLogInsertRESTCompletedEventHandler(object sender, ProccessApiRequestClearingLogInsertRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProccessApiRequestClearingLogInsertRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProccessApiRequestClearingLogInsertRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClearingLog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClearingLog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void TokenAddForClientCompletedEventHandler(object sender, TokenAddForClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TokenAddForClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TokenAddForClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationTokenDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationTokenDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AddStandingOrderCompletedEventHandler(object sender, AddStandingOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddStandingOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddStandingOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClientsStandingOrder Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClientsStandingOrder)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetProductsCompletedEventHandler(object sender, GetProductsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfClearingProductsJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfClearingProductsJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetProductByIdCompletedEventHandler(object sender, GetProductByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProductByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProductByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ClearingProducts Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ClearingProducts)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetClearingProductOrdersByTokenCompletedEventHandler(object sender, GetClearingProductOrdersByTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClearingProductOrdersByTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClearingProductOrdersByTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetClearingProductOrdersByProductIdCompletedEventHandler(object sender, GetClearingProductOrdersByProductIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClearingProductOrdersByProductIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClearingProductOrdersByProductIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonCollectionOfArrayOfClearingProductsOrderJHiVxprS)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ProcessRequestFullContentsCompletedEventHandler(object sender, ProcessRequestFullContentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessRequestFullContentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessRequestFullContentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MeshulamClearingApi Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MeshulamClearingApi)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ProcessRequestFullContentsRESTCompletedEventHandler(object sender, ProcessRequestFullContentsRESTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessRequestFullContentsRESTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessRequestFullContentsRESTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public MeshulamClearingApi Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((MeshulamClearingApi)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UserRegistrationCompletedEventHandler(object sender, UserRegistrationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserRegistrationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserRegistrationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CommonObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CommonObject)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591